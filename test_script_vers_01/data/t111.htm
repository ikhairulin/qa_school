






<div class="mailru-visibility-check"> <span class="mailru-visibility-check-counter" data-counter="https://rs.mail.ru/pixel/AAD99gEp1UJkmrJv27cJ__8umIEC6QoCH3M9Va3ere3lZeixJJZPmLOfRAaep15s65dMMET3WkZ5AjxcEbGJGMoQqyaRINjF6BiJZqUDfMpG5kAOyJkX3t5wu8BDY56ugqk0dpueZoVH6uwBp0wPYdXNt5Vs7i3QdVcD0RiFeSJYUV0t0u-MbEyyAAAApcUKVnRYpwrc48fTCodgDCpsAUxT_t9hjAkg7OFCNEO6XBr2tZdWjfuptzVpULrAh3FmufQL0qIfHEQq1V4n6k67Dt-O7VudvjCDpVqYJ_4vsJNiFcdAxLOrf4NTm-HrKD1Ci7zEau0AOhhpWKholt91Dk381-6fF1e9n_GGemtDbL-c9rHVz5LF-v7zMjiupoIOAVN4kL2Ej_mdNPp9JGWUv98G-pcAFnWBcOOcRn4I4DGB-KtvGaOPCLcK463j.gif" style="display:none"></span> <img src="https://rs.mail.ru/pixel/AAD99gEp1UJkmrJv27cJ__8umIEC6QoCH3M9Va3ere3lZeixJJZPmLOfRAaep15s65dMMET3WkZ5AjxcEbGJGMoQqyaRINjF6BiJZqUDfMpG5kAOyJkX3t5wu8BDY56ugqk0dpueZoVH6uwBp0wPYdXNt5Vs7i3QdVcD0RiFeSJYUV0t0usHkiCvAAAA-erBar1R4yFwiL3WL_6D2jb-8WFeAnFzGgb2IfR5aZawKEfB5JrrPdVEgiVYo2cdIOV1w0Ix_J155Ra_9TxW7QAEAE0xMxh81Kd3WqpPFkktWNi9uyrlXTGMCmi7RPK517ATfBynOrIq_5ma-2EuW2izZVdMWmVrNZb1Z11MHq4VVTgvxFrkLI6zy7foa643HVs-Iwql_oaAuBC4nFV7Ky67EVuCk_-LIZS9t7_sl4M.gif" style="width:0;height:0;position:absolute;visibility:hidden;" alt=""/>


<!-- t1  -->
<!-- t2  -->
<!-- t3 7000 -->
<!-- aw  -->













    
    
    
    
    
    
    
    
    


    
    








<!-- 6477 -->
    
    
    <!-- multi -->
        
        
        
        
        







<!-- 2145 -->
        
        <div class="trg-b-wrap trg-b-media" id="trg-b-119817434-557487160" data-hide-557487160="hide-banner" style="display:block;">
          <div id="b145849616_1257531963"></div><style> {border-radius:12px !important; overflow:hidden !important; isolation: isolate; }</style><script>(function() {try {var data = {"creativeType": "video240x400rounded",
 "libjs": "https://r.mradx.net/img/2C/90961A.js",
 "libcss": "https://r.mradx.net/img/AB/B3B581.css","placeholderID": "b145849616_1257531963","width": 240,"height": 400,"category": "colorized","banner": {"title": "Ваши друзья — наши друзья","description": "Рекомендуйте Альфа-Банк друзьям. Платим за каждую карту, заказанную по вашей ссылке.","icon": {"type": "static","url": "//r.mradx.net/img/25/C03733.png"},"overlay": {"type": "static","url": "//r.mradx.net//img/6B/21FBB4.jpg",},"video": {"type": "static","url": "https://r.mradx.net/img/E4/1091DC.mp4","width": 360,"height": 640,"loop": false,"urlToNavigateOnClick": "https://t.mail.ru/redir/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2upcAiXP6AgAA0RX2FWiNOOe7ghuEk4jJsoe1LJ0L885MZUDusTdaTqzOHRJfcFUhny3A_656mqTYw0BBvSCx7yWC_3Gft8rL1SuZNX6aBiMMrQXUcuuyGUYe-540pve3kKxl3zXeO69KD3IKaZC4jaV-kaDdk4RHEK03ouR16flslIHvFvFwvLX1Te2YREMta4iOEygXVC2StgUHsQJ1xp2LVuZlfFy1lOHexoIKunUKDoTNVg7NbJoRKgzMvgXL7kE8ZWtGkAyLsXvSmZy6_Rjvre-yY6VM_A9cmFYHJ7y71AZxiGb5b-Wmx_ItjJAQzjXvlOu87_4LDcYd025aSla1xWH2RWTJxeC8OMQp3Lk9rKt8-ZHwjREA4jV7QDtCGvG6R5i6h5QEHCNVb__rSMZPvneZ6LKGt3YvrFK4Azw8fHi_ONG_stgQJizf99VPNeS2x9cY1bIAB-u4ENVt1htS5k9bkTd3fMIB-i9FCXSfGXGilE2AJ60lM4Z79Cg2t29RIF587Et57jXwJG2Ime1_XDr2t7aBlkEAT2eSfyGWSJA79qRqc5ZavFBpJZYJDJ9KCJw2W2JGLGN_1pXoxFvBkzYpGzexS1jEhHqkRoa0V2gp36jPN4XTkVO-KURtACa0pnL1BUMmhw-5wWkGeGLAcVAd088VslZMch1u-8rUJljAwrXZWvNK3f3ZN6sV2eN0y29TmlEFTOKvSJ4dpfa5llBqLdYg_DATHjAKWlAqxPN5aT36ocUG40rbWDMYi9542EOO00hPF77HoDlVIHQIw94eX2GTBBcbrAuhWtXL1Ny5A5EnrZzJkwHJLFUHb2JAUCb5hgCp3J5XayFI5gG3NijNeIhn6KZ5C3j_2j3k5QyArcZsmAKMLofH0DSLVxfzYR0pHaJ0RR7reC8YmAb2Xj-oyP5-sijS5oZ6Z-sEWv2wiQct5P-1WiqxXwy0dQ-n_Si-sxlF0XeR52SGdur9_4O83P9OfG0H5Ev2cQbHfbYJnvQId7CCgJUjqpUk1yf4Y-fug7_0:2VtzqxAgHKv",},"domain": "alfabank.ru","ctaText": "Подробнее","trackingLink": "https://t.mail.ru/redir/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2upcAiXP6AgAA0RX2FWiNOOe7ghuEk4jJsoe1LJ0L885MZUDusTdaTqzOHRJfcFUhny3A_656mqTYw0BBvSCx7yWC_3Gft8rL1SuZNX6aBiMMrQXUcuuyGUYe-540pve3kKxl3zXeO69KD3IKaZC4jaV-kaDdk4RHEK03ouR16flslIHvFvFwvLX1Te2YREMta4iOEygXVC2StgUHsQJ1xp2LVuZlfFy1lOHexoIKunUKDoTNVg7NbJoRKgzMvgXL7kE8ZWtGkAyLsXvSmZy6_Rjvre-yY6VM_A9cmFYHJ7y71AZxiGb5b-Wmx_ItjJAQzjXvlOu87_4LDcYd025aSla1xWH2RWTJxeC8OMQp3Lk9rKt8-ZHwjREA4jV7QDtCGvG6R5i6h5QEHCNVb__rSMZPvneZ6LKGt3YvrFK4Azw8fHi_ONG_stgQJizf99VPNeS2x9cY1bIAB-u4ENVt1htS5k9bkTd3fMIB-i9FCXSfGXGilE2AJ60lM4Z79Cg2t29RIF587Et57jXwJG2Ime1_XDr2t7aBlkEAT2eSfyGWSJA79qRqc5ZavFBpJZYJDJ9KCJw2W2JGLGN_1pXoxFvBkzYpGzexS1jEhHqkRoa0V2gp36jPN4XTkVO-KURtACa0pnL1BUMmhw-5wWkGeGLAcVAd088VslZMch1u-8rUJljAwrXZWvNK3f3ZN6sV2eN0y29TmlEFTOKvSJ4dpfa5llBqLdYg_DATHjAKWlAqxPN5aT36ocUG40rbWDMYi9542EOO00hPF77HoDlVIHQIw94eX2GTBBcbrAuhWtXL1Ny5A5EnrZzJkwHJLFUHb2JAUCb5hgCp3J5XayFI5gG3NijNeIhn6KZ5C3j_2j3k5QyArcZsmAKMLofH0DSLVxfzYR0pHaJ0RR7reC8YmAb2Xj-oyP5-sijS5oZ6Z-sEWv2wiQct5P-1WiqxXwy0dQ-n_Si-sxlF0XeR52SGdur9_4O83P9OfG0H5Ev2cQbHfbYJnvQId7CCgJUjqpUk1yf4Y-fug7_0:2VtzqxAgHKv","trackingLinkUrlTypes": "external,external_new","trackingLinkTrackerTypes": "0","id": 145849616},"pad": {"isLogo": true,"openInBrowser": false,"styles": {}},"themes": {"septima": "",
"ponymode": "",
"rounded": "1",
"exp_id": "492",
"in3paneMetathread": "",
"isDarkTheme": "",
"DT_bg": "ffffff",
"DT_borderColor": "ffffff",
"DT_titleHoverColor": "333333",
"DT_titleColor": "005bd1",
"DT_textColor": "",
"DT_urlColor": "999999",
"DT_bgHover": "ffffff",
"DT_hoverColor": "",
"DT_top": "",
"DT_topHover": "",
"DT_sentMsgOkBg": "ffffff",
"DT_sentMsgOkBgHover": "ffffff",
"DT_sentMsgOkBorderColor": "ffffff",
"DT_sentMsgOkTextColor": "",
"DT_sentMsgOkTitleColor": "005bd1",
"DT_sentMsgOkTitleHoverColor": "333333",
"DT_siteBgColor": "ffffff",
"DT_leftHover": "",
"DT_leftLink": "",
"DT_leftText": "",
"DT_listBg": "f0f5ff",
"DT_listBgHover": "f0f5ff",
"DT_listBorderColor": "ffffff",
"DT_listTextColor": "93969B",
"DT_listTitleColor": "005BD1",
"DT_listTitleHoverColor": "333333",
"DT_listButtonBgColor": "ffffff",
"DT_listButtonTextColor": "333333",
"DT_listButtonTextHoverColor": "005BD1",
"DT_listButtonBorderColor": "e2e2e1",
"DT_listButtonBorderHoverColor": "005BD1",
"DT_listButtonBgHoverColor": "ffffff",
"cloudBgColor": "",
"cloudTextColor": "",
"cloudTopHoverColor": ""},"statistics": [   

{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2unecBV8sAQAAQpV0eoBjY5ZiH25WJVTkeCLYAbKeJrHRHV59dlOrIpKV1-OjcJpNiwMTKD6fAhYAZSVTjM7Z9663v95jgH2UEP6RNToybwF3oTj5k_SoyGSsrZKD0diuO-l0KEqGAkDRh-qQJglG740gMMcvi9biILFeJUo9bww_Ga9Y4RYun7wAuUhEW9hs37OcdvVDn1Q_SD1DqyP_KFJa_YPwSlXq8dtMPXxQhrZNt7MRQmYSGuHs0bsu_JGZ4y4Epkxu8bMNZ4LIaVPZxnzQsPMyrmmgfkTdDGOM1ZxT4wTnllbVVJVBgZcv6VoxwpN_BWMMPFiQc9f5fdrhnMUA2j1FPABcyGF7VBMjx13pjgSSlMuc2Cq2XW6wSH5cgwh5PhsMswUGpTZA3q2ezbNNyCp80cJ4Pw.gif", "type": "playbackStarted"},
{"url": "https://www.tns-counter.ru/V13a****mail_network/ru/CP1251/tmsec=mail_network/1257531963", "type": "playbackStarted"},
{"url": "https://www.tns-counter.ru/V13a**crid:21342631**cat_ad/ru/UTF-8/tmsec=catad_mailru/", "type": "playbackStarted"},{"url": "https://www.tns-counter.ru/V13a**dvtp:1:pad:958765**mail_network/ru/CP1251/tmsec=mailnet_sa-24/1257531963", "type": "playbackStarted"},
{"url": "https://ad.adriver.ru/cgi-bin/event.cgi?sid=1&bt=76&tuid=1&ad=768141&pid=3754270&bid=9412847&bn=9412847&exss=5e42127d43b28e88&type=0&custom=Impression&rnd=1359433574", "type": "playbackStarted"},{"url": "https://www.tns-counter.ru/V13a**dvtp:1**ar_ru/ru/UTF-8/tmsec=34250_768141-3754270/499211700", "type": "playbackStarted"},{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uj4ShygIAQAArIuIOo-iT34H83lA8fYVMlsobHNVSWrXEmQBka-BwLHmXEd22m9Tb-5H8yu5MioXDb9IpAxHnG5HD1ffAt6qo6CHQ2AHFp2gf92dnnQw7q5IN344vLpf2cXe6P5YZ21IqsFndN8AmRTeuA3b337hGhUhdQitgjkZbRnPVUntsemT_QcwECpVXssJdHjb1mlAdLBYSKFrQlmDSVYXZUSVRim2YYZB3LIbxaAqWDivGoIkdu_EJ_XooaPigJJKAiB8vL83Ez2vJCs6O2JN8hR4LgWV2pRRL_SRpK4-0iofXuOhpbvNQzQp-PucQ8hyYMrzgDoPd8zRBTmWEsVev_hir1o7n_tADP1BoZFz5cvBXxI.gif", "type": "playbackPaused"},{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2ug3R-V4IAQAA8UBIya9EHd3FqzTFqqyzSekIF4tjWZYn6flII7Rbf_DfQdyGiDZYict_fHKVEmZ8DNkXWUNNIUyB0kI-6i4dBfOQ4CoyuMc2Z62zOoHIJcMqhRHaRar7bMEcA568Dg4RHus5hORpVm6Sy-UWWfKz1_uRiiPDHVX0IJHeOeqEhGYcSpdV6WGhpMzcL8R8XmkPfi0AA9uxGBpWf0xC7By9tLm7izteve8Va32x4rkh3BSMB2esBPN-uj8ZPRmMIANhBVxvPH4Fh__qXtXgc2RXWy-jisINVutz2HMe_vSDgctjjTM4c0Lza-kX0JjQUy_R1M-SagcQagtTwYMHSiGTboSbIXgpP2kZPncRWbkBxds.gif", "type": "playbackResumed"},{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2ul6CNUUIAQAAnsbYRbwAhGKSzUsIrc3JF0yGaKBrjaz4nJXdzfGsVJgEto2T0Nd1hUy9G6senExRg30kY-9EoB-ohebjBM-5jJ4mfq3AYQcZy5hm1cHHVSVU2Ei6AuFrqlPberPzzEvuGghe106uaBIJRZf6Ic1tzqz9MWeN0pYOnlcRtJ5Ri3nYSjx0M5Ba16apiw2W81XeGZ5WZ2AxZ6EqDk8SOsRhRP1oLB1Jm7q8TrNIlY9V03BhFd6PGz3K7zKgffyLtV_1qF85WaAEmE27t9Up1HwvquN1pGcKbsqDlWTeqqtO3AMG2DN1qulSFusysGumNCyw60M9GjaFnLIrtrup63SKOVfUUeEjkbFlCrg0YxOQCQ8.gif", "type": "playbackCompleted"},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uvZW5xAgAQAA_NYt3r3Dv05IG782ipGrjp-O0IbXsyiX1t57ZDC82pEZD4wpEOEDjwPJKcGOmoK_sFI-67z5Q4M9rE-iL8q7PF9UHIcIz4w_OvLaO4xOkopzL_22sXRvc8eC8GkJVe2OJgFIjlSPIFqJFeDPdkqIqEh1G6TGh8z-w2CJyyD5Ry2vBeQBDmQfRBaIOakXme2t18Gi3zeqeLxjTAm-8MQHPGkJRpnOuapmecFJYFekpf_nQsHR0JyTirqYU5RZaOHevQ3-ov2x50p0hHO5T8XA32kfRHwERwL8o7DP7x124q6PR_2mgvahmWruKdoD8_X8bWKNHYXcP_FOzH1ZfwK9hupDc-b2TdmFUVmTG6Pr8S7z2aX8mvJiaOzrljUgUily.gif","type": "playheadReachedValue", "value":"10"},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uuuVNzELAQAAp6imkJ1rfCdRJ9awlYSyM192DRUK5sPe8CCQZv74vWco8ShNTNjZnbieQFyEHDSoXABOSMYg2OgOXmTEvVs3_e5kkd-5c1nJV9ONqnITOcX1Y1fdtjG03-9_CAFZ2-r6xhko8wtfDI7VLKzy-Vn2eFtuJcl8ghZYT0D669NQUub78OxVaslbj232WlwQtvUmwB0ydfVFnLW4qbHp2I3eF_CGz2m1QxVDfwpEkHAVvqP4qQKS8mG6cC-yNPoU8pL-6pPh8-ag1Fw2eyx2ng8Wan2E9QASfolZAKRXwu3bOJWA6lEJWmBsBUg--95rb1PI41olkVafb8b_M087UkFrwtGPJmz1BZUOABFomgwoBjw.gif", "type": "playheadReachedValue", "pvalue": 25},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2usFz7nkLAQAAoWMc9127aJxgaU15BFQyeHmpsIYFnZDel557An33HRUXVxO6N3Ov8hk6MbzPhjQKG3TmF6UnUCrag9oOc5icvmFmfVkuZjzRvwRMSMtnouViHtdeKfdBEiD9_CY9F7qAdA6aZCwByJfOc7D15lUPB2HsfWmfVPXNkNl0FYlc0ZSO3j9jzqRp7USssxGN1-VvOH_FJVrmQoWPBKuLqfc9wUYcXwKNwSzgKcJ8-6nAybrqeFAgJw3uubQ5-_-9i-dDJUWTR-sO1U7-xWjuefLjk0A8Hg8n9lyefRkemUPv8H_X83p38dxB0ZxEt5xmWinGOxaPtpdlgN2Mxb9grg3NCeYC-rnjXfKuGGdeW0rcLZs.gif", "type": "playheadReachedValue", "pvalue": 50},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uuhF_ycLAQAAGg9zSDRPdhyTeBB0qOB_TuZfID0nY7LOH_2TJJqXDKx_isGehufm0QU8jIFXO-1DeJ7J8PiMGooEgUC9Wh02jlTU3fsub3IaRdJaDnAk-Vlq14SFnKMRBHRSUVzPIcG4WIG3TWJ1uXTykRqzLhsbcg6nREEL_iwaoru2rCeGDSvjQxX5S6DZKcmMvSbXSj-70ptCaFzuy3ZLB_qdoZFcoQDSlNfJWYPZRHlM4cQetC4L318jVk0pn8DkEhlldFowqaWMp5z_tQuJ9BswPJ_bTC9K54JYM7vjpn-UIyBdxOa7OYshs6BYgeZPyPysDzCflPBRvwv8PRbh-6YTxJ9AtQMN-jGWaLXnfd8LmjKQvLY.gif", "type": "playheadReachedValue", "pvalue": 75},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2ukh6MhAsAQAAJFIi0v8RvNiLnXQikFeoPyfUQ7j8Y4UBr0VUYV2kXEIswZ835PhLvS7lU5ximvpIKc9tf01tSmoZOci5VbeDKm3OShlB0sW2MxmfIOeqf9OxsGppuVf4I5HF4OaMyvlc4J8cP7Ni-wsqjW6s80Q5u8xFzWpOLnD9Ad-amERW_1mmsHN3TsHfQcT1F1yDFHHAPaJKYeCHRoGC9Z34H1rRkosUeAe3loyU2r5fJyDVqcoqPdAxeGL7KQ4oi9ySy9U5iAI44MLkr0hdTyTCx_nEPNjjRoZhuZ5171jzBoyNEmIofzufYHtGSxwTtIuEsyXn2rw-JN7M-qQa9KMohzMlvDwkywGE9HrDMJAYuLg_LolrwHSx2yZn5Yxd9RqmK0_oDkidETIhgfpP7lPkJEdX0A.gif", "type": "playheadReachedValue", "pvalue": 100},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uhyYcEQIAQAARmZ6Ji5_T5eMTxMGj8X6uxKThJVBxziUFaQAKEx-bDsH9F3gpUoVSFpC_trCj-byU-OqZxUqzZrgu2NqSulWLNGa1NItqb2ChcgCiB0uOJwG5SyGI4g2UwuWEXuQfFHWc0e6ZMQ3tmaI8U8Z8x08DUVds-8rbOA3BzKywKF3skO7iaQ9MHaw1S9pnHPEc5g03ZihVl06GsqnNSIWCdPK-mTXbK8rn3gyYqLetXezA8b6phmm_GkFaTwbIA1PsGyu-YW2U7rX9P7qXnzLpA7ew2MIdqFvNhQbeFWhbWRj7xlgA3J_k20hFxpOc_N9WLvRQ_ntLGlOXm6ntDW2p1WFR3P4lJq2rTjivMLHSODVzlg.gif", "type": "closedByUser"},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uoLv-lUIAQAAMOCkabd_ICA32i_5mE2-QJ6sCdqnhE7o8Arslu_95lCTblFROCbw1UJ0Vn354iN9Dm7umH3PhH1v-dQ_JuvrfvdW5WCttn8bieAlqck-5rtmfd2P2uJ3HygIhr12RxFbFApPliC9MSXcOQCYDDz3UnZwGzl3zHlYWDXNzUaXIF8gZLH8_7QGLrUFaO9yVAgCztl57SKT6msDbpw9VGOMQZS_mRQQRg_JN3AzlO7-MpTzbpPLCZL9NDDOTeLsSKKPEonRpuUv5RQKlVFqUK98rKzhKFChzkQHM_8QeS_VkBxTtBjtwJDGPmeM30SNAy1U9JWZKF6fRSPbHOZJTDmE7h20AZI8pVbX1yk-X4_J5YQ.gif", "type":"viewabilityMeasurable"},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2ujlNjhsIAQAA3KkA_nXsmPbW3WF9hRCk0gzcrR9I8cPvHpcC83fs1Zp7kjQbwxiAzw7Cu1K35zoR_-nvK6mjqDN5G-hHcIcocU4c8TWxHP5WKRGLQBJWAI-cMHruMAQH_dz9xh9qvkJaDPD9C-dyxnjrLzgfuAVQk4-EXQI1ridXjvk2POB-wAug23VW7oWatjTnrJaC2_4d8LgPqkO5lS4r9R3Pimh0445yN0-2ubiDwTnN1LUQdrVleysJfV5lAOixbQJ3wKlQ69Sm1mY7WQ0Kj3S3c-f_okINDiX97wW-did289Ki4iRzZm4-AtC7BNEGat08dFYvDpYyzzaTPCtm5FM7csbQUkxXfb6eD93snQglYjMpAjI.gif", "type":"viewabilityUnmeasurable"},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uqu8uVcIAQAAyG5R0yH_PDLbQufKf9IpzaUuwb3upsqPE6dbbCtVoA6vur9bJ5HLWV5S-6kWqB08VIrxXS-1Co0d9NFZrsqN5Bu0F7Xxx52cL6Zlwyx5xY_KsH2ta3kj6pTjqc8lE7z95LQ0TQaGAulbT5IiQgzY5KhHc2MaGr22EFZ7tBfX_VlHdntJzJAPhXwYM4tqY83uhbqfc5hTQpsjyhScMJZRG6F3Y2yMUcXNM-xxOcBvM74AYYiwZWmRkmbl5lOPb_cKK2wrWEDlWcubPmQisal-lX77r1ahDPW32do9FdGRbTkqyq7Gf4XGa28km6kNLTP5lkyf6E2ScwY_GbFVU-DIlas5ZWFyYzwCdyeluNChUW8.gif", "type":"playheadViewabilityValue", "duration": "2", "viewablePercent": "50", "mrc": true},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2urHAQEkIAQAA41iygF097KKO0_ODWuZdamwisBoIdvHYlsBBgoueKHQvll0aNeYQ8lpWRh0Inbhup3qLYjDvb7xSYiTVDX1BCeh2Y33dSH_LqA5kw4jl9_qTKss1yzpPpocNm54suK4t809Yh10WiQFTZP_LnfR2_dDskLJMuDpO-OfeYRGK0FiygWKQIWxBYDqoCdtYErM4V80gJF4N_ioh2cbQtrNQg0IrAeiTf5WF8ORkYQLunlou1gd3YV72aUSp6YBgiuCZsgnyseqHQCfMIZ8wI0zMvJIkOsEs7SPAOMYfR7gGz5TCmSJ8t9g-030Bejh40A7g3IqgjzIRG7i_98-tdroxZyIZ98dOTVPaYxB3SbWzyJQ.gif", "type":"playheadViewabilityValue", "duration": "2", "viewablePercent": "50", "mrc": false},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2urZPuWcIAQAAb7PNQUzKMi5TX_zgof9-lYogVAXQJeMIZWofWU03-dp0QQVzipZSdrLySMY-9rO0a9lAZIWTaDpfoXoptnmIXJUz3vBIWyoPN5RZCCIK4J7FTU58jijuqE1Jnb0K983kFIlqPUv7EoVzsviIqAV2NRtxCig4DsOIW8c8_epMNdyJ0TyMOtQ6Ib-DGT7ffqxhjmzzTxDLZsmpvPQncj78UPOVUGy731056-D4er2SgwG0oysMs67wKhgWqc1gT-Uv-WofcPKJWn-wXgXhf18pQNczpMYljf1jwe4PqFFvpi11Ek7h7Ghg1wnkpYXPNVBGtwghGmfb1GU9AH5_kiVZBAuNgnhp7dUruLnosmryxfk.gif", "type":"playheadViewabilityValue", "duration": "2", "viewablePercent": "50", "mrc": false, "unload": true},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uhn6OyMIAQAAZZiSEF6VQ5skkunUVfF-WZ_xIx1QafUbaTX-DE1mkBLiGarMNDwxLCGYCRTJhk5aG4CbzptGZveeQeKaiqoWoSgDqT7yg39XMxhU-Fv2GErN0q5XVspMVF6tXm32dOcTs3uK7YJgbx-gt7QWe_lXTEsWUovqWzTOo4BDiwpKV-NdQCEZLTGW7tGh1nYG_9t3cxfbVuepcvJpFg391DEB7ZEV5LgNT9U5AfxqPTXcHltey-PlUOtD2S9SpGZ7_G7MdjNbzboVZdqP3bi1keyNSIWB_JcGxTnL6_MNoy5o2x5W8PPcR0CvNYMKHmye7rDS6U1gAN5e1IsezWzlpU1NKpBFIDvFuvGNtesOlmItYwI.gif", "type":"playheadViewabilityValue", "pvalue": "25", "viewablePercent": "50", "ovv": true},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uiJ2qlkIAQAAdKg-lNcvexFse71mi9dXsl5_PgAyEwlguActjnQnEvQpWBblMlmKu4ztjw6SnrlnO4xIEAXSM9lg8URwxcYG5Owa3n3cul1oSDiPV7oPK7-ex7pgqBeh_dAE9DX4PwsST6HKsTrq4UhD0gRH7bgzkPaqNHlk8yDgX5oO0XfCom65GdH5lBaYgHOP3goLMU-7sVJJA1rn2Wg6V2IHiRSyxwDcTUKI6r_mNbNS8uwkfDYvEqF_Q_7EArZpjjVFNH7GqnCiYhI0m43PC3bpwJRrntBLb3VKxISDseqZViIusOIkp6hrZhXdhZ58o8IbuYDqDdkg8me3BmxJTg98pROorX625nHypN691dRbDeXRvNU.gif", "type":"playheadViewabilityValue", "pvalue": "25", "viewablePercent": "50", "ovv": false},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uqvMkF8IAQAALDjxBJtUCbnFzZ18YBy7uOst3iApX45nmRhpq9_AybtheUldEDj0AVVYwI6b4AXAXm6jIOnFul4FueMrCJl7zTNeH4V6jKlBi_U4HdkW9Hrj_RKWmiTTMX1wZGT4Gj1lw4Ko6pbu93woLcljo2ewMiGjtrVtbTNuH7DtnkZTuHXjDVOo5g9bzcGc1oEu1QL6U-1lh_HQWyqCC7Aq0igJl160SrZUnzm1wrXP2-jifXvWCz4KSG9p4-zOUnNNRICsau4hAOZyd4hGf8cnqJgzYVmwZo8KhJEEeVIVV6oJuegp9_6aCAJrbtEBZIcM1BlcIlFO7hE5DP_8P7cXq2QOtNw9nfHDqjqxzp-fGZr7zxE.gif", "type":"playheadViewabilityValue", "pvalue": "50", "viewablePercent": "50", "ovv": true},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uj0p9hsIAQAAMNtek-9S3VXvJbfYE4-splL5vuHssxHvMIyx816LmrlT3_SiDrQUy4djFDX7N0TTonqGQ8-oQmNNaPvFL78EUWeLNzkKalBrDP8TYlZ62jMThfmKgQ5TSdDgpJh8QIfkUy7Vre6lA25sPSggOWwAunx4eAatbbCMSGR_B-AI6toHuCovjxKiI-K-2o3XXGrERjmn4Q2nxKGIH9wfOoCSFfIW5vuWw7y_oF9tXLwzKMM91otr33mntPJp2KlG4ihR_-2eyFTixgzl6ac4C8qg-o13zzBRWI1AK-uJo8bYiV4EAnAphgScQMG9GvMRBGOdj_e44F9y4c_f40o1OKO79hZeGjsukl0h_oMHZJUcrzo.gif", "type":"playheadViewabilityValue", "pvalue": "50", "viewablePercent": "50", "ovv": false},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2upd7lwcIAQAA7Je0UhlRdmW86MurimuP3hI5rz6CAID8PjLhOvgKG5t90lcTrCQOZtmp-E28o-ktHF943FQqptXLskA-WBNScfugR8OgQt0JZABvAPRA_VNigcMkxWb_YHy9qrm1Gy3LObMEzfjiewZ_EvZ4RLI0D4UNgJWJHdboCKWK6BDe_890hgAhy43YeUDH1vljkBLnmNncAd3RhRdNWEHtNEVWPWF15f4hiroeREWnFQyxrNRty2-tEWLTgzZEkEKyt2lx--T_miZAsb5YRAQTObram-stFiXQJk1u-We1FA6kpQXRhDd0u_-ARenV12IrNLJSvhpvq32ULoyG6MKPb28ADC3WdeSVkww04KJL6Oij3C8.gif", "type":"playheadViewabilityValue", "pvalue": "75", "viewablePercent": "50", "ovv": true},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2ul1GZmcIAQAAWH1K9EQAbzYOQIrEHlXUY3MQXhRZrcHBdlA4dIElrYXJE9Gi-jx9-s2sVAYudgsWP8gCHWTPkTkS-BEbqnC5iYXC8J8ZUQ2lImup8deTejW4SM7VHPbwMuqYJoIIw9sB0YiINmQJqZsi1E0zLJyn7PEJ0p8U-qSZwOaINBzPR1F6VBdAIRZxcBLms3Li-S60VIVUXo6PcjjGC_ixgk2N00NVie7uCdJES2Ls2HlJal7pzqamNzoMviImQRE1UDd9tSlRNyVoZi2Zny5GHRQrnY94UkxS7bqxGT1TEuiZYeJLrtcoMU_GAuuXsYdNKEkgOV8Lisj0zS_ZaaXhpcBoaBEpW9s0iZToOt5mCUD1zVo.gif", "type":"playheadViewabilityValue", "pvalue": "75", "viewablePercent": "50", "ovv": false},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2ulMD9UAIAQAAgWEIqqV4GAvI-H-bD5ck1fM9G0sY1Hp8aesIGh-odPVF8PCjji05iiWnH0iNzxXwolZ7tX4FyegXqHKR6YwHiMJaR55LwFocrIc4-Eeuv09zo8uHa7MjTQkSW0-oktBUEY4NPiDbmr1sXcY_QIub60oh9h8C4vNruw85bFw7HR4h1PiIU3aov--fCNK2vBR90kFs9zg3psVHL6MTqGRXvVwMYb7tusaTOjVNb3K27P_xUqtd5p5TIzTdvvWr1wL0EVXsR44veA3OoQP-E52QymVNCw0fYlsivz0SbxDjlH4C3bzSqmhmi4x_Rp4h9qM8mbvH-Ggh3AqGaPchjfvMXHu2EwTaX8VJF4mIGoTHrbs.gif", "type":"playheadViewabilityValue", "pvalue": "100", "viewablePercent": "50", "ovv": true},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uhCHMmcIAQAAJjcD6PaEmud3ZRv1JlWlDaQHJL8KrxVChzZZRw7LseCnEvhNCWM6-IyCykNRClEPWQqMTjhyRu_YFt3pPh6B8k9fiNjX4jmeJ0igJ72zXkwZcd3CQBUhOh0tzNprU3LlFRAOFHcWOZmqAgn831dQgdyFrDcGQK7YtLVTK_GyNAhf-rXC7jGnLS8T-Pn0VbCKn4hBnEKTwLiebi8RaA_jw8ViOokym_wyYSYlK1B-3kAIYcVHOaiMfA6V27i8B681ySqEpb8B-dLBY_VeGTA-VDXWgQcidMbhSHWVmR2Ign_WHQbS4y6t1itWufLGukKdZlVSn-kKlNtOq8XmlVoP4itwcPJ1zJaQCyZsRnc8P3k.gif", "type":"playheadViewabilityValue", "pvalue": "100", "viewablePercent": "50", "ovv": false},
{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2upSp3lkIAQAA3z2ifPA5FuS_pQvpSo_ZuYCQlWEzYa26IjzB5HX5sdsj1ZkJT9qSklgKUAT1DXW3bUry51BiYerpzhDm4H1kMQLl1leEE7Y3U9KhbIJbkB5hcMayW0UaPrTEDe4JrEDziQUx5EIlHleS_dHOyjI5MRdJjQ8MrJkdzStPnyMKjwLt04Z934La9ifwWcVYwO5b8g0VdcXP5uO5TzQH8TDjyj9aVfVH2Wpkwsr26AI5-g15Km_Wz3reQ53vBcm9dX81ArfkFppakyMqMFzgxUNP6xbDeYQm6p_Wf2jaQHY8iWxAr1ETESQk6Jjup2JAqxY7q20ixB_nqt38fdJJxA74gLBInLNRlhlrSWXGlWTm45k.gif", "type": "volumeOff"},{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2unYFxz4IAQAAsYkTUIUs2mmnlsf-iD5yNaBAZYZkeHgfA3YToMna57_4hiHpEF_HFAojnn9h7g0sT74N2Q42XRkJU9ovXHtGhVgyz7z5RKeoPfFKtfTSgZm5rP1lYPdn804p8oTWdtQQ3pOBDws-TxLnCqtz6JT44mspjnE-hkUCrBuGpJ5FtR5ZUy0srOWY8Fx2VKokcH1N-g8NeLGfvohKzGeF36BjYDjkLxUV7xw_FZP2y3QW5BdHNh7x66z_GqQJ4FHp2fFmTVcHu6e5WwdH_e9-6VI3z2_ei9hMK8O-bZpWTJRbgu1rJkOtxh6NV2HiOzVkn_nhuiwlRcB6ErTMyXpkmdyhteTl9ZZ4Y9SpZXOffoz5zUc.gif", "type": "volumeOn"},{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uvB1UCYIAQAA-K2mniujVqXOvF-n2rM6VOIriz6j0UK7lo3EU5Jsf3faPyop9igjS8g9QP_mqgIMSfl3MzzsnVKeji6nv9QDgIKUA6tNoxQaGGIbmwPzutUogOC25gb9gPyjKDEVLcuvQNxv_OEFdltVQ9S9HbTTR_QWJ5JSIvnrdVduQdvKDPUXQu02BttM4vERnkGJcfbfaDwki2bcjlKPYEPhd2jNxu_Sm_ApVeoizsfIYnCmgqRdLxSU7pkFEZzcVcJ_ZT_3cOtRBfcRga8oa_SjQKvLfUw6_KQ8_18whBJA-PLAFYQpT0zAgMBahvz6RXSc_XsEwBN1tK-DcS_ShKFEjXFI-HU5qzT9KizSvLAvqg8XHyU.gif", "type": "playbackStarted"},{"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2ukaAiDB_AQAA8yDV1T9TKkD4LlVdC03ixdvBMC3mwqbVKN5AVQ6Q4ZJBCjrUx7ITN33GbneC9P4WS-sN9aTEYOa3mwksLqX7DDRvkiwosnuv72cUdJBwPmnKgN9A05TRX9H15SYN2WIu6SVKDknztqs6DSshbwfo9Zqp3YmGMyvjWuFQVfEL0F_FFkfPkUcgMn2a2IPnZ7dQ-5uW2QqykkGZPhgORJ0gwAXAy5TguLq_XiynjK8N1nDSRPJtKWt3oZ9zAxLwAfpp10VTkFAxQSb6S4q63DT6dW5_2NeDRyCs6-gOsBvwpyfmSP9GytkcReaILOxoW9u1UxDuQ41njLoOuf-g-Mz_0LtTmc-hZVtWqFm4_90LwnIiYIrFh1FtEkpdp30iTyt8tWcgeyotsD1XgRj0RW8oOn4PTkB3MM_XeCxVNDnFL1oyQfya6i6eDPK7AuwrCpqgKxaVSdocdXCxq64ypRjAHHXt7WTMQWsbLxG5p9mFt9iiKnZfRUq3U2qYeLWmrv4Q.gif", "type": "playbackStarted"}
,
{
"type": "viewabilityDuration",
"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2ugPA-0MIAQAAVhQOMaJrpo3wB1jzEU088NYP5qhVGTA6GChEZFSm3oKcz1E18_4FayhmMwcVkkQrDo4HSODDYQXiA13X2rpIEJtGLzg-2_5VqzckCNTWHyKq68x2rzWWZMneU89erkjeBR0Cxw-qRFCCE7yWjcOBfEpPtlpBWugvbN9KMj3OjJvw728rkPL5wBRM3YJXsGH_rtwa0FCkK8JLYDN3532bh_Uh0qT6GIjCbD56Qiyq5R4nYP2GshWY5DSM5Fg_RBl75XI8mUpBvkbFlqQSw98Rdpg49Ia2S3G14iTx2rQFmnr4-Sg9Cj7yIzZ2d3zSSKB0warUpiHDfPeKOrHnk4J6KOU7NdGIHz3E3fJ5RZWVzN8.gif"
},



{
"type": "errorNoHtml5Api",
"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uvDA_xMIAQAASiuePfNTimlB-qD6XChsY8VZ8i5Ad8tarza4HXYjsznBt7PnxVjw2-dNF-fANqKviWWHuN403Gj1PUEcPiICOUVKao3woWpNTbJ9808z4CkipT6BW-TTUJcVqMGmFHLo3ZfPqv1cwFhz5eXTMHDpxQBqhrpWakW1mtQWLcsbsDOvQ9we-6Hmqm4V2O2Jn9j7scAqdjdEylsIa8Wid8XlFe_o42ODfTS2_n0TR2DfCLvIElwiltds8j7KqJm4T5yMlN7eITwJ98-N9KWjWZeiXLPbVhjWDqUmyRJJBEoSrRYZ6zPjQFoOhDvbSTjhRavetCgOOHklvTRtCvPk2ytizzb406A0LyEYI6cP9SxPiw8.gif"
},

    


{
        "type": "show",
        "url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2unmmExt_AQAADuEGmPN4ACx0NGzEFemHdUSL_F4-3VCbnL-S_X1LSOiduR4i7zs0uYXoVcTinrHmtDfkc0d1YkSBNjfg9RyDOlIUzc47m0hreUrsDAUL4pGreTEoLblXkAg6hC8vHjhSLoYib_uhKiAxrvY4OZRGiM6CiXURFbnwXD0iEeiwxPHqrIJgAHbBRXwE-U__6GO-Q1TP91ugvPQVgHlHDrJPZGmM2osNEEURdMT-R9Vn4VfDxCYXUCuK5dj5-LBTBlE13eKohwgDl3K1YsbuHMN3SPzzcr2Hhhdcml4HMw4QzRN1bcAY7W1ANCPF2Im6zLerk6sP_BAjT2XZj9MTbrqQ9ZQ0zuZvwgN8kU6NRCV-ouAuHaPPd7FX1tEpiAxhoqCBZL-pNiLv7xwKC3-Ta534HO_UneZ-fslNPkvSI8MaMEal-3QwfkvxnGVVfZaFP4ZLa_dNUTlN9uWV00pDNVFn4TyhCUBv_HKDoTmhjsOgZFnDkKdhgx91EC6TWgFqHOa4.gif"
    },
{
"type": "close",
"url": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uk4VAifeAAAAct6WkGBKZZsAi0f6GoT3RFTiQlay9JHJSgiWBpSrNtJKPewOE8M1hsD00XcrUKUdz7GZiavucnWqlq22JTs_HpgZDOuLaow6LEbisaj9lE2MiKFbH4OtaT8qP8Ruc_bgnsJ-86Hd_QJ3ceb-iBZxUoMuF2JRkbsUP1_2UyISOuB2iPBopVkPcuZZQDyNhOnriLxNHATSEkswoH6trbXmIXSh94s2j11J6PBvxncvQHdsBnJI6BSkwoOs9mvUBnU2gGk03eH_uUUCNE637ebvIHxSl9IoevjO6hKCaI81SAc.gif"
}],"closeReason": {
    "iconLink": "https://r.mradx.net/img/33/92ABA1.png",
    "clickLink": "https://legal.my.com/us/mytarget/privacy/",
    "closeActionText": "Закрыть",
    "closeUrl": "https://rs.mail.ru/pixel/AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2ustG1mVqAQAA5EHEpEDlydiUd-xwH43UpOpMJFmJVDzh-s05FHO9w520z45-wHwQ4l8YufkXRrg8wRC96tXAnLsg67DI7Djag2v2wH0GSp7cHw3M6OuxZ2hJy6jOw2VUNgmBkcU_SAN4ztzzYk7snkjNU859zHzDEyzDiv84uQ740-ve-fiQS2wfmJkKiJx9PqZUdzlmmbxlqq6VkS0DdpVgCKflHMTXf7zUNqUWu3DWcdN-2UB0FOUH9OKoll_wEJuLEL8fXQ0oSUdT0iMuW-alblBYz0mAUxsQb5OZiT03cIYrJZKimNBLkOFxiYVXlSTgrTJOTvHCYnZTKALgQGV5slPj47J3serMtvH7KfGy-HZ6l3KNsS_En5AGm5GDsc0yUZ1eAMZLMSKRjAdBVLkJMgclw1fjuoqt5GQEu22E8JUi7ZQfAkSwmoKlFg2hWBu-8NTu0bc8WnMUqEPXw8zvmZcUNHYM0uqnW49wKNDDdo8BUQK_sI0.gif?reason=",
    "aboutCompanyLink": "https://ads.vk.com/adv_info?id=AAD99gGgc9e-5Ei71dCCsvq_7sYKg8G8i1FpMIdO18tzRiAuyoKRg8OaeF1P_tFAo2lzFCVSWimDZR5TOPXJfSlVvHLYIexy3Q3KnyDQzRY_wYJhwc3fJasHBKAlurGcdHT1tb03Mv7eOivo5NjPIcY58H1x-SN6Qhs4XQsKNGMICcl2uvjNmT0JAAAAX3UIKeoWXtFNr7ftCHy2ag",
    "marker": "2VtzqxAgHKv",
    "options":  [
        {
            "id": 1,
            "name": "Не интересно",
            "shouldCloseAd": true
        },
        {
            "id": 2,
            "name": "Уже приобретено",
            "shouldCloseAd": true
        },
        {
            "id": 3,
            "name": "Вижу слишком часто",
            "shouldCloseAd": true
        },
        {
            "id": 4,
            "name": "Оскорбительное содержание",
            "shouldCloseAd": true
        },
        {
            "id": 5,
            "name": "Сексуальный подтекст",
            "shouldCloseAd": true
        },
        {
            "id": 6,
            "name": "Нарушение закона",
            "shouldCloseAd": true
        },
        {
            "id": 7,
            "name": "Мошеннический сайт",
            "shouldCloseAd": true
        },
        {
            "id": 8,
            "name": "Скрыть",
            "shouldCloseAd": true
        }
    ]
}};} catch (e) { console.warn(e); }try {
    data.additionalCloseBannerControls = [
        {
            name: "Отключить рекламу",
            icon: "https://r.mradx.net/img/8D/4C0A6E.svg",
            onClick: function () {
                var xray = window.xray;
                if (xray) {
                    xray.send('adman', {i: 'trg_subscription_promo_open'});
                }
            },
            position: 1,
            href: "https://cloud.mail.ru/promo/quota/?utm_source=mail_web&utm_campaign=disable_ads_three_dots",
        },
    ];
    
    data.onCloseControlsStateChanged = function(state) {
        var xray = window.xray;
        if (state.isOpen && xray) {
            xray.send('adman', {i: 'trg_kebab_open'});
        }
    };
    
    if (!data.libOptions) {
        data.libOptions = {};
    }
    data.libOptions.infiniteDisclaimer = true;

    if (!data.themes) {
        data.themes = {};
    }
    data.themes.closeAdText = 'Скрыть объявление';
} catch (error) {
    console.warn(error);
}

var isIE11 = (function () {
    /* true on IE11, false on Edge and other IEs/browsers. */
    /*var isIE11 = !!window.MSInputMethodContext && !!document.documentMode;*/
    var ua = window.navigator.userAgent;
    if (ua.indexOf("AppleWebKit") !== -1) {return false;} 
    else if (ua.indexOf("Lunascape") !== -1) {return false;} 
    else if (ua.indexOf("Sleipnir") !== -1) {return false;}
    var array = /(msie|rv:?)\s*([\d.]+)/.exec(ua);
    var version = (array && array.length > 2) ? array[2] : '';
    return version === '11' || version === '11.0';
});
function logError(code, message) {
    var image = new Image();
    image.src = 'https://ad.mail.ru/web/log/?err=' + code + '&id=145849616&br=' + window.navigator.userAgent + '&p=958765&ptrn=video_landscape_30s_text40&tpl=154' + '&msg=' + encodeURI(message);
}

var queue = window['TRGBView_queue'];
if (!data || !data.hasOwnProperty('libOptions')) { 
    data.libOptions = {};    
}
data.libOptions.pad = "958765";
data.libOptions.template = "154";
data.libOptions.pattern = "video_landscape_30s_text40";
if (!queue) {
    queue = window['TRGBView_queue'] = [data];
} else {
    queue.push(data);
}
var core = document.querySelector('#data-trgbview-core');
if (!core) {
    var script = document.createElement('script');
    script.src = isIE11() ? 'https://r.mradx.net/img/DA/22EED9.js' : 'https://r.mradx.net/img/4A/736B23.js';
    script.setAttribute('id', 'data-trgbview-core');
    script.onload = function() {
        script.setAttribute('data-loaded', 'true')
        try {
            if (!data) {
                logError('no_data', 'empty template data preinit');
                /*console.warn('trg no data');*/
            }
            var queue = window['TRGBView_queue'];
            if (queue && window.TRGBViewCore && typeof window.TRGBViewCore.globInit === 'function') {
                window.TRGBViewCore.globInit(queue, isIE11());
                delete window['TRGBView_queue'];
            } else {
                logError('no_lib', 'no lib or init function');
                /*console.warn('trg web lib object or globInit is not a function');*/
            }
        } catch (e) {
            logError('no_data', 'no template data catch');
        }
    }
    document.head.appendChild(script);
} else if (core && core.getAttribute('data-loaded') === 'true') {
    var queue = window['TRGBView_queue'];
    if (queue && window.TRGBViewCore && typeof window.TRGBViewCore.globInit === 'function') {
        window.TRGBViewCore.globInit(queue, isIE11());
        delete window['TRGBView_queue'];
    } else {
        logError('no_lib', 'no lib or init function');
        /*console.warn('trg web lib object or globInit is not a function');*/
    }
}

var placeHolderElem = document.getElementById('b145849616_1257531963');
if (placeHolderElem) {
    placeHolderElem.setAttribute('data-init', true);
}})();</script><script>
    (function() {
        function logError(code, message) {
            var image = new Image();
            image.src = 'https://ad.mail.ru/web/log/?err=' + code + '&id=145849616&br=' + window.navigator.userAgent + '&p=958765&ptrn=video_landscape_30s_text40&tpl=154' + '&msg=' + encodeURI(message);
        }
        var placeHolderElem = document.getElementById('b145849616_1257531963');
        if (!placeHolderElem || !placeHolderElem.getAttribute('data-init')) {
            logError('no_data', 'empty template data after..');
        }
    })();
</script>
        </div>
        
        








<!-- 2145 -->
        
        
<script>
  try{
    (function (w, d, prefix) {
    w.RB = w.RB && w.RB.v && w.RB.v === 1 ? w.RB : (function () {
      var // main flag,
        enabled = !1,
        servingType = serveType(),
        useObserver = !!window.IntersectionObserver,
        useGeom = !useObserver && servingType !== "XD_FRAME",
        // old opera focus flag
        focused = !0,
        // counted flag
        counted = "mailru-visibility-counted",
        // banners to inspect
        banners = {},
        // shortcuts
        e = d.documentElement,
        VE = d.mozVisibilityState ? "mozvisibilitychange" : d.webkitVisibilityState ? "webkitvisibilitychange" : d.visibilityState ? "visibilitychange" : "",
        HP = "hidden" in d ? "hidden" : "webkitHidden" in d ? "webkitHidden" : "mozHidden" in d ? "mozHidden" : "",
        // lastTimeStamp = 0,

        // timing
        tm,
        // interstion observer instance
        observer;

      // handlers
      function onFocusIn() {
        focused = !0;
        C(!0);
      }

      function onFocusOut() {
        focused = !1;
      }

      function onUnload() {
        Clear();
        off();
      }

      // using visibility could have profits when tab is not

      function onVisibilityChange() {
        if (!d[HP]) onFocusIn();
        else onFocusOut();
      }

      function onWindowScroll() {
        C();
      }

      function onWindowResize() {
        C();
      }

      // I &ndash; inspect

      function I(bannerObject, id) {
        if (Object.prototype.toString.call(bannerObject) === "[object Array]") {
          Clear(bannerObject);
          var k = bannerObject.length - 1;
          for (; k >= 0; k--) {
            if (!s(bannerObject[k].el, counted)) {
              I(bannerObject[k]);
            }
          }
          return;
        }

        if (!useObserver && !useGeom) {
          tr(bannerObject.pixels_undetermined);
          bannerObject.el[counted] = true;
          return;
        }
        // bannerObject contains bannerObject.el and bannerObject.pixels
        if (!bannerObject.el.id) {
          id =
            prefix +
            new Date().getTime() +
            Math.round(Math.random() * 1e6);
          bannerObject.el.id = id;
        }

        id = bannerObject.el.id;

        // lastTimeStamp = new Date().getTime();
        // adding the banner container to storage
        if (!banners[id]) {
          banners[id] = {
            c: bannerObject.el,
            px: bannerObject.pixels,
            px_un: bannerObject.pixels_undetermined,
            px_nv: bannerObject.pixels_nonviewable,
            cb: bannerObject.callback,
            io: useObserver
          };
        }

        // enabling anyway
        on();
        if (useObserver) {
          o(bannerObject.el);
        }
        C(!0);
      }

      // C &ndash; check viewability of banner with t, timeout after loading

      function C(t) {
        for (var id in banners) {
          if (banners[id] && !G(id)) {
            CL(id);
          } else if (
            banners[id] &&
            getVA(banners[id].c) >= 50 &&
            hasFocus() &&
            !banners[id].t
          ) {
            (function (_id) {
              banners[_id].t = setTimeout(function () {
                try {
                  P(_id);
                } catch (e) {}
              }, 1E3);
            })(id);
          } else if (
            banners[id] &&
            getVA(banners[id].c) < 50
          ) {
            if (banners[id].t) {
              clearTimeout(banners[id].t);
              delete banners[id].t;
            }
          } else if (banners[id] && !hasFocus()) {
            if (banners[id].t) {
              clearTimeout(banners[id].t);
              delete banners[id].t;
              clearTimeout(tm);
              t = false;
            }
          } else if (!banners[id]) {
            CL(id);
          }
        }

        if (t) {
          clearTimeout(tm);
          tm = setTimeout(
            function () {
              C(!0);
            },
            useGeom ? 3e2 : 10e3
          );
        }
      }

      // CL &ndash; Clear timers and stop listeners

      function CL(id, onlyTM, noCount) {
        if (id && banners[id]) {
          clearTimeout(banners[id].t);
          banners[id].t = null;
          if (!onlyTM) {
            if (banners[id].io && observer) {
              observer.unobserve(banners[id].c);
            }

            if (!noCount && !s(banners[id].c, counted)) {
              tr(banners[id].px_nv);
              banners[id].c[counted] = true;
            }
            banners[id].c = null;
            delete banners[id];
          }
          return;
        }
        clearTimeout(tm);
        tm = null;
        for (var id in banners) {
          if (banners[id].t) {
            CL(id, !0);
          }
        }
      }

      function Clear(bannersArray) {
        if (bannersArray && bannersArray.length >= 0) {
          //clear banners from array
          var k = bannersArray.length - 1;
          var id;
          for (; k >= 0; k--) {
            id = bannersArray[k].el.id;
            if (id && banners[id]) {
              // clear but don't count nonviewable
              CL(id, !1, !0);
            }
          }
        } else {
          for (var id in banners) {
            //clear all
            CL(id);
          }
        }
      }

      // P &ndash; pixel to send
      function P(id, obj, cnt) {
        if (!G(id)) {
          CL(id);
          // banner removed
          return;
        }

        if (banners[id]) {
          obj = banners[id].c;
        } else {
          return;
        }

        if (!hasFocus()) {
          CL(id, !0);
          return;
        } else if (getVA(obj) < 50) {
          CL(id, !0);
          return;
        }

        for (cnt = banners[id].px.length - 1; cnt >= 0; cnt--) {
          new Image().src = banners[id].px[cnt];
        }
        // set counted flag - skip in next collect loops
        obj[counted] = true;
        //try fire callback
        var cb = banners[id].cb;
        if (cb && typeof cb === "function") {
          try {
            cb();
          } catch (e) {}
        }
        // remove banner from storage of inspectable items
        CL(id);
        // turn listeners off if banners are not present
        if (!l(banners)) off();
      }

      function hasFocus() {
        if (HP) focused = !d[HP];
        else if (!VE && typeof d.hasFocus === "function")
          focused = d.hasFocus();
        return focused;
      }

      function getVA(obj, source) {
        if (obj.id && banners[obj.id] && banners[obj.id].io) {
          return banners[obj.id].v || 0;
        }

        var percent = getGeometryViewableArea(obj).percent;

        return percent;
      }

      /** LISTENERS SWITCHERS **/
      function on() {
        if (enabled) return;
        if (useGeom) {
          ev(w, "resize", onWindowResize);
          ev(w, "scroll", onWindowScroll);
        }
        if (useObserver) {
          observer = new IntersectionObserver(h, {
            threshold: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
          });
        }
        if (VE) ev(d, VE, onVisibilityChange);
        else {
          ev(w, "blur", onFocusOut);
          ev(w, "focus", onFocusIn);
        }
        ev(w, "unload", onUnload);
        enabled = true;
      }

      function off() {
        rm(w, "unload", onUnload);
        rm(w, "resize", onWindowResize);
        rm(w, "scroll", onWindowScroll);
        if (VE) rm(d, VE, onVisibilityChange);
        rm(w, "focus", onFocusIn);
        rm(w, "blur", onFocusOut);
        if (observer) {
          observer.disconnect();
          observer = null;
        }
        clearTimeout(tm);
        enabled = false;
      }

      /** INTERSECTION OBSERVER UTILS **/
      function o(e) {
        observer && observer.observe(e);
      }

      function h(changes) {
        changes.forEach(function (changeRecord) {
          var element = changeRecord.target;
          var id = element.id;

          if (id && banners[id]) {
            banners[id].v = Math.round(
              changeRecord.intersectionRatio * 100
            );
          }
        });
        C();
      }

      /** UTILS **/
      // G - get element by ID;
      function G(E) {
        return d.getElementById(E);
      }
      // ev - EVent to handle
      function ev(elem, eventName, callback) {
        elem.addEventListener
          ? elem.addEventListener(eventName, callback, !1)
          : elem.attachEvent &&
            elem.attachEvent("on" + eventName, callback);
      }

      function rm(elem, eventName, callback) {
        elem.removeEventListener
          ? elem.removeEventListener(eventName, callback, !1)
          : elem.detachEvent &&
            elem.detachEvent("on" + eventName, callback);
      }
      // obj length
      function l(obj) {
        var s = 0,
          key;
        for (key in obj) {
          if (obj.hasOwnProperty(key)) s++;
        }
        return s;
      }
      //elem state
      function s(elem, state) {
        return !(typeof elem[state] == undefined || elem[state] !== true);
      }
      //track
      function tr(pixels) {
        if (pixels && pixels.length) {
          for (cnt = pixels.length - 1; cnt >= 0; cnt--) {
            new Image().src = pixels[cnt];
          }
        }
      }
      function serveType() {
        try {
          if (window === window.top) {
            return "ON_PAGE";
          }

          var currentWindow = window;

          while (currentWindow !== currentWindow.parent) {
            if (
              currentWindow.document.domain !==
              currentWindow.parent.document.domain
            ) {
              return "XD_FRAME";
            }
            currentWindow = currentWindow.parent;
          }

          return "S_FRAME";
        } catch (e) {}

        return "XD_FRAME";
      }

      // geometry viewability
      function getGeometryViewableArea(element, contextWindow) {
        try {
          var rect = element.getBoundingClientRect();
          var area = getArea(rect);
          var currentWindow = window;

          contextWindow = contextWindow || window.top;

          while (currentWindow !== contextWindow) {
            // 1) get current frame coordinates inside its parent
            // 2) get element coordinates relative to parent
            // 3) get visible element coordinates relative to parent
            var currentRect = currentWindow.frameElement.getBoundingClientRect();

            rect = getRR(rect, currentRect);
            rect.left = Math.max(currentRect.left, rect.left);
            rect.right = Math.min(currentRect.right, rect.right);
            rect.top = Math.max(currentRect.top, rect.top);
            rect.bottom = Math.min(currentRect.bottom, rect.bottom);

            if (rect.right < rect.left) {
              rect.right = rect.left;
            }
            if (rect.bottom < rect.top) {
              rect.bottom = rect.top;
            }

            currentWindow = currentWindow.parent;
          }
          rect = getRVA(rect, contextWindow);

          var viewableArea = getArea(rect);

          rect.percent = (viewableArea / area) * 100;

          return rect;
        } catch (e) {
          return { left: 0, right: 0, top: 0, bottom: 0, percent: 0 };
        }
      }

      function getArea(rect) {
        return (rect.right - rect.left) * (rect.bottom - rect.top);
      }
      // relative rect
      function getRR(rect, contextRect) {
        return {
          left: rect.left + contextRect.left,
          right: rect.right + contextRect.left,
          top: rect.top + contextRect.top,
          bottom: rect.bottom + contextRect.top,
        };
      }
      // relative viewable area
      function getRVA(rect, contextWindow) {
        var result = {};
        var contextSize = getVS(contextWindow);

        result.left = Math.max(0, rect.left);
        result.right = Math.min(contextSize.width, rect.right);
        result.top = Math.max(0, rect.top);
        result.bottom = Math.min(contextSize.height, rect.bottom);

        return result;
      }
      // viewport size
      function getVS(w) {
        var viewPortSize = {
          width: Infinity,
          height: Infinity,
        };
        var d = w.document;

        if (!isNaN(d.body.clientWidth) && d.body.clientWidth > 0) {
          viewPortSize.width = d.body.clientWidth;
        }
        if (!isNaN(d.body.clientHeight) && d.body.clientHeight > 0) {
          viewPortSize.height = d.body.clientHeight;
        }
        if (
          !!d.documentElement &&
          !!d.documentElement.clientWidth &&
          !isNaN(d.documentElement.clientWidth)
        ) {
          viewPortSize.width = d.documentElement.clientWidth;
        }
        if (
          !!d.documentElement &&
          !!d.documentElement.clientHeight &&
          !isNaN(d.documentElement.clientHeight)
        ) {
          viewPortSize.height = d.documentElement.clientHeight;
        }
        if (!!w.innerWidth && !isNaN(w.innerWidth)) {
          viewPortSize.width = Math.min(viewPortSize.width, w.innerWidth);
        }
        if (!!w.innerHeight && !isNaN(w.innerHeight)) {
          viewPortSize.height = Math.min(
            viewPortSize.height,
            w.innerHeight
          );
        }

        return viewPortSize;
      }

      /** PUBLIC INTERFACE **/

      return {
        I: I,
        // debug
        // , banners: banners
        v: 1,
      };
    })();
  })(window, document, 'mailru')
  }catch (e) {}
</script>
  

<script>
  (function(prefix){
    try{
      
      function getAdsContainers() {
  			var ADS_CLASS = prefix + '-visibility-check',
  				ADS_COUNTER_CLASS = ADS_CLASS + '-counter',
  				ADS_CALLBACK_CLASS = ADS_CLASS + '-callback',
  				COUNTER_ATTR = 'data-counter',
  				COUNTER_ATTR_UNDETERMINED = COUNTER_ATTR + '-un',
  				COUNTER_ATTR_NONVIEWABLE = COUNTER_ATTR + '-nv',
  				CALLBACK_ATTR = 'data-callback',
  				OBSERVER_ATTR = 'data-observer',
  				containers = [],
  				countables = [],
  				i, k, counters, _counter, _observer;
   
  			containers = getByClass(document, ADS_CLASS);
  			for (i = containers.length - 1; i >= 0; i--) {
  				var counters = getByClass(containers[i], ADS_COUNTER_CLASS, 'span');
  				_counter = containers[i].getAttribute(COUNTER_ATTR);
  				_observer = containers[i].hasAttribute(OBSERVER_ATTR);
  				countables[i] = {
  					el: containers[i],
  					pixels: [],
  					pixels_undetermined: [],
  					pixels_nonviewable: [],
  					observer: _observer
  				};
  				if (_counter) countables[i].pixels.push(_counter);
  				for (k = counters.length - 1; k >= 0; k--) {
  					if (counters[k].parentNode === countables[i].el) {
              _counter = counters[k].getAttribute(COUNTER_ATTR);
              if (_counter) {
                countables[i].pixels.push(_counter);
              }
              _counter = counters[k].getAttribute(COUNTER_ATTR_UNDETERMINED);
              if (_counter) {
                countables[i].pixels_undetermined.push(_counter);
              }
              _counter = counters[k].getAttribute(COUNTER_ATTR_NONVIEWABLE);
              if (_counter) {
                countables[i].pixels_nonviewable.push(_counter);
              }
            }
  				}
  				var callback = getByClass(containers[i], ADS_CALLBACK_CLASS, 'span');
  				if (callback[0]) {
  				  var _callback = callback[0].getAttribute(CALLBACK_ATTR);
  				  if (_callback && window.RB_CALLBACKS && window.RB_CALLBACKS[_callback]) {
  				    countables[i].callback = window.RB_CALLBACKS[_callback];
  				  }
  				}
  				if (!countables[i].pixels.length) countables.splice(i, 1);
  			}
   
  			return countables;
  		}
   
  		function getByClass(parent, childClassName, tagName) {
  			if (parent.getElementsByClassName) {
  				return parent.getElementsByClassName(childClassName);
  			} else if (parent.querySelectorAll) {
   
  				return parent.querySelectorAll('.' + childClassName);
  			} else {
  				var els = [];
  				var tmp = parent.getElementsByTagName(tagName ? tagName : "*");
  				var regex = new RegExp("(^|\s)" + childClassName + "(\s|$)");
  				for (var i = 0; i < tmp.length; i++) {
  					if (regex.test(tmp[i].className)) {
  						els.push(tmp[i]);
  					}
  				}
  				return els;
  			}
  		}
   
  		RB.I(getAdsContainers());
      
    }catch(e){}
  }('mailru'))
</script>

    


<style>
  #trg-b-119817434-557487160[data-hide-557487160] {
    position: absolute!important;
    left: -9999px!important;
    z-index: -1!important;
    width: 100%;
  }
</style>

<script>
  try{
    (function (w, d, prefix) {
    w.RB = w.RB && w.RB.v && w.RB.v === 1 ? w.RB : (function () {
      var // main flag,
        enabled = !1,
        servingType = serveType(),
        useObserver = !!window.IntersectionObserver,
        useGeom = !useObserver && servingType !== "XD_FRAME",
        // old opera focus flag
        focused = !0,
        // counted flag
        counted = "mailru-visibility-counted",
        // banners to inspect
        banners = {},
        // shortcuts
        e = d.documentElement,
        VE = d.mozVisibilityState ? "mozvisibilitychange" : d.webkitVisibilityState ? "webkitvisibilitychange" : d.visibilityState ? "visibilitychange" : "",
        HP = "hidden" in d ? "hidden" : "webkitHidden" in d ? "webkitHidden" : "mozHidden" in d ? "mozHidden" : "",
        // lastTimeStamp = 0,

        // timing
        tm,
        // interstion observer instance
        observer;

      // handlers
      function onFocusIn() {
        focused = !0;
        C(!0);
      }

      function onFocusOut() {
        focused = !1;
      }

      function onUnload() {
        Clear();
        off();
      }

      // using visibility could have profits when tab is not

      function onVisibilityChange() {
        if (!d[HP]) onFocusIn();
        else onFocusOut();
      }

      function onWindowScroll() {
        C();
      }

      function onWindowResize() {
        C();
      }

      // I &ndash; inspect

      function I(bannerObject, id) {
        if (Object.prototype.toString.call(bannerObject) === "[object Array]") {
          Clear(bannerObject);
          var k = bannerObject.length - 1;
          for (; k >= 0; k--) {
            if (!s(bannerObject[k].el, counted)) {
              I(bannerObject[k]);
            }
          }
          return;
        }

        if (!useObserver && !useGeom) {
          tr(bannerObject.pixels_undetermined);
          bannerObject.el[counted] = true;
          return;
        }
        // bannerObject contains bannerObject.el and bannerObject.pixels
        if (!bannerObject.el.id) {
          id =
            prefix +
            new Date().getTime() +
            Math.round(Math.random() * 1e6);
          bannerObject.el.id = id;
        }

        id = bannerObject.el.id;

        // lastTimeStamp = new Date().getTime();
        // adding the banner container to storage
        if (!banners[id]) {
          banners[id] = {
            c: bannerObject.el,
            px: bannerObject.pixels,
            px_un: bannerObject.pixels_undetermined,
            px_nv: bannerObject.pixels_nonviewable,
            cb: bannerObject.callback,
            io: useObserver
          };
        }

        // enabling anyway
        on();
        if (useObserver) {
          o(bannerObject.el);
        }
        C(!0);
      }

      // C &ndash; check viewability of banner with t, timeout after loading

      function C(t) {
        for (var id in banners) {
          if (banners[id] && !G(id)) {
            CL(id);
          } else if (
            banners[id] &&
            getVA(banners[id].c) >= 50 &&
            hasFocus() &&
            !banners[id].t
          ) {
            (function (_id) {
              banners[_id].t = setTimeout(function () {
                try {
                  P(_id);
                } catch (e) {}
              }, 1E3);
            })(id);
          } else if (
            banners[id] &&
            getVA(banners[id].c) < 50
          ) {
            if (banners[id].t) {
              clearTimeout(banners[id].t);
              delete banners[id].t;
            }
          } else if (banners[id] && !hasFocus()) {
            if (banners[id].t) {
              clearTimeout(banners[id].t);
              delete banners[id].t;
              clearTimeout(tm);
              t = false;
            }
          } else if (!banners[id]) {
            CL(id);
          }
        }

        if (t) {
          clearTimeout(tm);
          tm = setTimeout(
            function () {
              C(!0);
            },
            useGeom ? 3e2 : 10e3
          );
        }
      }

      // CL &ndash; Clear timers and stop listeners

      function CL(id, onlyTM, noCount) {
        if (id && banners[id]) {
          clearTimeout(banners[id].t);
          banners[id].t = null;
          if (!onlyTM) {
            if (banners[id].io && observer) {
              observer.unobserve(banners[id].c);
            }

            if (!noCount && !s(banners[id].c, counted)) {
              tr(banners[id].px_nv);
              banners[id].c[counted] = true;
            }
            banners[id].c = null;
            delete banners[id];
          }
          return;
        }
        clearTimeout(tm);
        tm = null;
        for (var id in banners) {
          if (banners[id].t) {
            CL(id, !0);
          }
        }
      }

      function Clear(bannersArray) {
        if (bannersArray && bannersArray.length >= 0) {
          //clear banners from array
          var k = bannersArray.length - 1;
          var id;
          for (; k >= 0; k--) {
            id = bannersArray[k].el.id;
            if (id && banners[id]) {
              // clear but don't count nonviewable
              CL(id, !1, !0);
            }
          }
        } else {
          for (var id in banners) {
            //clear all
            CL(id);
          }
        }
      }

      // P &ndash; pixel to send
      function P(id, obj, cnt) {
        if (!G(id)) {
          CL(id);
          // banner removed
          return;
        }

        if (banners[id]) {
          obj = banners[id].c;
        } else {
          return;
        }

        if (!hasFocus()) {
          CL(id, !0);
          return;
        } else if (getVA(obj) < 50) {
          CL(id, !0);
          return;
        }

        for (cnt = banners[id].px.length - 1; cnt >= 0; cnt--) {
          new Image().src = banners[id].px[cnt];
        }
        // set counted flag - skip in next collect loops
        obj[counted] = true;
        //try fire callback
        var cb = banners[id].cb;
        if (cb && typeof cb === "function") {
          try {
            cb();
          } catch (e) {}
        }
        // remove banner from storage of inspectable items
        CL(id);
        // turn listeners off if banners are not present
        if (!l(banners)) off();
      }

      function hasFocus() {
        if (HP) focused = !d[HP];
        else if (!VE && typeof d.hasFocus === "function")
          focused = d.hasFocus();
        return focused;
      }

      function getVA(obj, source) {
        if (obj.id && banners[obj.id] && banners[obj.id].io) {
          return banners[obj.id].v || 0;
        }

        var percent = getGeometryViewableArea(obj).percent;

        return percent;
      }

      /** LISTENERS SWITCHERS **/
      function on() {
        if (enabled) return;
        if (useGeom) {
          ev(w, "resize", onWindowResize);
          ev(w, "scroll", onWindowScroll);
        }
        if (useObserver) {
          observer = new IntersectionObserver(h, {
            threshold: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
          });
        }
        if (VE) ev(d, VE, onVisibilityChange);
        else {
          ev(w, "blur", onFocusOut);
          ev(w, "focus", onFocusIn);
        }
        ev(w, "unload", onUnload);
        enabled = true;
      }

      function off() {
        rm(w, "unload", onUnload);
        rm(w, "resize", onWindowResize);
        rm(w, "scroll", onWindowScroll);
        if (VE) rm(d, VE, onVisibilityChange);
        rm(w, "focus", onFocusIn);
        rm(w, "blur", onFocusOut);
        if (observer) {
          observer.disconnect();
          observer = null;
        }
        clearTimeout(tm);
        enabled = false;
      }

      /** INTERSECTION OBSERVER UTILS **/
      function o(e) {
        observer && observer.observe(e);
      }

      function h(changes) {
        changes.forEach(function (changeRecord) {
          var element = changeRecord.target;
          var id = element.id;

          if (id && banners[id]) {
            banners[id].v = Math.round(
              changeRecord.intersectionRatio * 100
            );
          }
        });
        C();
      }

      /** UTILS **/
      // G - get element by ID;
      function G(E) {
        return d.getElementById(E);
      }
      // ev - EVent to handle
      function ev(elem, eventName, callback) {
        elem.addEventListener
          ? elem.addEventListener(eventName, callback, !1)
          : elem.attachEvent &&
            elem.attachEvent("on" + eventName, callback);
      }

      function rm(elem, eventName, callback) {
        elem.removeEventListener
          ? elem.removeEventListener(eventName, callback, !1)
          : elem.detachEvent &&
            elem.detachEvent("on" + eventName, callback);
      }
      // obj length
      function l(obj) {
        var s = 0,
          key;
        for (key in obj) {
          if (obj.hasOwnProperty(key)) s++;
        }
        return s;
      }
      //elem state
      function s(elem, state) {
        return !(typeof elem[state] == undefined || elem[state] !== true);
      }
      //track
      function tr(pixels) {
        if (pixels && pixels.length) {
          for (cnt = pixels.length - 1; cnt >= 0; cnt--) {
            new Image().src = pixels[cnt];
          }
        }
      }
      function serveType() {
        try {
          if (window === window.top) {
            return "ON_PAGE";
          }

          var currentWindow = window;

          while (currentWindow !== currentWindow.parent) {
            if (
              currentWindow.document.domain !==
              currentWindow.parent.document.domain
            ) {
              return "XD_FRAME";
            }
            currentWindow = currentWindow.parent;
          }

          return "S_FRAME";
        } catch (e) {}

        return "XD_FRAME";
      }

      // geometry viewability
      function getGeometryViewableArea(element, contextWindow) {
        try {
          var rect = element.getBoundingClientRect();
          var area = getArea(rect);
          var currentWindow = window;

          contextWindow = contextWindow || window.top;

          while (currentWindow !== contextWindow) {
            // 1) get current frame coordinates inside its parent
            // 2) get element coordinates relative to parent
            // 3) get visible element coordinates relative to parent
            var currentRect = currentWindow.frameElement.getBoundingClientRect();

            rect = getRR(rect, currentRect);
            rect.left = Math.max(currentRect.left, rect.left);
            rect.right = Math.min(currentRect.right, rect.right);
            rect.top = Math.max(currentRect.top, rect.top);
            rect.bottom = Math.min(currentRect.bottom, rect.bottom);

            if (rect.right < rect.left) {
              rect.right = rect.left;
            }
            if (rect.bottom < rect.top) {
              rect.bottom = rect.top;
            }

            currentWindow = currentWindow.parent;
          }
          rect = getRVA(rect, contextWindow);

          var viewableArea = getArea(rect);

          rect.percent = (viewableArea / area) * 100;

          return rect;
        } catch (e) {
          return { left: 0, right: 0, top: 0, bottom: 0, percent: 0 };
        }
      }

      function getArea(rect) {
        return (rect.right - rect.left) * (rect.bottom - rect.top);
      }
      // relative rect
      function getRR(rect, contextRect) {
        return {
          left: rect.left + contextRect.left,
          right: rect.right + contextRect.left,
          top: rect.top + contextRect.top,
          bottom: rect.bottom + contextRect.top,
        };
      }
      // relative viewable area
      function getRVA(rect, contextWindow) {
        var result = {};
        var contextSize = getVS(contextWindow);

        result.left = Math.max(0, rect.left);
        result.right = Math.min(contextSize.width, rect.right);
        result.top = Math.max(0, rect.top);
        result.bottom = Math.min(contextSize.height, rect.bottom);

        return result;
      }
      // viewport size
      function getVS(w) {
        var viewPortSize = {
          width: Infinity,
          height: Infinity,
        };
        var d = w.document;

        if (!isNaN(d.body.clientWidth) && d.body.clientWidth > 0) {
          viewPortSize.width = d.body.clientWidth;
        }
        if (!isNaN(d.body.clientHeight) && d.body.clientHeight > 0) {
          viewPortSize.height = d.body.clientHeight;
        }
        if (
          !!d.documentElement &&
          !!d.documentElement.clientWidth &&
          !isNaN(d.documentElement.clientWidth)
        ) {
          viewPortSize.width = d.documentElement.clientWidth;
        }
        if (
          !!d.documentElement &&
          !!d.documentElement.clientHeight &&
          !isNaN(d.documentElement.clientHeight)
        ) {
          viewPortSize.height = d.documentElement.clientHeight;
        }
        if (!!w.innerWidth && !isNaN(w.innerWidth)) {
          viewPortSize.width = Math.min(viewPortSize.width, w.innerWidth);
        }
        if (!!w.innerHeight && !isNaN(w.innerHeight)) {
          viewPortSize.height = Math.min(
            viewPortSize.height,
            w.innerHeight
          );
        }

        return viewPortSize;
      }

      /** PUBLIC INTERFACE **/

      return {
        I: I,
        // debug
        // , banners: banners
        v: 1,
      };
    })();
  })(window, document, 'mailru')
  }catch (e) {}
</script>


<script>
  (function(prefix){
    try{
      
      function getAdsContainers() {
  			var ADS_CLASS = prefix + '-visibility-check',
  				ADS_COUNTER_CLASS = ADS_CLASS + '-counter',
  				ADS_CALLBACK_CLASS = ADS_CLASS + '-callback',
  				COUNTER_ATTR = 'data-counter',
  				COUNTER_ATTR_UNDETERMINED = COUNTER_ATTR + '-un',
  				COUNTER_ATTR_NONVIEWABLE = COUNTER_ATTR + '-nv',
  				CALLBACK_ATTR = 'data-callback',
  				OBSERVER_ATTR = 'data-observer',
  				containers = [],
  				countables = [],
  				i, k, counters, _counter, _observer;
   
  			containers = getByClass(document, ADS_CLASS);
  			for (i = containers.length - 1; i >= 0; i--) {
  				var counters = getByClass(containers[i], ADS_COUNTER_CLASS, 'span');
  				_counter = containers[i].getAttribute(COUNTER_ATTR);
  				_observer = containers[i].hasAttribute(OBSERVER_ATTR);
  				countables[i] = {
  					el: containers[i],
  					pixels: [],
  					pixels_undetermined: [],
  					pixels_nonviewable: [],
  					observer: _observer
  				};
  				if (_counter) countables[i].pixels.push(_counter);
  				for (k = counters.length - 1; k >= 0; k--) {
  					if (counters[k].parentNode === countables[i].el) {
              _counter = counters[k].getAttribute(COUNTER_ATTR);
              if (_counter) {
                countables[i].pixels.push(_counter);
              }
              _counter = counters[k].getAttribute(COUNTER_ATTR_UNDETERMINED);
              if (_counter) {
                countables[i].pixels_undetermined.push(_counter);
              }
              _counter = counters[k].getAttribute(COUNTER_ATTR_NONVIEWABLE);
              if (_counter) {
                countables[i].pixels_nonviewable.push(_counter);
              }
            }
  				}
  				var callback = getByClass(containers[i], ADS_CALLBACK_CLASS, 'span');
  				if (callback[0]) {
  				  var _callback = callback[0].getAttribute(CALLBACK_ATTR);
  				  if (_callback && window.RB_CALLBACKS && window.RB_CALLBACKS[_callback]) {
  				    countables[i].callback = window.RB_CALLBACKS[_callback];
  				  }
  				}
  				if (!countables[i].pixels.length) countables.splice(i, 1);
  			}
   
  			return countables;
  		}
   
  		function getByClass(parent, childClassName, tagName) {
  			if (parent.getElementsByClassName) {
  				return parent.getElementsByClassName(childClassName);
  			} else if (parent.querySelectorAll) {
   
  				return parent.querySelectorAll('.' + childClassName);
  			} else {
  				var els = [];
  				var tmp = parent.getElementsByTagName(tagName ? tagName : "*");
  				var regex = new RegExp("(^|\s)" + childClassName + "(\s|$)");
  				for (var i = 0; i < tmp.length; i++) {
  					if (regex.test(tmp[i].className)) {
  						els.push(tmp[i]);
  					}
  				}
  				return els;
  			}
  		}
   
  		RB.I(getAdsContainers());
      
    }catch(e){}
  }('mailru'))
</script>

<div id="yandex_ad_R-142108-736_557487160" style="border-radius: 12px;clip-path: inset(1px round 12px);position: relative;overflow:hidden;width: 240px;height: 400px;"></div>
<script type="text/javascript">
	(function(w, d, n, s, t) {
	  var countryId = '188';
	  var provinceId = '70';
	  var regionId = '5506';

	  var timeStart = +new Date();

	  var firstDirectRender = true;
	  var fallbackInvoked = false;
	  var fallbackTimeout = null;

	  var fallbackType = {
		  FORCE: 'force',
		  UNSUPPORT: 'unsupport',
		  TIMEOUT: 'timeout',
		  ERROR: 'error',
		  EMPTY: 'empty'
	  };

		if (!w.Map || (w.attachEvent && !w.addEventListener)) { // "bad" IE
		  setTimeout(function() {
		    fallback(fallbackType.UNSUPPORT);
		  }, 0);
		  return;
		}

		var fallbackDelay = 0;

	  if (fallbackDelay) {
  	  fallbackTimeout = setTimeout(function() {
  	    fallback(fallbackType.TIMEOUT);
  	  }, fallbackDelay);
	  } else {
		  setTimeout(function() {
		    fallback(fallbackType.FORCE);
		  }, 0);
	    return;
	  }

  	function getBrowserLabel() {
  		var browser = 'unk';
  		var ua = navigator.userAgent;

  		if (ua.indexOf('Opera') !== -1 || ua.indexOf('OPR') !== -1) {
  			browser = 'opr';
  		} else if (ua.indexOf('Edge') !== -1) {
  			browser = 'edg';
  		} else if (ua.indexOf('Chrome') !== -1) {
  			browser = 'chr';
  		} else if (ua.indexOf('Safari') !== -1) {
  			browser = 'sfr';
  		} else if (ua.indexOf('Firefox') !== -1) {
  			browser = 'ff';
  		} else if ((ua.indexOf('MSIE') !== -1) || (!!document.documentMode === true)) {
  			browser = 'ie';
  		}

  		return browser;
  	}

    function sendXray(t, i, dwh) {
      if (w.xray) {
        try {
          if (xray.sendImmediately) {
            xray.sendImmediately(t, {i: i, dwh: dwh});
          } else {
            xray.send(t, {i: i, dwh: dwh});
          }
        } catch (e) {}
      }
    }

    function selectScore(duration) {
      var durationType = 'fail';
      if (duration < 100) {
        durationType = 'instantly1';
      } else if (duration < 300) {
        durationType = 'instantly2';
      } else if (duration < 500) {
        durationType = 'instantly3';
      } else if (duration < 1000) {
        durationType = 'very-fast';
      } else if (duration < 2000) {
        durationType = 'fast';
      } else if (duration < 4000) {
        durationType = 'moderate';
      } else if (duration < 8000) {
        durationType = 'slightly-slow';
      } else if (duration < 15000) {
        durationType = 'slow';
      } else if (duration < 30000) {
        durationType = 'very-slow';
      }
      return durationType;
    }
    
    function logContextLibLoadDurationType(duration) {
      var durationType = selectScore(duration);
      var i = {load: 1};
      i['load_' + durationType] = 1;

      sendXray('adman-ya-cntx', i, {
        country_id: countryId,
        province_id: provinceId,
        region_id: regionId,
        duration_type: durationType
      });
    }

    function logDirectRenderDurationType(duration) {
      if (w.__TS && __TS > 1670862466560) {
        var durationType = selectScore(duration);
        var i = {direct: 1};
        i['direct_' + durationType] = 1;
  
        sendXray('adman-time', i, {
          country_id: countryId,
          province_id: provinceId,
          region_id: regionId,
          duration_type: durationType
        });
      }
    }

    function logRender(fallbackType) {

      function createMetrics(duration, durationType, withScore) {
        var browser = getBrowserLabel();
        var slotId = '948435';
        var iprefix = 'b-' + browser + '_s-' + slotId;

        var idata = {};

        idata[iprefix + '_render'] = duration;
        
        var webPerfExpId = '';
        if (webPerfExpId) {
          idata[webPerfExpId + '_' + iprefix + '_render'] = duration;
        }

        if (withScore) {
          idata['render'] = duration;
          idata[iprefix + '_sc-' + durationType] = duration;
        } else {
          if (fallbackType) {
            idata[iprefix + '_' + fallbackType] = duration;

            if ('') {
              idata[iprefix + '_mrk'] = duration;
              idata[iprefix + '_' + fallbackType + '_mrk'] = duration;
            } else {
              idata[iprefix + '_trg'] = duration;
              idata[iprefix + '_' + fallbackType + '_trg'] = duration;

              if ('1') {
                idata[iprefix + '_trg_hi'] = duration;
                idata[iprefix + '_' + fallbackType + '_trg_hi'] = duration;
              } else {
                idata[iprefix + '_trg_lo'] = duration;
                idata[iprefix + '_' + fallbackType + '_trg_lo'] = duration;
              }
            }
          } else {
            idata[iprefix + '_direct'] = duration;

            if ('1') {
              idata[iprefix + '_direct_hi'] = duration;
            } else {
              idata[iprefix + '_direct_lo'] = duration;
            }
          }
        }

        return idata;
      }

      var duration = new Date() - timeStart;
      var durationType = selectScore(duration);
      sendXray('adman-time', createMetrics(duration, durationType), null);

      if (w._timers && 'ready_app' in _timers && w._now) {
        if (w.__TS && __TS > 1670579404891) {
          var durationFirstRender = Math.round(_timers.ready_app + _now());
          var durationFirstRenderType = selectScore(durationFirstRender);
          sendXray('adman-frtime', createMetrics(durationFirstRender, durationFirstRenderType, true), {
            country_id: countryId,
            province_id: provinceId,
            region_id: regionId,
            duration_type: durationFirstRenderType
          });
        }

        delete _timers.ready_app;
      }
      
      if (0 && w.Ya && Ya.codeVer && !w.logYaContextVersion) {
        w.logYaContextVersion = true;
        sendXray('adman-ya-cntx', 'hit', {
          ya_version: Ya.codeVer
        });
      }
    }

	  function fallback(type) {
		  if (fallbackInvoked) return;
		  clearTimeout(fallbackTimeout);
		  fallbackInvoked = true;

      var trgB = document.getElementById("trg-b-119817434-557487160");
      var trgYa = document.getElementById("yandex_ad_R-142108-736_557487160");

      if (trgYa) {
        trgYa.style.display = 'none';
      }

      if (trgB) {
        if (trgB.getAttribute("data-hide-557487160") === "hide-banner") {
          trgB.removeAttribute("data-hide-557487160");
        }
  			trgB.style.display = "block";
  			var container = document.querySelectorAll('#trg-b-119817434-557487160 .trg-v-banner');
        if (container.length) { container = container[0] || null; }
        if (container && container.playVideoCheck && typeof container.playVideoCheck === 'function') {
            container.playVideoCheck();
        }
        new Image().src = "https://rs.mail.ru/pixel/AAD99gEp1UJkmrJv27cJ__8umIEC6QoCH3M9Va3ere3lZeixJJZPmLOfRAaep15s65dMMET3WkZ5AjxcEbGJGMoQqyaRINjF6BiJZqUDfMpG5kAOyJkX3t5wu8BDY56ugqk0dpueZoVH6uwBp0wPYdXNt5Vs7i3QdVcD0RiFeSJYUV0t0q2vLV-zAAAAzgQRjeJbCCITO8Wqvo3HcmL_8XYYchBsZpKsSbx15kNbKLNTp4sP3b6cLGJC9mTeTMxnZPnFQRmcva-N4m6-mh-gxtYEkqAPy2TAtSr33SeIMTHAfSslcsvL3qpFpqAb4g9WCp7noTr-Bl4jM8gI68VoQRcg8EHKR9pcl1dXf-vP2Gk96wfkx5m35p6ddx43ns68yBLiB-L2wvbWBQf-Pj9u5oMtkarz25BWt0PAC6aDAFvFCTeKX6bCTehYGJhR.gif";
        RB.I({
            el: trgB,
            pixels:  ['https://rs.mail.ru/pixel/AAD99gEp1UJkmrJv27cJ__8umIEC6QoCH3M9Va3ere3lZeixJJZPmLOfRAaep15s65dMMET3WkZ5AjxcEbGJGMoQqyaRINjF6BiJZqUDfMpG5kAOyJkX3t5wu8BDY56ugqk0dpueZoVH6uwBp0wPYdXNt5Vs7i3QdVcD0RiFeSJYUV0t0tR2pH2zAAAAdNvqrje37fOJ48_EA_FSY9_htKN7cfAwiVQ9q5lM_5bbQPf14GtHshVD4pUQopuWM4NNXot0hSIEew2VFehoeJ9l4sxjFF4b_Wcgy-qD_W38RGnfyD7XjVoMwxNWh9ZLVfNYT4MeatGfRXHKOdDLp_lKeYoOu1eSljCDlNlRKghxwyQu5qOCIXofHiPXi2-6RQtZppOv-Drm6KkUxb4W5SSY8kurNuvCk9dFcI7dNx_gOdAbmDZSu7ghhlXrXJ6K.gif']
        });

        if (type === fallbackType.TIMEOUT) {
          new Image().src = "https://rs.mail.ru/pixel/AAD99gEp1UJkmrJv27cJ__8umIEC6QoCH3M9Va3ere3lZeixJJZPmLOfRAaep15s65dMMET3WkZ5AjxcEbGJGMoQqyaRINjF6BiJZqUDfMpG5kAOyJkX3t5wu8BDY56ugqk0dpueZoVH6uwBp0wPYdXNt5Vs7i3QdVcD0RiFeSJYUV0t0ssWjkGzAAAAgqr2BOy-P5HkqFS52nSA9V13hLTvgGYw7UiwrhV2zsBwhellO8tt4QsvOUZXDKNDIRxEQi8QbpJZtSHD3CAR-B7cSkZR3Pz_nF_79fHiHow4jNeLY7iSyY-ezaKYMEAt-sXO0SgPITtYcJzbYrbMJa1QblNgDb9rJb-2u3T3LshezXQvleb0mTBqGFbvd2BgkoT6HG8eYeHbiDpEcUuvhInRH1N4y0fFVElH7YvRDR95KNWX7bBUSWh5DxcCia8p.gif";
        } else if (type === fallbackType.ERROR) {
          new Image().src = "https://rs.mail.ru/pixel/AAD99gEp1UJkmrJv27cJ__8umIEC6QoCH3M9Va3ere3lZeixJJZPmLOfRAaep15s65dMMET3WkZ5AjxcEbGJGMoQqyaRINjF6BiJZqUDfMpG5kAOyJkX3t5wu8BDY56ugqk0dpueZoVH6uwBp0wPYdXNt5Vs7i3QdVcD0RiFeSJYUV0t0mbYtWGzAAAAZA_EPnkGkvsKZstMz5--Bv0guM_NjXj53S8QNbSZS85EFcWGrQM4KPAXzlWQXTLu88VW1AFLuVuNjNJUDtAdXpie77nH5YPbhydZrn5sBr-XqCzdPccRrcfgE0BUaPQFx4_idMUaHzJ1dbhGIsU9ZTAbH5qBn3vykyUbTKO12FSJFyfHqBmZZ-s4crYCynmvsTjCXJQ5gEXasEqWjGhBm1n7cEL_qBSDHMAijEwf_GXh6Z1t0Wa8z1WOJKMluq_i.gif";
        } else if (type === fallbackType.EMPTY) {
          new Image().src = "https://rs.mail.ru/pixel/AAD99gEp1UJkmrJv27cJ__8umIEC6QoCH3M9Va3ere3lZeixJJZPmLOfRAaep15s65dMMET3WkZ5AjxcEbGJGMoQqyaRINjF6BiJZqUDfMpG5kAOyJkX3t5wu8BDY56ugqk0dpueZoVH6uwBp0wPYdXNt5Vs7i3QdVcD0RiFeSJYUV0t0lq-WwWzAAAAXjKv_60lUolVPLxFelLMduxa9_lX8fy3dFQhVnG_n8-6vJQ028oS9o62lS7Ocp6mOqJc64UdocWldS2A9haMtFKQ50qjmV15kI7HBsTwCsrnzfJsy4FuoR5SDOjO0d5Oj55vg7MeSXcOBFcYq4ZreozEtAnDv9J3A3T0RDgZfgP_bWz4gVAQxD67LEim7_MrrSmInDCZj6v7ZeMYhtPgxHpurbHPWIwoel4S4CcQSZwUswKRnYQkycOm9wusl-1r.gif";
        }

        logRender(type);
      }
		}

		// Stat utils
    function getAreaRatio(container, selector) {
        var elems = container.querySelectorAll(selector);
        var totalArea = 0;

        for (var i = 0, l = elems.length; i < l; i++) {
            var el = elems[i];
            var w = (el.clientWidth === 0) ? 0 : (el.width || el.clientWidth);
            var h = (el.clientHeight === 0) ? 0 : (el.height || el.clientHeight);
            totalArea += w * h;
        }

        if (totalArea === 0) {
            return totalArea;
        }

        var containerArea = container.clientWidth * container.clientHeight;
        return totalArea / containerArea;
    }

		function onContextReady() {
		  var contextReadyStartTime = +new Date();
		  
			Ya.Context.AdvManager.render({
				blockId: "R-142108-736",
				renderTo: "yandex_ad_R-142108-736_557487160",
				statId: "492",
				async: true,
				disableHighlight: true,
				onRender: function (data) {
				  if (fallbackInvoked) return;
				  clearTimeout(fallbackTimeout);
				  
				  var yaNode = document.getElementById("yandex_ad_R-142108-736_557487160");
				  
				  if (data && data.refresh) {
            new Image().src = "https://rs.mail.ru/pixel/AAD99gEp1UJkmrJv27cJ__8umIEC6QoCH3M9Va3ere3lZeixJJZPmLOfRAaep15s65dMMET3WkZ5AjxcEbGJGMoQqyaRINjF6BiJZqUDfMpG5kAOyJkX3t5wu8BDY56ugqk0dpueZoVH6uwBp0wPYdXNt5Vs7i3QdVcD0RiFeSJYUV0t0lva1kCzAAAAvj02dyXNNlBAqsgPJI550ZVAd7NjY4oc2MXkGW8YJBY3VctqiyP4q2oUBCVvm2fwVxhMuKybZXS2xaL8skvMiJooLOTLYZc6lPkFNwnas7t-PIf7DXK1_0G-WFcRZ3GZMhuXfG6D45zT8A17EH42q-irca3CSbppukqGdTzJ16xUNIkD7azIMdgYIvMzVQyA5TLrgxeqwrruSco2RhNk1ifB8ASZkfZBfTn7nQHcmubUfaHPQscsU2XSXjO3om6P.gif";
          } else {
            new Image().src = "https://rs.mail.ru/pixel/AAD99gEp1UJkmrJv27cJ__8umIEC6QoCH3M9Va3ere3lZeixJJZPmLOfRAaep15s65dMMET3WkZ5AjxcEbGJGMoQqyaRINjF6BiJZqUDfMpG5kAOyJkX3t5wu8BDY56ugqk0dpueZoVH6uwBp0wPYdXNt5Vs7i3QdVcD0RiFeSJYUV0t0vQulkmzAAAA1SbtPFT-HzZT_rCN_eEMmHjbaBohvcMCN2vZQe1MAYWjhoxMRgQ93Z2y2jQvC4ldo5ML5FnxHZBCktJxYnszanjxuMYpCO6QF2wrt9nBwrF4iDKOBzwoBDkcGyPKknCwKxSdBkpem_LfERiJVVH5LQCkVF4g_ge3hlxJfkbFo9QHPrqigjlTAJ2_pttBnd0MZSmBNQlIS2OiOqQHL8yKHgKl34x48S03VKdxLGGGfgDq6jdqWgmoUMzB9WiZE--A.gif";

            if (yaNode && firstDirectRender) {
              firstDirectRender = false;

              RB.I({
                el: yaNode,
                pixels: ['https://rs.mail.ru/pixel/AAD99gEp1UJkmrJv27cJ__8umIEC6QoCH3M9Va3ere3lZeixJJZPmLOfRAaep15s65dMMET3WkZ5AjxcEbGJGMoQqyaRINjF6BiJZqUDfMpG5kAOyJkX3t5wu8BDY56ugqk0dpueZoVH6uwBp0wPYdXNt5Vs7i3QdVcD0RiFeSJYUV0t0hmyLzCzAAAAXIEI6Mu_fplajvTk3nb-WlLk3RJQ2LPTvoJly3gxC1uDIe5eV7PUK6n0BnY2GbWlRRajMTkaFlhFdnfW1NdagGD2npHbCjXJyS6KuX48w3ja_n39b4APg_Vvzbd3sc1t4oNGshcNoWH7zlYL78By-iZOIOCwnsPhqEnESzBLlntPxhkbypCXVjw8sFuG69bqiCx3d5yFfmNcaD2N4_-S4gMoL4L0g2M9kyx4TF_AUp58GKTdSsSdsPstTR8z8Jlr.gif']
              });

              logRender();
              
              logDirectRenderDurationType(new Date().getTime() - contextReadyStartTime);
            }
          }
          
          if (yaNode && getAreaRatio(yaNode, 'img') > 0.3) {
            new Image().src = "https://rs.mail.ru/pixel/AAD99gEp1UJkmrJv27cJ__8umIEC6QoCH3M9Va3ere3lZeixJJZPmLOfRAaep15s65dMMET3WkZ5AjxcEbGJGMoQqyaRINjF6BiJZqUDfMpG5kAOyJkX3t5wu8BDY56ugqk0dpueZoVH6uwBp0wPYdXNt5Vs7i3QdVcD0RiFeSJYUV0t0lbMLFSzAAAAWKc_NCijUj00hmESSWFElcItRnEtVH9k02OYyv8Q7LQ1ZY6HBi0WSApgH6U8affQgnhZxjFi33qMsvlISz57sbe9lF90k4s-jr2Hi1VZ3WhJMuJM4w0hqsHJzUDj3-CzvXAYfs8Kdh3dSkgNKkejzh6f4OBgpIQurAUfNtkMBUTlr1145UqfrbJOKUTl3VO-G-ZY-KNv5ZYKiMSz3cBdyUsctPUWVBhgw4kMYR2ZNiMFm5UL8PSHiUAFnN2YVYX8.gif";
          }
				}
			}, function () {
			  if (firstDirectRender) {
			    fallback(fallbackType.EMPTY);
			  }
			});
		}
    
    w.YA_MAILRU_OK = true;
    
  	if (w.Ya && Ya.Context && Ya.Context.AdvManager && Ya.Context.AdvManager.render) {
  		onContextReady();
  	} else {
  		w[n] = w[n] || [];
  		w[n].push(onContextReady);
  
  		t = d.getElementsByTagName("script")[0];
  		s = d.createElement("script");
  		s.type = "text/javascript";
  		s.src = "//yandex.ru/ads/system/context.js";
  		s.async = true;
  		s.onerror = function () {
        fallback(fallbackType.ERROR);
      };
  		s.onload = function () {
        logContextLibLoadDurationType(new Date().getTime() - timeStart);
      };
  		t.parentNode.insertBefore(s, t);
  	}
	})(this, this.document, "yandexContextAsyncCallbacks");
</script>
<!--RB-JSON:[
    {
        nodeId: 'yandex_ad_R-142108-736_557487160',
        source: 'direct',
        is_expensive: 'True',format: 'teaser',
        count: 3,
        bannerId: '119817434',
        fallback: [
            {
                nodeId: 'trg-b-119817434-557487160',
                source: 'target',
                format: 'multi',
                count: 1
                }
        ]
    }
]-->





 </div>


<script>
  (function(prefix){
    try{
      
      function getAdsContainers() {
  			var ADS_CLASS = prefix + '-visibility-check',
  				ADS_COUNTER_CLASS = ADS_CLASS + '-counter',
  				ADS_CALLBACK_CLASS = ADS_CLASS + '-callback',
  				COUNTER_ATTR = 'data-counter',
  				COUNTER_ATTR_UNDETERMINED = COUNTER_ATTR + '-un',
  				COUNTER_ATTR_NONVIEWABLE = COUNTER_ATTR + '-nv',
  				CALLBACK_ATTR = 'data-callback',
  				OBSERVER_ATTR = 'data-observer',
  				containers = [],
  				countables = [],
  				i, k, counters, _counter, _observer;
   
  			containers = getByClass(document, ADS_CLASS);
  			for (i = containers.length - 1; i >= 0; i--) {
  				var counters = getByClass(containers[i], ADS_COUNTER_CLASS, 'span');
  				_counter = containers[i].getAttribute(COUNTER_ATTR);
  				_observer = containers[i].hasAttribute(OBSERVER_ATTR);
  				countables[i] = {
  					el: containers[i],
  					pixels: [],
  					pixels_undetermined: [],
  					pixels_nonviewable: [],
  					observer: _observer
  				};
  				if (_counter) countables[i].pixels.push(_counter);
  				for (k = counters.length - 1; k >= 0; k--) {
  					if (counters[k].parentNode === countables[i].el) {
              _counter = counters[k].getAttribute(COUNTER_ATTR);
              if (_counter) {
                countables[i].pixels.push(_counter);
              }
              _counter = counters[k].getAttribute(COUNTER_ATTR_UNDETERMINED);
              if (_counter) {
                countables[i].pixels_undetermined.push(_counter);
              }
              _counter = counters[k].getAttribute(COUNTER_ATTR_NONVIEWABLE);
              if (_counter) {
                countables[i].pixels_nonviewable.push(_counter);
              }
            }
  				}
  				var callback = getByClass(containers[i], ADS_CALLBACK_CLASS, 'span');
  				if (callback[0]) {
  				  var _callback = callback[0].getAttribute(CALLBACK_ATTR);
  				  if (_callback && window.RB_CALLBACKS && window.RB_CALLBACKS[_callback]) {
  				    countables[i].callback = window.RB_CALLBACKS[_callback];
  				  }
  				}
  				if (!countables[i].pixels.length) countables.splice(i, 1);
  			}
   
  			return countables;
  		}
   
  		function getByClass(parent, childClassName, tagName) {
  			if (parent.getElementsByClassName) {
  				return parent.getElementsByClassName(childClassName);
  			} else if (parent.querySelectorAll) {
   
  				return parent.querySelectorAll('.' + childClassName);
  			} else {
  				var els = [];
  				var tmp = parent.getElementsByTagName(tagName ? tagName : "*");
  				var regex = new RegExp("(^|\s)" + childClassName + "(\s|$)");
  				for (var i = 0; i < tmp.length; i++) {
  					if (regex.test(tmp[i].className)) {
  						els.push(tmp[i]);
  					}
  				}
  				return els;
  			}
  		}
   
  		RB.I(getAdsContainers());
      
    }catch(e){}
  }('mailru'))
</script>
