<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="8">
  <HTTPTask id="29" hostname="auth.mail.ru" path="/cgi-bin/auth?from=navi" url="https://auth.mail.ru/cgi-bin/auth?from=navi" ip="217.69.139.60" port="443" client_ip="192.168.1.11" client_port="7684" connectionId="1404" origin="Primary" encodingType="UTF8" startDateTime="2023-09-14T08:17:57.516+03:00" startTime="1691" endTime="1700" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>ZnJvbT1uYXZp</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="from" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>bmF2aQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="POST">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Content-Type" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVk</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9hY2NvdW50Lm1haWwucnUv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXV0aC5tYWlsLnJ1</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YWN0PWE4NGVmNTE3OTFlNjQwYTg4MDFlN2M3ZWNmYjdjOWVjOyBvaWQ9OVV3ekhnOEprSDQ4TmY1dVZYM0I7IG1yY3U9NjY2NDY1MDI5Nzg0NDc1MjA4MEI4OEE5RkM2RDsgbXJoYz1VbnRLRXVscCtQYWd3WFYyTmh4VjQwazVuR1FMUTZocmNydkpmRWJJU0VBPTsgcD1pNFlBQUtDMjBIRUE7IGk9QVFDRmx3SmxBUUJkQmdVQ0FRQT07IHNlYXJjaHVpZD04MTk5NzMzNDgxNjk0NjY4Njc3</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDQ2</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UE9TVCAvY2dpLWJpbi9hdXRoP2Zyb209bmF2aSBIVFRQLzEuMQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClJlZmVyZXI6IGh0dHBzOi8vYWNjb3VudC5tYWlsLnJ1Lw0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBhdXRoLm1haWwucnUNCkNvb2tpZTogYWN0PWE4NGVmNTE3OTFlNjQwYTg4MDFlN2M3ZWNmYjdjOWVjOyBvaWQ9OVV3ekhnOEprSDQ4TmY1dVZYM0I7IG1yY3U9NjY2NDY1MDI5Nzg0NDc1MjA4MEI4OEE5RkM2RDsgbXJoYz1VbnRLRXVscCtQYWd3WFYyTmh4VjQwazVuR1FMUTZocmNydkpmRWJJU0VBPTsgcD1pNFlBQUtDMjBIRUE7IGk9QVFDRmx3SmxBUUJkQmdVQ0FRQT07IHNlYXJjaHVpZD04MTk5NzMzNDgxNjk0NjY4Njc3DQpDb250ZW50LUxlbmd0aDogNDQ2DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="act" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YTg0ZWY1MTc5MWU2NDBhODgwMWU3YzdlY2ZiN2M5ZWM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="oid" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>OVV3ekhnOEprSDQ4TmY1dVZYM0I=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="mrcu" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NjY2NDY1MDI5Nzg0NDc1MjA4MEI4OEE5RkM2RA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="mrhc" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VW50S0V1bHArUGFnd1hWMk5oeFY0MGs1bkdRTFE2aHJjcnZKZkViSVNFQT0=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="p" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aTRZQUFLQzIwSEVB</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="i" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVFDRmx3SmxBUUJkQmdVQ0FRQT0=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="searchuid" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ODE5OTczMzQ4MTY5NDY2ODY3Nw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dXNlcm5hbWU9cGV0eWEubmlrb2xheWV2Ljk4OSU0MG1haWwucnUmTG9naW49cGV0eWEubmlrb2xheWV2Ljk4OSU0MG1haWwucnUmcGFzc3dvcmQ9ck9Fb1JJcmlpMzMqJlBhc3N3b3JkPXJPRW9SSXJpaTMzKiZzYXZlYXV0aD0xJm5ld19hdXRoX2Zvcm09MSZGcm9tQWNjb3VudD1vcGVuZXIlM0RhY2NvdW50JTI2YWxsb3dfZXh0ZXJuYWwlM0QxJTI2dHdvU3RlcHMlM0QxJmFjdF90b2tlbj0wZjI0YjFiODIyYmE0NGUwYjlhNjNiNzQ2NjA4NjMyOSZwYWdlPWh0dHBzJTNBJTJGJTJGZS5tYWlsLnJ1JTJGbWVzc2FnZXMlMkZpbmJveCUzRmFwcF9pZF9teXRyYWNrZXIlM0Q1ODUxOSUyNmF1dGhpZCUzRGxtZ24yOTFxLjd2aSUyNmJhY2slM0QxJTI2ZHdoc3BsaXQlM0RzMTAyNzMuYjFzczEyNzQzcyUyNmZyb20lM0Rsb2dpbiUyNngtbG9naW4tYXV0aCUzRDEmYmFjaz0xJmxhbmc9cnVfUlU=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbng=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAxNCBTZXAgMjAyMyAwNToxNzo1OCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1s</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Transfer-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="P3P" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Q1A9Ik5PTiBDVVIgT1VSIElORCBVTkkgSU5UIg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Location" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9hY2NvdW50Lm1haWwucnUvbG9naW4/JmVycm5vPTYwOSZwYWdlPWh0dHBzJTNBJTJGJTJGZS5tYWlsLnJ1JTJGbWVzc2FnZXMlMkZpbmJveCUzRmFwcF9pZF9teXRyYWNrZXIlM0Q1ODUxOSUyNmF1dGhpZCUzRGxtZ24yOTFxLjd2aSUyNmJhY2slM0QxJTI2ZHdoc3BsaXQlM0RzMTAyNzMuYjFzczEyNzQzcyUyNmZyb20lM0Rsb2dpbiUyNngtbG9naW4tYXV0aCUzRDElMjZiYWNrJTNEMSUyNmZyb20lM0RuYXZpJmZyb209bmF2aSZsYW5nPXJ1X1JVJm9wZW5lcj1hY2NvdW50JmFsbG93X2V4dGVybmFsPTEmdHdvU3RlcHM9MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Mru-Request-Id" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NGYwNzI4NDM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGUsbm8tc3RvcmUsbXVzdC1yZXZhbGlkYXRl</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Pragma" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>V2VkLCAxNCBTZXAgMjAyMiAwNToxNzo1OCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAxNCBTZXAgMjAyMyAwODoxNzo1OCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Host" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZmF1NDQubS5zbWFpbHJ1Lm5ldA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Strict-Transport-Security" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Critical-CH" index="14">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2VjLUNILVVBLVBsYXRmb3JtLCBTZWMtQ0gtVUEtUGxhdGZvcm0tVmVyc2lvbiwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbiwgU2VjLUNILVVBLU1vZGVsLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLUxpc3Q=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-CH" index="15">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2VjLUNILVVBLVBsYXRmb3JtLCBTZWMtQ0gtVUEtUGxhdGZvcm0tVmVyc2lvbiwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbiwgU2VjLUNILVVBLU1vZGVsLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLUxpc3Q=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="16">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="17">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jazsgcmVwb3J0PWh0dHBzOi8vY3NwcmVwb3J0Lm1haWwucnUveHhzc3Byb3RlY3Rpb24=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMzAyIEZvdW5kDQpTZXJ2ZXI6IG5naW54DQpEYXRlOiBUaHUsIDE0IFNlcCAyMDIzIDA1OjE3OjU4IEdNVA0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWwNClRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpQM1A6IENQPSJOT04gQ1VSIE9VUiBJTkQgVU5JIElOVCINCkxvY2F0aW9uOiBodHRwczovL2FjY291bnQubWFpbC5ydS9sb2dpbj8mZXJybm89NjA5JnBhZ2U9aHR0cHMlM0ElMkYlMkZlLm1haWwucnUlMkZtZXNzYWdlcyUyRmluYm94JTNGYXBwX2lkX215dHJhY2tlciUzRDU4NTE5JTI2YXV0aGlkJTNEbG1nbjI5MXEuN3ZpJTI2YmFjayUzRDElMjZkd2hzcGxpdCUzRHMxMDI3My5iMXNzMTI3NDNzJTI2ZnJvbSUzRGxvZ2luJTI2eC1sb2dpbi1hdXRoJTNEMSUyNmJhY2slM0QxJTI2ZnJvbSUzRG5hdmkmZnJvbT1uYXZpJmxhbmc9cnVfUlUmb3BlbmVyPWFjY291bnQmYWxsb3dfZXh0ZXJuYWw9MSZ0d29TdGVwcz0xDQpYLU1ydS1SZXF1ZXN0LUlkOiA0ZjA3Mjg0Mw0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsbm8tc3RvcmUsbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQpFeHBpcmVzOiBXZWQsIDE0IFNlcCAyMDIyIDA1OjE3OjU4IEdNVA0KTGFzdC1Nb2RpZmllZDogVGh1LCAxNCBTZXAgMjAyMyAwODoxNzo1OCBHTVQNClgtSG9zdDogZmF1NDQubS5zbWFpbHJ1Lm5ldA0KU3RyaWN0LVRyYW5zcG9ydC1TZWN1cml0eTogbWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQNCkNyaXRpY2FsLUNIOiBTZWMtQ0gtVUEtUGxhdGZvcm0sIFNlYy1DSC1VQS1QbGF0Zm9ybS1WZXJzaW9uLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLCBTZWMtQ0gtVUEtTW9kZWwsIFNlYy1DSC1VQS1GdWxsLVZlcnNpb24tTGlzdA0KQWNjZXB0LUNIOiBTZWMtQ0gtVUEtUGxhdGZvcm0sIFNlYy1DSC1VQS1QbGF0Zm9ybS1WZXJzaW9uLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLCBTZWMtQ0gtVUEtTW9kZWwsIFNlYy1DSC1VQS1GdWxsLVZlcnNpb24tTGlzdA0KWC1Db250ZW50LVR5cGUtT3B0aW9uczogbm9zbmlmZg0KWC1YU1MtUHJvdGVjdGlvbjogMTsgbW9kZT1ibG9jazsgcmVwb3J0PWh0dHBzOi8vY3NwcmVwb3J0Lm1haWwucnUveHhzc3Byb3RlY3Rpb24NCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>PGh0bWw+PGJvZHk+UmVkaXJlY3QuLi48L2JvZHk+PC9odG1sPg==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
    <HTTPTask id="30" hostname="account.mail.ru" path="/login?&amp;errno=609&amp;page=https%3A%2F%2Fe.mail.ru%2Fmessages%2Finbox%3Fapp_id_mytracker%3D58519%26authid%3Dlmgn291q.7vi%26back%3D1%26dwhsplit%3Ds10273.b1ss12743s%26from%3Dlogin%26x-login-auth%3D1%26back%3D1%26from%3Dnavi&amp;from=navi&amp;lang=ru_RU&amp;opener=account&amp;allow_external=1&amp;twoSteps=1" url="https://account.mail.ru/login?&amp;errno=609&amp;page=https%3A%2F%2Fe.mail.ru%2Fmessages%2Finbox%3Fapp_id_mytracker%3D58519%26authid%3Dlmgn291q.7vi%26back%3D1%26dwhsplit%3Ds10273.b1ss12743s%26from%3Dlogin%26x-login-auth%3D1%26back%3D1%26from%3Dnavi&amp;from=navi&amp;lang=ru_RU&amp;opener=account&amp;allow_external=1&amp;twoSteps=1" ip="94.100.180.61" port="443" client_ip="192.168.1.11" client_port="7682" connectionId="2608" origin="Redirection" encodingType="UTF8" startDateTime="2023-09-14T08:17:57.525+03:00" startTime="1700" endTime="1810" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>JmVycm5vPTYwOSZwYWdlPWh0dHBzJTNBJTJGJTJGZS5tYWlsLnJ1JTJGbWVzc2FnZXMlMkZpbmJveCUzRmFwcF9pZF9teXRyYWNrZXIlM0Q1ODUxOSUyNmF1dGhpZCUzRGxtZ24yOTFxLjd2aSUyNmJhY2slM0QxJTI2ZHdoc3BsaXQlM0RzMTAyNzMuYjFzczEyNzQzcyUyNmZyb20lM0Rsb2dpbiUyNngtbG9naW4tYXV0aCUzRDElMjZiYWNrJTNEMSUyNmZyb20lM0RuYXZpJmZyb209bmF2aSZsYW5nPXJ1X1JVJm9wZW5lcj1hY2NvdW50JmFsbG93X2V4dGVybmFsPTEmdHdvU3RlcHM9MQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="errno" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NjA5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="page" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHMlM0ElMkYlMkZlLm1haWwucnUlMkZtZXNzYWdlcyUyRmluYm94JTNGYXBwX2lkX215dHJhY2tlciUzRDU4NTE5JTI2YXV0aGlkJTNEbG1nbjI5MXEuN3ZpJTI2YmFjayUzRDElMjZkd2hzcGxpdCUzRHMxMDI3My5iMXNzMTI3NDNzJTI2ZnJvbSUzRGxvZ2luJTI2eC1sb2dpbi1hdXRoJTNEMSUyNmJhY2slM0QxJTI2ZnJvbSUzRG5hdmk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="from" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmF2aQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="lang" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnVfUlU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="opener" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YWNjb3VudA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="allow_external" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="twoSteps" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name=":method" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VU</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":scheme" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":path" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>L2xvZ2luPyZlcnJubz02MDkmcGFnZT1odHRwcyUzQSUyRiUyRmUubWFpbC5ydSUyRm1lc3NhZ2VzJTJGaW5ib3glM0ZhcHBfaWRfbXl0cmFja2VyJTNENTg1MTklMjZhdXRoaWQlM0RsbWduMjkxcS43dmklMjZiYWNrJTNEMSUyNmR3aHNwbGl0JTNEczEwMjczLmIxc3MxMjc0M3MlMjZmcm9tJTNEbG9naW4lMjZ4LWxvZ2luLWF1dGglM0QxJTI2YmFjayUzRDElMjZmcm9tJTNEbmF2aSZmcm9tPW5hdmkmbGFuZz1ydV9SVSZvcGVuZXI9YWNjb3VudCZhbGxvd19leHRlcm5hbD0xJnR3b1N0ZXBzPTE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":authority" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YWNjb3VudC5tYWlsLnJ1</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9hY2NvdW50Lm1haWwucnUv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cookie" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YWN0PWE4NGVmNTE3OTFlNjQwYTg4MDFlN2M3ZWNmYjdjOWVjOyBvaWQ9OVV3ekhnOEprSDQ4TmY1dVZYM0I7IG1yY3U9NjY2NDY1MDI5Nzg0NDc1MjA4MEI4OEE5RkM2RDsgbXJoYz1VbnRLRXVscCtQYWd3WFYyTmh4VjQwazVuR1FMUTZocmNydkpmRWJJU0VBPTsgcD1pNFlBQUtDMjBIRUE7IGk9QVFDRmx3SmxBUUJkQmdVQ0FRQT07IHNlYXJjaHVpZD04MTk5NzMzNDgxNjk0NjY4Njc3</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9sb2dpbj8mZXJybm89NjA5JnBhZ2U9aHR0cHMlM0ElMkYlMkZlLm1haWwucnUlMkZtZXNzYWdlcyUyRmluYm94JTNGYXBwX2lkX215dHJhY2tlciUzRDU4NTE5JTI2YXV0aGlkJTNEbG1nbjI5MXEuN3ZpJTI2YmFjayUzRDElMjZkd2hzcGxpdCUzRHMxMDI3My5iMXNzMTI3NDNzJTI2ZnJvbSUzRGxvZ2luJTI2eC1sb2dpbi1hdXRoJTNEMSUyNmJhY2slM0QxJTI2ZnJvbSUzRG5hdmkmZnJvbT1uYXZpJmxhbmc9cnVfUlUmb3BlbmVyPWFjY291bnQmYWxsb3dfZXh0ZXJuYWw9MSZ0d29TdGVwcz0xDQo6YXV0aG9yaXR5OiBhY2NvdW50Lm1haWwucnUNClJlZmVyZXI6IGh0dHBzOi8vYWNjb3VudC5tYWlsLnJ1Lw0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUNCkFjY2VwdDogKi8qDQpjb29raWU6IGFjdD1hODRlZjUxNzkxZTY0MGE4ODAxZTdjN2VjZmI3YzllYzsgb2lkPTlVd3pIZzhKa0g0OE5mNXVWWDNCOyBtcmN1PTY2NjQ2NTAyOTc4NDQ3NTIwODBCODhBOUZDNkQ7IG1yaGM9VW50S0V1bHArUGFnd1hWMk5oeFY0MGs1bkdRTFE2aHJjcnZKZkViSVNFQT07IHA9aTRZQUFLQzIwSEVBOyBpPUFRQ0Zsd0psQVFCZEJnVUNBUUE9OyBzZWFyY2h1aWQ9ODE5OTczMzQ4MTY5NDY2ODY3Nw0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="act" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>YTg0ZWY1MTc5MWU2NDBhODgwMWU3YzdlY2ZiN2M5ZWM=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="oid" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>OVV3ekhnOEprSDQ4TmY1dVZYM0I=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="mrcu" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NjY2NDY1MDI5Nzg0NDc1MjA4MEI4OEE5RkM2RA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="mrhc" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VW50S0V1bHArUGFnd1hWMk5oeFY0MGs1bkdRTFE2aHJjcnZKZkViSVNFQT0=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="p" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aTRZQUFLQzIwSEVB</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="i" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>QVFDRmx3SmxBUUJkQmdVQ0FRQT0=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="searchuid" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>ODE5OTczMzQ4MTY5NDY2ODY3Nw==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">11</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">240</HTTPProperty>
        </HTTPPropertySet>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>0</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Status" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="server" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbng=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="date" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAxNCBTZXAgMjAyMyAwNToxNzo1OCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9odG1sOyBjaGFyc2V0PVVURi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-host" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZmF1NDUubS5zbWFpbHJ1Lm5ldA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-mru-request-id" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YmVjM2YxZDI0YmY4YmM3M2FkMDUyMGE2NjUxNWUwMTM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cache-control" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm8tY2FjaGUsbm8tc3RvcmUsbXVzdC1yZXZhbGlkYXRl</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="pragma" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm8tY2FjaGU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="expires" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>V2VkLCAxNCBTZXAgMjAyMiAwNToxNzo1OCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-mru-sota-response" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="strict-transport-security" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="critical-ch" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2VjLUNILVVBLVBsYXRmb3JtLCBTZWMtQ0gtVUEtUGxhdGZvcm0tVmVyc2lvbiwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbiwgU2VjLUNILVVBLU1vZGVsLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLUxpc3Q=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="accept-ch" index="12">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2VjLUNILVVBLVBsYXRmb3JtLCBTZWMtQ0gtVUEtUGxhdGZvcm0tVmVyc2lvbiwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbiwgU2VjLUNILVVBLU1vZGVsLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLUxpc3Q=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-xss-protection" index="13">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTsgbW9kZT1ibG9jazsgcmVwb3J0PWh0dHBzOi8vY3NwcmVwb3J0Lm1haWwucnUveHhzc3Byb3RlY3Rpb24=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-security-policy" index="14">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZGVmYXVsdC1zcmMgJ25vbmUnOyBiYXNlLXVyaSAnbm9uZSc7IHNjcmlwdC1zcmMgJ3NlbGYnICdub25jZS1iZWMzZjFkMjRiZjhiYzczYWQwNTIwYTY2NTE1ZTAxMycgaHR0cHM6Ly9pbWcuaW1nc21haWwucnUgaHR0cHM6Ly9wb3J0YWwubWFpbC5ydSBodHRwczovL3BvcnRhbC50ZXN0Lm1haWwucnUgaHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vcmVjYXB0Y2hhLyBodHRwczovL3d3dy5nb29nbGUuY29tL3JlY2FwdGNoYS8gaHR0cHM6Ly90b3AtZnd6MS5tYWlsLnJ1ICdyZXBvcnQtc2FtcGxlJyBodHRwczovL2xpbWcuaW1nc21haWwucnU7IHN0eWxlLXNyYyAnc2VsZicgaHR0cHM6Ly9pbWcuaW1nc21haWwucnUgJ3Vuc2FmZS1pbmxpbmUnIGh0dHBzOi8vbGltZy5pbWdzbWFpbC5ydTsgZm9udC1zcmMgaHR0cHM6Ly9pbWcuaW1nc21haWwucnU7IGltZy1zcmMgJ3NlbGYnIGRhdGE6IGh0dHBzOi8vaW1nLmltZ3NtYWlsLnJ1IGh0dHBzOi8vc3RhdC5yYWRhci5pbWdzbWFpbC5ydSBodHRwczovL3JzLm1haWwucnUgaHR0cHM6Ly93d3cudG5zLWNvdW50ZXIucnUgaHR0cHM6Ly90b3AtZnd6MS5tYWlsLnJ1IGh0dHBzOi8vZmlsaW4ubWFpbC5ydSBodHRwczovL3IzLm1haWwucnUgaHR0cHM6Ly9jLm1haWwucnUgaHR0cHM6Ly9jLm15LmNvbSBodHRwczovLyoudXNlcmFwaS5jb20gaHR0cHM6Ly8qLnZrLmNvbSBodHRwczovLyoudmsucnUgaHR0cHM6Ly92ay5jb20gaHR0cHM6Ly92ay5ydSBodHRwczovL2xpbWcuaW1nc21haWwucnUgaHR0cHM6Ly9yZXRpbmEubmV3cy5tYWlsLnJ1IGh0dHBzOi8veHJheS5tYWlsLnJ1IGh0dHBzOi8vYWQubWFpbC5ydSBodHRwczovL3Ryay5tYWlsLnJ1IGh0dHBzOi8vci5tcmFkeC5uZXQ7IGNvbm5lY3Qtc3JjICdzZWxmJyBodHRwczovL3BvcnRhbC5tYWlsLnJ1IGh0dHBzOi8vYXV0aC5tYWlsLnJ1IGh0dHBzOi8vKi5hdXRoLm1haWwucnUgaHR0cHM6Ly9hai1odHRwcy5teS5jb20gaHR0cHM6Ly9hY2NvdW50Lm1haWwucnUgaHR0cHM6Ly8qLnRlc3QubWFpbC5ydSBodHRwczovL2xvZ2luLnZrLmNvbSBodHRwczovL2xvZ2luLnZrLnJ1IHdzczovL3JlYnVzLmUubWFpbC5ydSBodHRwczovL29rLnJ1IGh0dHBzOi8vYmFyLmxvdmUubWFpbC5ydSBodHRwczovL3ZrLmNvbSBodHRwczovL3ZrLnJ1IGh0dHBzOi8veHJheS5tYWlsLnJ1IGh0dHBzOi8vYWQubWFpbC5ydTsgY2hpbGQtc3JjIGh0dHBzOi8vYWNjb3VudC5tYWlsLnJ1IGh0dHBzOi8vKi50ZXN0Lm1haWwucnUgaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9yZWNhcHRjaGEvIGh0dHBzOi8vYXV0aC5tYWlsLnJ1IGh0dHBzOi8vY29ubmVjdC52ay5jb20gaHR0cHM6Ly9jb25uZWN0LnZrLnJ1IGh0dHBzOi8vaWQudmsuY29tIGh0dHBzOi8vaWQudmsucnUgaHR0cHM6Ly9tYXJ1c2lhLXdlYi5nby5tYWlsLnJ1IGh0dHBzOi8vbGltZy5pbWdzbWFpbC5ydTsgcmVwb3J0LXVyaSBodHRwczovL2NzcHJlcG9ydC5tYWlsLnJ1L2xvZ2luOw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-host" index="15">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZmF1NDUubS5zbWFpbHJ1Lm5ldA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="strict-transport-security" index="16">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT0xNTc2ODAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-content-type-options" index="17">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9zbmlmZg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="vary" index="18">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>UmVmZXJlcg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="set-cookie" index="19">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bXJoYz1iSUdVTElQTnBJaHNqaTF6NUVScWdzRmhtWjRBL2NpQW5HSmliamoyVzBnPTsgUGF0aD0vOyBEb21haW49bWFpbC5ydTsgTWF4LUFnZT0zMTUzNjAwMDA7IEh0dHBPbmx5OyBTZWN1cmU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-encoding" index="20">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueA0KZGF0ZTogVGh1LCAxNCBTZXAgMjAyMyAwNToxNzo1OCBHTVQNCmNvbnRlbnQtdHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQp4LWhvc3Q6IGZhdTQ1Lm0uc21haWxydS5uZXQNCngtbXJ1LXJlcXVlc3QtaWQ6IGJlYzNmMWQyNGJmOGJjNzNhZDA1MjBhNjY1MTVlMDEzDQpjYWNoZS1jb250cm9sOiBuby1jYWNoZSxuby1zdG9yZSxtdXN0LXJldmFsaWRhdGUNCnByYWdtYTogbm8tY2FjaGUNCmV4cGlyZXM6IFdlZCwgMTQgU2VwIDIwMjIgMDU6MTc6NTggR01UDQp4LW1ydS1zb3RhLXJlc3BvbnNlOiAxDQpzdHJpY3QtdHJhbnNwb3J0LXNlY3VyaXR5OiBtYXgtYWdlPTMxNTM2MDAwOyBpbmNsdWRlU3ViRG9tYWluczsgcHJlbG9hZA0KY3JpdGljYWwtY2g6IFNlYy1DSC1VQS1QbGF0Zm9ybSwgU2VjLUNILVVBLVBsYXRmb3JtLVZlcnNpb24sIFNlYy1DSC1VQS1GdWxsLVZlcnNpb24sIFNlYy1DSC1VQS1Nb2RlbCwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbi1MaXN0DQphY2NlcHQtY2g6IFNlYy1DSC1VQS1QbGF0Zm9ybSwgU2VjLUNILVVBLVBsYXRmb3JtLVZlcnNpb24sIFNlYy1DSC1VQS1GdWxsLVZlcnNpb24sIFNlYy1DSC1VQS1Nb2RlbCwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbi1MaXN0DQp4LXhzcy1wcm90ZWN0aW9uOiAxOyBtb2RlPWJsb2NrOyByZXBvcnQ9aHR0cHM6Ly9jc3ByZXBvcnQubWFpbC5ydS94eHNzcHJvdGVjdGlvbg0KY29udGVudC1zZWN1cml0eS1wb2xpY3k6IGRlZmF1bHQtc3JjICdub25lJzsgYmFzZS11cmkgJ25vbmUnOyBzY3JpcHQtc3JjICdzZWxmJyAnbm9uY2UtYmVjM2YxZDI0YmY4YmM3M2FkMDUyMGE2NjUxNWUwMTMnIGh0dHBzOi8vaW1nLmltZ3NtYWlsLnJ1IGh0dHBzOi8vcG9ydGFsLm1haWwucnUgaHR0cHM6Ly9wb3J0YWwudGVzdC5tYWlsLnJ1IGh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL3JlY2FwdGNoYS8gaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9yZWNhcHRjaGEvIGh0dHBzOi8vdG9wLWZ3ejEubWFpbC5ydSAncmVwb3J0LXNhbXBsZScgaHR0cHM6Ly9saW1nLmltZ3NtYWlsLnJ1OyBzdHlsZS1zcmMgJ3NlbGYnIGh0dHBzOi8vaW1nLmltZ3NtYWlsLnJ1ICd1bnNhZmUtaW5saW5lJyBodHRwczovL2xpbWcuaW1nc21haWwucnU7IGZvbnQtc3JjIGh0dHBzOi8vaW1nLmltZ3NtYWlsLnJ1OyBpbWctc3JjICdzZWxmJyBkYXRhOiBodHRwczovL2ltZy5pbWdzbWFpbC5ydSBodHRwczovL3N0YXQucmFkYXIuaW1nc21haWwucnUgaHR0cHM6Ly9ycy5tYWlsLnJ1IGh0dHBzOi8vd3d3LnRucy1jb3VudGVyLnJ1IGh0dHBzOi8vdG9wLWZ3ejEubWFpbC5ydSBodHRwczovL2ZpbGluLm1haWwucnUgaHR0cHM6Ly9yMy5tYWlsLnJ1IGh0dHBzOi8vYy5tYWlsLnJ1IGh0dHBzOi8vYy5teS5jb20gaHR0cHM6Ly8qLnVzZXJhcGkuY29tIGh0dHBzOi8vKi52ay5jb20gaHR0cHM6Ly8qLnZrLnJ1IGh0dHBzOi8vdmsuY29tIGh0dHBzOi8vdmsucnUgaHR0cHM6Ly9saW1nLmltZ3NtYWlsLnJ1IGh0dHBzOi8vcmV0aW5hLm5ld3MubWFpbC5ydSBodHRwczovL3hyYXkubWFpbC5ydSBodHRwczovL2FkLm1haWwucnUgaHR0cHM6Ly90cmsubWFpbC5ydSBodHRwczovL3IubXJhZHgubmV0OyBjb25uZWN0LXNyYyAnc2VsZicgaHR0cHM6Ly9wb3J0YWwubWFpbC5ydSBodHRwczovL2F1dGgubWFpbC5ydSBodHRwczovLyouYXV0aC5tYWlsLnJ1IGh0dHBzOi8vYWotaHR0cHMubXkuY29tIGh0dHBzOi8vYWNjb3VudC5tYWlsLnJ1IGh0dHBzOi8vKi50ZXN0Lm1haWwucnUgaHR0cHM6Ly9sb2dpbi52ay5jb20gaHR0cHM6Ly9sb2dpbi52ay5ydSB3c3M6Ly9yZWJ1cy5lLm1haWwucnUgaHR0cHM6Ly9vay5ydSBodHRwczovL2Jhci5sb3ZlLm1haWwucnUgaHR0cHM6Ly92ay5jb20gaHR0cHM6Ly92ay5ydSBodHRwczovL3hyYXkubWFpbC5ydSBodHRwczovL2FkLm1haWwucnU7IGNoaWxkLXNyYyBodHRwczovL2FjY291bnQubWFpbC5ydSBodHRwczovLyoudGVzdC5tYWlsLnJ1IGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vcmVjYXB0Y2hhLyBodHRwczovL2F1dGgubWFpbC5ydSBodHRwczovL2Nvbm5lY3QudmsuY29tIGh0dHBzOi8vY29ubmVjdC52ay5ydSBodHRwczovL2lkLnZrLmNvbSBodHRwczovL2lkLnZrLnJ1IGh0dHBzOi8vbWFydXNpYS13ZWIuZ28ubWFpbC5ydSBodHRwczovL2xpbWcuaW1nc21haWwucnU7IHJlcG9ydC11cmkgaHR0cHM6Ly9jc3ByZXBvcnQubWFpbC5ydS9sb2dpbjsNCngtaG9zdDogZmF1NDUubS5zbWFpbHJ1Lm5ldA0Kc3RyaWN0LXRyYW5zcG9ydC1zZWN1cml0eTogbWF4LWFnZT0xNTc2ODAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQNCngtY29udGVudC10eXBlLW9wdGlvbnM6IG5vc25pZmYNCnZhcnk6IFJlZmVyZXINCnNldC1jb29raWU6IG1yaGM9YklHVUxJUE5wSWhzamkxejVFUnFnc0ZobVo0QS9jaUFuR0ppYmpqMlcwZz07IFBhdGg9LzsgRG9tYWluPW1haWwucnU7IE1heC1BZ2U9MzE1MzYwMDAwOyBIdHRwT25seTsgU2VjdXJlDQpjb250ZW50LWVuY29kaW5nOiBnemlwDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">11</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">1838</HTTPProperty>
        </HTTPPropertySet>
      </HTTPResponse>
      <HTTPTask id="31" hostname="rs.mail.ru" path="/d26047874.gif?sz=49&amp;rnd=138698323&amp;ts=1694668678&amp;sz=49" url="https://rs.mail.ru/d26047874.gif?sz=49&amp;rnd=138698323&amp;ts=1694668678&amp;sz=49" ip="95.163.41.56" port="443" client_ip="192.168.1.11" client_port="7666" connectionId="2488" origin="HTML" encodingType="UTF8" ordinal="1" startDateTime="2023-09-14T08:17:57.635+03:00" startTime="1809" endTime="1817" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
        <QueryString>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c3o9NDkmcm5kPTEzODY5ODMyMyZ0cz0xNjk0NjY4Njc4JnN6PTQ5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </QueryString>
        <HTTPSplittedQueryStrings>
          <HTTPHeaderEntity name="sz" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="rnd" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTM4Njk4MzIz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ts" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTY5NDY2ODY3OA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="sz" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPSplittedQueryStrings>
        <HTTPRequest method="GET">
          <HTTPHeaders>
            <HTTPHeaderEntity name=":method" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>R0VU</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name=":scheme" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aHR0cHM=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name=":path" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>L2QyNjA0Nzg3NC5naWY/c3o9NDkmcm5kPTEzODY5ODMyMyZ0cz0xNjk0NjY4Njc4JnN6PTQ5</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name=":authority" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>cnMubWFpbC5ydQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Referer" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aHR0cHM6Ly9hY2NvdW50Lm1haWwucnUvbG9naW4/JmVycm5vPTYwOSZwYWdlPWh0dHBzJTNBJTJGJTJGZS5tYWlsLnJ1JTJGbWVzc2FnZXMlMkZpbmJveCUzRmFwcF9pZF9teXRyYWNrZXIlM0Q1ODUxOSUyNmF1dGhpZCUzRGxtZ24yOTFxLjd2aSUyNmJhY2slM0QxJTI2ZHdoc3BsaXQlM0RzMTAyNzMuYjFzczEyNzQzcyUyNmZyb20lM0Rsb2dpbiUyNngtbG9naW4tYXV0aCUzRDElMjZiYWNrJTNEMSUyNmZyb20lM0RuYXZpJmZyb209bmF2aSZsYW5nPXJ1X1JVJm9wZW5lcj1hY2NvdW50JmFsbG93X2V4dGVybmFsPTEmdHdvU3RlcHM9MQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="User-Agent" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Encoding" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Language" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>cnU=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept" index="8">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Ki8q</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="cookie" index="9">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>YWN0PWE4NGVmNTE3OTFlNjQwYTg4MDFlN2M3ZWNmYjdjOWVjOyBvaWQ9OVV3ekhnOEprSDQ4TmY1dVZYM0I7IG1yY3U9NjY2NDY1MDI5Nzg0NDc1MjA4MEI4OEE5RkM2RDsgbXJoYz1iSUdVTElQTnBJaHNqaTF6NUVScWdzRmhtWjRBL2NpQW5HSmliamoyVzBnPTsgcD1pNFlBQUtDMjBIRUE7IGk9QVFDRmx3SmxBUUJkQmdVQ0FRQT07IHNlYXJjaHVpZD04MTk5NzMzNDgxNjk0NjY4Njc3</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9kMjYwNDc4NzQuZ2lmP3N6PTQ5JnJuZD0xMzg2OTgzMjMmdHM9MTY5NDY2ODY3OCZzej00OQ0KOmF1dGhvcml0eTogcnMubWFpbC5ydQ0KUmVmZXJlcjogaHR0cHM6Ly9hY2NvdW50Lm1haWwucnUvbG9naW4/JmVycm5vPTYwOSZwYWdlPWh0dHBzJTNBJTJGJTJGZS5tYWlsLnJ1JTJGbWVzc2FnZXMlMkZpbmJveCUzRmFwcF9pZF9teXRyYWNrZXIlM0Q1ODUxOSUyNmF1dGhpZCUzRGxtZ24yOTFxLjd2aSUyNmJhY2slM0QxJTI2ZHdoc3BsaXQlM0RzMTAyNzMuYjFzczEyNzQzcyUyNmZyb20lM0Rsb2dpbiUyNngtbG9naW4tYXV0aCUzRDElMjZiYWNrJTNEMSUyNmZyb20lM0RuYXZpJmZyb209bmF2aSZsYW5nPXJ1X1JVJm9wZW5lcj1hY2NvdW50JmFsbG93X2V4dGVybmFsPTEmdHdvU3RlcHM9MQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUNCkFjY2VwdDogKi8qDQpjb29raWU6IGFjdD1hODRlZjUxNzkxZTY0MGE4ODAxZTdjN2VjZmI3YzllYzsgb2lkPTlVd3pIZzhKa0g0OE5mNXVWWDNCOyBtcmN1PTY2NjQ2NTAyOTc4NDQ3NTIwODBCODhBOUZDNkQ7IG1yaGM9YklHVUxJUE5wSWhzamkxejVFUnFnc0ZobVo0QS9jaUFuR0ppYmpqMlcwZz07IHA9aTRZQUFLQzIwSEVBOyBpPUFRQ0Zsd0psQVFCZEJnVUNBUUE9OyBzZWFyY2h1aWQ9ODE5OTczMzQ4MTY5NDY2ODY3Nw0KDQo=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
            <HTTPCookies>
              <HTTPHeaderEntity name="act" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>YTg0ZWY1MTc5MWU2NDBhODgwMWU3YzdlY2ZiN2M5ZWM=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="oid" index="1">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>OVV3ekhnOEprSDQ4TmY1dVZYM0I=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="mrcu" index="2">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>NjY2NDY1MDI5Nzg0NDc1MjA4MEI4OEE5RkM2RA==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="mrhc" index="3">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>YklHVUxJUE5wSWhzamkxejVFUnFnc0ZobVo0QS9jaUFuR0ppYmpqMlcwZz0=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="p" index="4">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>aTRZQUFLQzIwSEVB</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="i" index="5">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>QVFDRmx3SmxBUUJkQmdVQ0FRQT0=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="searchuid" index="6">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>ODE5OTczMzQ4MTY5NDY2ODY3Nw==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
            </HTTPCookies>
          </HTTPHeaders>
          <HTTPPropertySet>
            <HTTPProperty name="StreamID">7</HTTPProperty>
            <HTTPProperty name="TotalHeadersSize">449</HTTPProperty>
          </HTTPPropertySet>
        </HTTPRequest>
        <HTTPResponse>
          <contentLenght>43</contentLenght>
          <HTTPHeaders>
            <HTTPHeaderEntity name="Status" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjAw</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="server" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bmdpbng=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="date" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VGh1LCAxNCBTZXAgMjAyMyAwNToxNzo1OCBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="content-type" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aW1hZ2UvZ2lm</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="content-length" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NDM=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="set-cookie" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aT1BUUNGbHdKbEFRQmRCZ1VDQVFBPTsgZXhwaXJlcz1UdWUsIDEyIE1hciAyMDI0IDA1OjE3OjU4IEdNVDsgcGF0aD0vOyBkb21haW49Lm1haWwucnU7IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="cache-control" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>cHJpdmF0ZSwgbm8tY2FjaGUsIG5vLXN0b3Jl</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="p3p" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>cG9saWN5cmVmPSIvdzNjL3AzcC54bWwiLCBDUD0iTk9JIERTUCBDT1IgTklEIFBTQW8gUFNEbyBPVVIgQlVTIFVOSSBOQVYgU1RBIElOVCI=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="timing-allow-origin" index="8">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Kg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueA0KZGF0ZTogVGh1LCAxNCBTZXAgMjAyMyAwNToxNzo1OCBHTVQNCmNvbnRlbnQtdHlwZTogaW1hZ2UvZ2lmDQpjb250ZW50LWxlbmd0aDogNDMNCnNldC1jb29raWU6IGk9QVFDRmx3SmxBUUJkQmdVQ0FRQT07IGV4cGlyZXM9VHVlLCAxMiBNYXIgMjAyNCAwNToxNzo1OCBHTVQ7IHBhdGg9LzsgZG9tYWluPS5tYWlsLnJ1OyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNCmNhY2hlLWNvbnRyb2w6IHByaXZhdGUsIG5vLWNhY2hlLCBuby1zdG9yZQ0KcDNwOiBwb2xpY3lyZWY9Ii93M2MvcDNwLnhtbCIsIENQPSJOT0kgRFNQIENPUiBOSUQgUFNBbyBQU0RvIE9VUiBCVVMgVU5JIE5BViBTVEEgSU5UIg0KdGltaW5nLWFsbG93LW9yaWdpbjogKg0KDQo=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
          </HTTPHeaders>
          <HTTPBody>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0lGODlhAQABAIABAAAAAP///yH5BAEAAAEALAAAAAABAAEAAAICTAEAOw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPBody>
          <HTTPPropertySet>
            <HTTPProperty name="StreamID">7</HTTPProperty>
            <HTTPProperty name="TotalHeadersSize">260</HTTPProperty>
          </HTTPPropertySet>
        </HTTPResponse>
      </HTTPTask>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>