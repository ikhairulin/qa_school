<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="2">
  <HTTPTask id="21" hostname="account.mail.ru" path="/login/?mode=simple&amp;v=2.10.0&amp;account_host=account.mail.ru&amp;type=login&amp;allow_external=1&amp;app_id_mytracker=58519&amp;success_redirect=https%3A%2F%2Fe.mail.ru%2Fmessages%2Finbox%3Fback%3D1&amp;project=home&amp;source=mailbox&amp;from=navi&amp;parent_url=https%3A%2F%2Fmail.ru%2F&amp;responsive=compact" url="https://account.mail.ru/login/?mode=simple&amp;v=2.10.0&amp;account_host=account.mail.ru&amp;type=login&amp;allow_external=1&amp;app_id_mytracker=58519&amp;success_redirect=https%3A%2F%2Fe.mail.ru%2Fmessages%2Finbox%3Fback%3D1&amp;project=home&amp;source=mailbox&amp;from=navi&amp;parent_url=https%3A%2F%2Fmail.ru%2F&amp;responsive=compact" ip="217.69.139.61" port="443" client_ip="192.168.1.11" client_port="17376" connectionId="2664" origin="Primary" encodingType="UTF8" startDateTime="2023-09-15T18:05:07.656+03:00" startTime="1091" endTime="1262" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>bW9kZT1zaW1wbGUmdj0yLjEwLjAmYWNjb3VudF9ob3N0PWFjY291bnQubWFpbC5ydSZ0eXBlPWxvZ2luJmFsbG93X2V4dGVybmFsPTEmYXBwX2lkX215dHJhY2tlcj01ODUxOSZzdWNjZXNzX3JlZGlyZWN0PWh0dHBzJTNBJTJGJTJGZS5tYWlsLnJ1JTJGbWVzc2FnZXMlMkZpbmJveCUzRmJhY2slM0QxJnByb2plY3Q9aG9tZSZzb3VyY2U9bWFpbGJveCZmcm9tPW5hdmkmcGFyZW50X3VybD1odHRwcyUzQSUyRiUyRm1haWwucnUlMkYmcmVzcG9uc2l2ZT1jb21wYWN0</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="mode" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>c2ltcGxl</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="v" index="1">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>Mi4xMC4w</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="account_host" index="2">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YWNjb3VudC5tYWlsLnJ1</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="type" index="3">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>bG9naW4=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="allow_external" index="4">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="app_id_mytracker" index="5">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>NTg1MTk=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="success_redirect" index="6">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>aHR0cHMlM0ElMkYlMkZlLm1haWwucnUlMkZtZXNzYWdlcyUyRmluYm94JTNGYmFjayUzRDE=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="project" index="7">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>aG9tZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="source" index="8">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>bWFpbGJveA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="from" index="9">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>bmF2aQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="parent_url" index="10">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>aHR0cHMlM0ElMkYlMkZtYWlsLnJ1JTJG</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="responsive" index="11">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>Y29tcGFjdA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name=":method" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VU</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":scheme" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":path" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>L2xvZ2luLz9tb2RlPXNpbXBsZSZ2PTIuMTAuMCZhY2NvdW50X2hvc3Q9YWNjb3VudC5tYWlsLnJ1JnR5cGU9bG9naW4mYWxsb3dfZXh0ZXJuYWw9MSZhcHBfaWRfbXl0cmFja2VyPTU4NTE5JnN1Y2Nlc3NfcmVkaXJlY3Q9aHR0cHMlM0ElMkYlMkZlLm1haWwucnUlMkZtZXNzYWdlcyUyRmluYm94JTNGYmFjayUzRDEmcHJvamVjdD1ob21lJnNvdXJjZT1tYWlsYm94JmZyb209bmF2aSZwYXJlbnRfdXJsPWh0dHBzJTNBJTJGJTJGbWFpbC5ydSUyRiZyZXNwb25zaXZlPWNvbXBhY3Q=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":authority" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YWNjb3VudC5tYWlsLnJ1</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9tYWlsLnJ1Lw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="cookie" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YWN0PTcwNDAyNmRlMmUyZjRlMjFiY2Q3Mzc2MjljYmViMzFjOyBvaWQ9MlZLZFg5SjlzeHVOaDlEQW83bktqOyBtcmN1PTZFMzc2NTA0NzJBMzA0NDZFMTBBODhBOUZDNkQ7IG1yaGM9YnlGYWFMeEtPdjdsWEZ3R2h3RGVYWVh3NjNQYmZaOXNiMkVUR1JPSFBYRT07IHA9cUJnQUFBWEJ4bTRBOyBpPUFRQ2tjZ1JsQVFDSkRRVUNBUUE9OyBzZWFyY2h1aWQ9NzQyODUwMTI2MTY5NDc5MDMwOA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9sb2dpbi8/bW9kZT1zaW1wbGUmdj0yLjEwLjAmYWNjb3VudF9ob3N0PWFjY291bnQubWFpbC5ydSZ0eXBlPWxvZ2luJmFsbG93X2V4dGVybmFsPTEmYXBwX2lkX215dHJhY2tlcj01ODUxOSZzdWNjZXNzX3JlZGlyZWN0PWh0dHBzJTNBJTJGJTJGZS5tYWlsLnJ1JTJGbWVzc2FnZXMlMkZpbmJveCUzRmJhY2slM0QxJnByb2plY3Q9aG9tZSZzb3VyY2U9bWFpbGJveCZmcm9tPW5hdmkmcGFyZW50X3VybD1odHRwcyUzQSUyRiUyRm1haWwucnUlMkYmcmVzcG9uc2l2ZT1jb21wYWN0DQo6YXV0aG9yaXR5OiBhY2NvdW50Lm1haWwucnUNClJlZmVyZXI6IGh0dHBzOi8vbWFpbC5ydS8NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC4wLjAgU2FmYXJpLzUzNy4zNiBFZGcvMTE2LjAuMTkzOC43Ng0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IHJ1DQpBY2NlcHQ6ICovKg0KY29va2llOiBhY3Q9NzA0MDI2ZGUyZTJmNGUyMWJjZDczNzYyOWNiZWIzMWM7IG9pZD0yVktkWDlKOXN4dU5oOURBbzduS2o7IG1yY3U9NkUzNzY1MDQ3MkEzMDQ0NkUxMEE4OEE5RkM2RDsgbXJoYz1ieUZhYUx4S092N2xYRndHaHdEZVhZWHc2M1BiZlo5c2IyRVRHUk9IUFhFPTsgcD1xQmdBQUFYQnhtNEE7IGk9QVFDa2NnUmxBUUNKRFFVQ0FRQT07IHNlYXJjaHVpZD03NDI4NTAxMjYxNjk0NzkwMzA4DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="act" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NzA0MDI2ZGUyZTJmNGUyMWJjZDczNzYyOWNiZWIzMWM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="oid" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MlZLZFg5SjlzeHVOaDlEQW83bktq</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="mrcu" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NkUzNzY1MDQ3MkEzMDQ0NkUxMEE4OEE5RkM2RA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="mrhc" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YnlGYWFMeEtPdjdsWEZ3R2h3RGVYWVh3NjNQYmZaOXNiMkVUR1JPSFBYRT0=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="p" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cUJnQUFBWEJ4bTRB</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="i" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVFDa2NnUmxBUUNKRFFVQ0FRQT0=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="searchuid" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NzQyODUwMTI2MTY5NDc5MDMwOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
      <HTTPPropertySet>
        <HTTPProperty name="StreamID">1</HTTPProperty>
        <HTTPProperty name="TotalHeadersSize">515</HTTPProperty>
      </HTTPPropertySet>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Status" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="server" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbng=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="date" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAxNSBTZXAgMjAyMyAxNTowNTowOCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="content-type" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sOyBjaGFyc2V0PVVURi04</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-host" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZmF1NDMubS5zbWFpbHJ1Lm5ldA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-mru-request-id" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NjA4ZmU4NzA4YmFmZWE1MjI4MzY1MGFiMmQ3NTdhMjM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="cache-control" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGUsbm8tc3RvcmUsbXVzdC1yZXZhbGlkYXRl</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="pragma" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="expires" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAxNSBTZXAgMjAyMiAxNTowNTowOCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-mru-sota-response" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="strict-transport-security" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="critical-ch" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2VjLUNILVVBLVBsYXRmb3JtLCBTZWMtQ0gtVUEtUGxhdGZvcm0tVmVyc2lvbiwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbiwgU2VjLUNILVVBLU1vZGVsLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLUxpc3Q=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="accept-ch" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2VjLUNILVVBLVBsYXRmb3JtLCBTZWMtQ0gtVUEtUGxhdGZvcm0tVmVyc2lvbiwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbiwgU2VjLUNILVVBLU1vZGVsLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLUxpc3Q=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-xss-protection" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jazsgcmVwb3J0PWh0dHBzOi8vY3NwcmVwb3J0Lm1haWwucnUveHhzc3Byb3RlY3Rpb24=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="content-security-policy" index="14">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGVmYXVsdC1zcmMgJ25vbmUnOyBiYXNlLXVyaSAnbm9uZSc7IHNjcmlwdC1zcmMgJ3NlbGYnICdub25jZS02MDhmZTg3MDhiYWZlYTUyMjgzNjUwYWIyZDc1N2EyMycgaHR0cHM6Ly9pbWcuaW1nc21haWwucnUgaHR0cHM6Ly9wb3J0YWwubWFpbC5ydSBodHRwczovL3BvcnRhbC50ZXN0Lm1haWwucnUgaHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vcmVjYXB0Y2hhLyBodHRwczovL3d3dy5nb29nbGUuY29tL3JlY2FwdGNoYS8gaHR0cHM6Ly90b3AtZnd6MS5tYWlsLnJ1ICdyZXBvcnQtc2FtcGxlJyBodHRwczovL2xpbWcuaW1nc21haWwucnU7IHN0eWxlLXNyYyAnc2VsZicgaHR0cHM6Ly9pbWcuaW1nc21haWwucnUgJ3Vuc2FmZS1pbmxpbmUnIGh0dHBzOi8vbGltZy5pbWdzbWFpbC5ydTsgZm9udC1zcmMgaHR0cHM6Ly9pbWcuaW1nc21haWwucnU7IGltZy1zcmMgJ3NlbGYnIGRhdGE6IGh0dHBzOi8vaW1nLmltZ3NtYWlsLnJ1IGh0dHBzOi8vc3RhdC5yYWRhci5pbWdzbWFpbC5ydSBodHRwczovL3JzLm1haWwucnUgaHR0cHM6Ly93d3cudG5zLWNvdW50ZXIucnUgaHR0cHM6Ly90b3AtZnd6MS5tYWlsLnJ1IGh0dHBzOi8vZmlsaW4ubWFpbC5ydSBodHRwczovL3IzLm1haWwucnUgaHR0cHM6Ly9jLm1haWwucnUgaHR0cHM6Ly9jLm15LmNvbSBodHRwczovLyoudXNlcmFwaS5jb20gaHR0cHM6Ly8qLnZrLmNvbSBodHRwczovLyoudmsucnUgaHR0cHM6Ly92ay5jb20gaHR0cHM6Ly92ay5ydSBodHRwczovL2xpbWcuaW1nc21haWwucnUgaHR0cHM6Ly9yZXRpbmEubmV3cy5tYWlsLnJ1IGh0dHBzOi8veHJheS5tYWlsLnJ1IGh0dHBzOi8vYWQubWFpbC5ydSBodHRwczovL3Ryay5tYWlsLnJ1IGh0dHBzOi8vci5tcmFkeC5uZXQ7IGNvbm5lY3Qtc3JjICdzZWxmJyBodHRwczovL3BvcnRhbC5tYWlsLnJ1IGh0dHBzOi8vYXV0aC5tYWlsLnJ1IGh0dHBzOi8vKi5hdXRoLm1haWwucnUgaHR0cHM6Ly9hai1odHRwcy5teS5jb20gaHR0cHM6Ly9hY2NvdW50Lm1haWwucnUgaHR0cHM6Ly8qLnRlc3QubWFpbC5ydSBodHRwczovL2xvZ2luLnZrLmNvbSBodHRwczovL2xvZ2luLnZrLnJ1IHdzczovL3JlYnVzLmUubWFpbC5ydSBodHRwczovL29rLnJ1IGh0dHBzOi8vYmFyLmxvdmUubWFpbC5ydSBodHRwczovL3ZrLmNvbSBodHRwczovL3ZrLnJ1IGh0dHBzOi8veHJheS5tYWlsLnJ1IGh0dHBzOi8vYWQubWFpbC5ydTsgY2hpbGQtc3JjIGh0dHBzOi8vYWNjb3VudC5tYWlsLnJ1IGh0dHBzOi8vKi50ZXN0Lm1haWwucnUgaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9yZWNhcHRjaGEvIGh0dHBzOi8vYXV0aC5tYWlsLnJ1IGh0dHBzOi8vY29ubmVjdC52ay5jb20gaHR0cHM6Ly9jb25uZWN0LnZrLnJ1IGh0dHBzOi8vaWQudmsuY29tIGh0dHBzOi8vaWQudmsucnUgaHR0cHM6Ly9tYXJ1c2lhLXdlYi5nby5tYWlsLnJ1IGh0dHBzOi8vbGltZy5pbWdzbWFpbC5ydTsgcmVwb3J0LXVyaSBodHRwczovL2NzcHJlcG9ydC5tYWlsLnJ1L2xvZ2luOw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-host" index="15">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZmF1NDMubS5zbWFpbHJ1Lm5ldA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="strict-transport-security" index="16">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0xNTc2ODAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-content-type-options" index="17">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="vary" index="18">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UmVmZXJlcg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="set-cookie" index="19">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bXJoYz02bHlpcHQwZEVjQ1pwME9tUUhVcC9JWFdXcTAvV0xHdnJ2eUhNdTcyeHhFPTsgUGF0aD0vOyBEb21haW49bWFpbC5ydTsgTWF4LUFnZT0zMTUzNjAwMDA7IEh0dHBPbmx5OyBTZWN1cmU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="content-encoding" index="20">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueA0KZGF0ZTogRnJpLCAxNSBTZXAgMjAyMyAxNTowNTowOCBHTVQNCmNvbnRlbnQtdHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQp4LWhvc3Q6IGZhdTQzLm0uc21haWxydS5uZXQNCngtbXJ1LXJlcXVlc3QtaWQ6IDYwOGZlODcwOGJhZmVhNTIyODM2NTBhYjJkNzU3YTIzDQpjYWNoZS1jb250cm9sOiBuby1jYWNoZSxuby1zdG9yZSxtdXN0LXJldmFsaWRhdGUNCnByYWdtYTogbm8tY2FjaGUNCmV4cGlyZXM6IFRodSwgMTUgU2VwIDIwMjIgMTU6MDU6MDggR01UDQp4LW1ydS1zb3RhLXJlc3BvbnNlOiAxDQpzdHJpY3QtdHJhbnNwb3J0LXNlY3VyaXR5OiBtYXgtYWdlPTMxNTM2MDAwOyBpbmNsdWRlU3ViRG9tYWluczsgcHJlbG9hZA0KY3JpdGljYWwtY2g6IFNlYy1DSC1VQS1QbGF0Zm9ybSwgU2VjLUNILVVBLVBsYXRmb3JtLVZlcnNpb24sIFNlYy1DSC1VQS1GdWxsLVZlcnNpb24sIFNlYy1DSC1VQS1Nb2RlbCwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbi1MaXN0DQphY2NlcHQtY2g6IFNlYy1DSC1VQS1QbGF0Zm9ybSwgU2VjLUNILVVBLVBsYXRmb3JtLVZlcnNpb24sIFNlYy1DSC1VQS1GdWxsLVZlcnNpb24sIFNlYy1DSC1VQS1Nb2RlbCwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbi1MaXN0DQp4LXhzcy1wcm90ZWN0aW9uOiAxOyBtb2RlPWJsb2NrOyByZXBvcnQ9aHR0cHM6Ly9jc3ByZXBvcnQubWFpbC5ydS94eHNzcHJvdGVjdGlvbg0KY29udGVudC1zZWN1cml0eS1wb2xpY3k6IGRlZmF1bHQtc3JjICdub25lJzsgYmFzZS11cmkgJ25vbmUnOyBzY3JpcHQtc3JjICdzZWxmJyAnbm9uY2UtNjA4ZmU4NzA4YmFmZWE1MjI4MzY1MGFiMmQ3NTdhMjMnIGh0dHBzOi8vaW1nLmltZ3NtYWlsLnJ1IGh0dHBzOi8vcG9ydGFsLm1haWwucnUgaHR0cHM6Ly9wb3J0YWwudGVzdC5tYWlsLnJ1IGh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL3JlY2FwdGNoYS8gaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9yZWNhcHRjaGEvIGh0dHBzOi8vdG9wLWZ3ejEubWFpbC5ydSAncmVwb3J0LXNhbXBsZScgaHR0cHM6Ly9saW1nLmltZ3NtYWlsLnJ1OyBzdHlsZS1zcmMgJ3NlbGYnIGh0dHBzOi8vaW1nLmltZ3NtYWlsLnJ1ICd1bnNhZmUtaW5saW5lJyBodHRwczovL2xpbWcuaW1nc21haWwucnU7IGZvbnQtc3JjIGh0dHBzOi8vaW1nLmltZ3NtYWlsLnJ1OyBpbWctc3JjICdzZWxmJyBkYXRhOiBodHRwczovL2ltZy5pbWdzbWFpbC5ydSBodHRwczovL3N0YXQucmFkYXIuaW1nc21haWwucnUgaHR0cHM6Ly9ycy5tYWlsLnJ1IGh0dHBzOi8vd3d3LnRucy1jb3VudGVyLnJ1IGh0dHBzOi8vdG9wLWZ3ejEubWFpbC5ydSBodHRwczovL2ZpbGluLm1haWwucnUgaHR0cHM6Ly9yMy5tYWlsLnJ1IGh0dHBzOi8vYy5tYWlsLnJ1IGh0dHBzOi8vYy5teS5jb20gaHR0cHM6Ly8qLnVzZXJhcGkuY29tIGh0dHBzOi8vKi52ay5jb20gaHR0cHM6Ly8qLnZrLnJ1IGh0dHBzOi8vdmsuY29tIGh0dHBzOi8vdmsucnUgaHR0cHM6Ly9saW1nLmltZ3NtYWlsLnJ1IGh0dHBzOi8vcmV0aW5hLm5ld3MubWFpbC5ydSBodHRwczovL3hyYXkubWFpbC5ydSBodHRwczovL2FkLm1haWwucnUgaHR0cHM6Ly90cmsubWFpbC5ydSBodHRwczovL3IubXJhZHgubmV0OyBjb25uZWN0LXNyYyAnc2VsZicgaHR0cHM6Ly9wb3J0YWwubWFpbC5ydSBodHRwczovL2F1dGgubWFpbC5ydSBodHRwczovLyouYXV0aC5tYWlsLnJ1IGh0dHBzOi8vYWotaHR0cHMubXkuY29tIGh0dHBzOi8vYWNjb3VudC5tYWlsLnJ1IGh0dHBzOi8vKi50ZXN0Lm1haWwucnUgaHR0cHM6Ly9sb2dpbi52ay5jb20gaHR0cHM6Ly9sb2dpbi52ay5ydSB3c3M6Ly9yZWJ1cy5lLm1haWwucnUgaHR0cHM6Ly9vay5ydSBodHRwczovL2Jhci5sb3ZlLm1haWwucnUgaHR0cHM6Ly92ay5jb20gaHR0cHM6Ly92ay5ydSBodHRwczovL3hyYXkubWFpbC5ydSBodHRwczovL2FkLm1haWwucnU7IGNoaWxkLXNyYyBodHRwczovL2FjY291bnQubWFpbC5ydSBodHRwczovLyoudGVzdC5tYWlsLnJ1IGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vcmVjYXB0Y2hhLyBodHRwczovL2F1dGgubWFpbC5ydSBodHRwczovL2Nvbm5lY3QudmsuY29tIGh0dHBzOi8vY29ubmVjdC52ay5ydSBodHRwczovL2lkLnZrLmNvbSBodHRwczovL2lkLnZrLnJ1IGh0dHBzOi8vbWFydXNpYS13ZWIuZ28ubWFpbC5ydSBodHRwczovL2xpbWcuaW1nc21haWwucnU7IHJlcG9ydC11cmkgaHR0cHM6Ly9jc3ByZXBvcnQubWFpbC5ydS9sb2dpbjsNCngtaG9zdDogZmF1NDMubS5zbWFpbHJ1Lm5ldA0Kc3RyaWN0LXRyYW5zcG9ydC1zZWN1cml0eTogbWF4LWFnZT0xNTc2ODAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQNCngtY29udGVudC10eXBlLW9wdGlvbnM6IG5vc25pZmYNCnZhcnk6IFJlZmVyZXINCnNldC1jb29raWU6IG1yaGM9Nmx5aXB0MGRFY0NacDBPbVFIVXAvSVhXV3EwL1dMR3ZydnlITXU3Mnh4RT07IFBhdGg9LzsgRG9tYWluPW1haWwucnU7IE1heC1BZ2U9MzE1MzYwMDAwOyBIdHRwT25seTsgU2VjdXJlDQpjb250ZW50LWVuY29kaW5nOiBnemlwDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <HTTPPropertySet>
        <HTTPProperty name="StreamID">1</HTTPProperty>
        <HTTPProperty name="TotalHeadersSize">1840</HTTPProperty>
      </HTTPPropertySet>
    </HTTPResponse>
    <HTTPTask id="22" hostname="img.imgsmail.ru" path="/pkgs/login.mail.ru/194526/css/login.css" url="https://img.imgsmail.ru/pkgs/login.mail.ru/194526/css/login.css" ip="217.69.139.101" port="443" client_ip="192.168.1.11" client_port="17377" connectionId="2676" origin="HTML" encodingType="UTF8" ordinal="1" startDateTime="2023-09-15T18:05:07.810+03:00" startTime="1245" endTime="1332" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name=":method" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VU</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":scheme" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":path" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>L3BrZ3MvbG9naW4ubWFpbC5ydS8xOTQ1MjYvY3NzL2xvZ2luLmNzcw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":authority" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1nLmltZ3NtYWlsLnJ1</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9hY2NvdW50Lm1haWwucnUvbG9naW4vP21vZGU9c2ltcGxlJnY9Mi4xMC4wJmFjY291bnRfaG9zdD1hY2NvdW50Lm1haWwucnUmdHlwZT1sb2dpbiZhbGxvd19leHRlcm5hbD0xJmFwcF9pZF9teXRyYWNrZXI9NTg1MTkmc3VjY2Vzc19yZWRpcmVjdD1odHRwcyUzQSUyRiUyRmUubWFpbC5ydSUyRm1lc3NhZ2VzJTJGaW5ib3glM0ZiYWNrJTNEMSZwcm9qZWN0PWhvbWUmc291cmNlPW1haWxib3gmZnJvbT1uYXZpJnBhcmVudF91cmw9aHR0cHMlM0ElMkYlMkZtYWlsLnJ1JTJGJnJlc3BvbnNpdmU9Y29tcGFjdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9wa2dzL2xvZ2luLm1haWwucnUvMTk0NTI2L2Nzcy9sb2dpbi5jc3MNCjphdXRob3JpdHk6IGltZy5pbWdzbWFpbC5ydQ0KUmVmZXJlcjogaHR0cHM6Ly9hY2NvdW50Lm1haWwucnUvbG9naW4vP21vZGU9c2ltcGxlJnY9Mi4xMC4wJmFjY291bnRfaG9zdD1hY2NvdW50Lm1haWwucnUmdHlwZT1sb2dpbiZhbGxvd19leHRlcm5hbD0xJmFwcF9pZF9teXRyYWNrZXI9NTg1MTkmc3VjY2Vzc19yZWRpcmVjdD1odHRwcyUzQSUyRiUyRmUubWFpbC5ydSUyRm1lc3NhZ2VzJTJGaW5ib3glM0ZiYWNrJTNEMSZwcm9qZWN0PWhvbWUmc291cmNlPW1haWxib3gmZnJvbT1uYXZpJnBhcmVudF91cmw9aHR0cHMlM0ElMkYlMkZtYWlsLnJ1JTJGJnJlc3BvbnNpdmU9Y29tcGFjdA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUNCkFjY2VwdDogKi8qDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">1</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">376</HTTPProperty>
        </HTTPPropertySet>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>0</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Status" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="server" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbng=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="date" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAxNSBTZXAgMjAyMyAxNTowNTowOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="last-modified" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAxMiBTZXAgMjAyMyAwOTo0MTowOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="etag" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Vy8iNjUwMDMyMzQtOTk2NSI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="timing-allow-origin" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Kg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-content-type-options" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9zbmlmZg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="vary" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>T3JpZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="expires" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAzMSBEZWMgMjAzNyAyMzo1NTo1NSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cache-control" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT0zMTUzNjAwMDA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-encoding" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueA0KZGF0ZTogRnJpLCAxNSBTZXAgMjAyMyAxNTowNTowOCBHTVQNCmNvbnRlbnQtdHlwZTogdGV4dC9jc3MNCmxhc3QtbW9kaWZpZWQ6IFR1ZSwgMTIgU2VwIDIwMjMgMDk6NDE6MDggR01UDQpldGFnOiBXLyI2NTAwMzIzNC05OTY1Ig0KdGltaW5nLWFsbG93LW9yaWdpbjogKg0KeC1jb250ZW50LXR5cGUtb3B0aW9uczogbm9zbmlmZg0KdmFyeTogT3JpZ2luDQpleHBpcmVzOiBUaHUsIDMxIERlYyAyMDM3IDIzOjU1OjU1IEdNVA0KY2FjaGUtY29udHJvbDogbWF4LWFnZT0zMTUzNjAwMDANCmNvbnRlbnQtZW5jb2Rpbmc6IGd6aXANCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">1</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">209</HTTPProperty>
        </HTTPPropertySet>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="23" hostname="rs.mail.ru" path="/d26047874.gif?sz=49&amp;rnd=115197181&amp;ts=1694790308&amp;sz=49" url="https://rs.mail.ru/d26047874.gif?sz=49&amp;rnd=115197181&amp;ts=1694790308&amp;sz=49" ip="95.163.41.56" port="443" client_ip="192.168.1.11" client_port="17361" connectionId="2520" origin="HTML" encodingType="UTF8" ordinal="2" startDateTime="2023-09-15T18:05:07.827+03:00" startTime="1261" endTime="1267" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>c3o9NDkmcm5kPTExNTE5NzE4MSZ0cz0xNjk0NzkwMzA4JnN6PTQ5</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="sz" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="rnd" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTE1MTk3MTgx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ts" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTY5NDc5MDMwOA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sz" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name=":method" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VU</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":scheme" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":path" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>L2QyNjA0Nzg3NC5naWY/c3o9NDkmcm5kPTExNTE5NzE4MSZ0cz0xNjk0NzkwMzA4JnN6PTQ5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":authority" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnMubWFpbC5ydQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9hY2NvdW50Lm1haWwucnUvbG9naW4vP21vZGU9c2ltcGxlJnY9Mi4xMC4wJmFjY291bnRfaG9zdD1hY2NvdW50Lm1haWwucnUmdHlwZT1sb2dpbiZhbGxvd19leHRlcm5hbD0xJmFwcF9pZF9teXRyYWNrZXI9NTg1MTkmc3VjY2Vzc19yZWRpcmVjdD1odHRwcyUzQSUyRiUyRmUubWFpbC5ydSUyRm1lc3NhZ2VzJTJGaW5ib3glM0ZiYWNrJTNEMSZwcm9qZWN0PWhvbWUmc291cmNlPW1haWxib3gmZnJvbT1uYXZpJnBhcmVudF91cmw9aHR0cHMlM0ElMkYlMkZtYWlsLnJ1JTJGJnJlc3BvbnNpdmU9Y29tcGFjdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cookie" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YWN0PTcwNDAyNmRlMmUyZjRlMjFiY2Q3Mzc2MjljYmViMzFjOyBvaWQ9MlZLZFg5SjlzeHVOaDlEQW83bktqOyBtcmN1PTZFMzc2NTA0NzJBMzA0NDZFMTBBODhBOUZDNkQ7IG1yaGM9Nmx5aXB0MGRFY0NacDBPbVFIVXAvSVhXV3EwL1dMR3ZydnlITXU3Mnh4RT07IHA9cUJnQUFBWEJ4bTRBOyBpPUFRQ2tjZ1JsQVFDSkRRVUNBUUE9OyBzZWFyY2h1aWQ9NzQyODUwMTI2MTY5NDc5MDMwOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9kMjYwNDc4NzQuZ2lmP3N6PTQ5JnJuZD0xMTUxOTcxODEmdHM9MTY5NDc5MDMwOCZzej00OQ0KOmF1dGhvcml0eTogcnMubWFpbC5ydQ0KUmVmZXJlcjogaHR0cHM6Ly9hY2NvdW50Lm1haWwucnUvbG9naW4vP21vZGU9c2ltcGxlJnY9Mi4xMC4wJmFjY291bnRfaG9zdD1hY2NvdW50Lm1haWwucnUmdHlwZT1sb2dpbiZhbGxvd19leHRlcm5hbD0xJmFwcF9pZF9teXRyYWNrZXI9NTg1MTkmc3VjY2Vzc19yZWRpcmVjdD1odHRwcyUzQSUyRiUyRmUubWFpbC5ydSUyRm1lc3NhZ2VzJTJGaW5ib3glM0ZiYWNrJTNEMSZwcm9qZWN0PWhvbWUmc291cmNlPW1haWxib3gmZnJvbT1uYXZpJnBhcmVudF91cmw9aHR0cHMlM0ElMkYlMkZtYWlsLnJ1JTJGJnJlc3BvbnNpdmU9Y29tcGFjdA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUNCkFjY2VwdDogKi8qDQpjb29raWU6IGFjdD03MDQwMjZkZTJlMmY0ZTIxYmNkNzM3NjI5Y2JlYjMxYzsgb2lkPTJWS2RYOUo5c3h1Tmg5REFvN25LajsgbXJjdT02RTM3NjUwNDcyQTMwNDQ2RTEwQTg4QTlGQzZEOyBtcmhjPTZseWlwdDBkRWNDWnAwT21RSFVwL0lYV1dxMC9XTEd2cnZ5SE11NzJ4eEU9OyBwPXFCZ0FBQVhCeG00QTsgaT1BUUNrY2dSbEFRQ0pEUVVDQVFBPTsgc2VhcmNodWlkPTc0Mjg1MDEyNjE2OTQ3OTAzMDgNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="act" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NzA0MDI2ZGUyZTJmNGUyMWJjZDczNzYyOWNiZWIzMWM=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="oid" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MlZLZFg5SjlzeHVOaDlEQW83bktq</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="mrcu" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NkUzNzY1MDQ3MkEzMDQ0NkUxMEE4OEE5RkM2RA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="mrhc" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Nmx5aXB0MGRFY0NacDBPbVFIVXAvSVhXV3EwL1dMR3ZydnlITXU3Mnh4RT0=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="p" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>cUJnQUFBWEJ4bTRB</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="i" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>QVFDa2NnUmxBUUNKRFFVQ0FRQT0=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="searchuid" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NzQyODUwMTI2MTY5NDc5MDMwOA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">5</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">441</HTTPProperty>
        </HTTPPropertySet>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>43</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Status" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="server" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbng=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="date" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAxNSBTZXAgMjAyMyAxNTowNTowOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvZ2lm</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-length" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="set-cookie" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aT1BUUNrY2dSbEFRQ0pEUVVDQVFBPTsgZXhwaXJlcz1XZWQsIDEzIE1hciAyMDI0IDE1OjA1OjA4IEdNVDsgcGF0aD0vOyBkb21haW49Lm1haWwucnU7IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cache-control" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHJpdmF0ZSwgbm8tY2FjaGUsIG5vLXN0b3Jl</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="p3p" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cG9saWN5cmVmPSIvdzNjL3AzcC54bWwiLCBDUD0iTk9JIERTUCBDT1IgTklEIFBTQW8gUFNEbyBPVVIgQlVTIFVOSSBOQVYgU1RBIElOVCI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="timing-allow-origin" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Kg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueA0KZGF0ZTogRnJpLCAxNSBTZXAgMjAyMyAxNTowNTowOCBHTVQNCmNvbnRlbnQtdHlwZTogaW1hZ2UvZ2lmDQpjb250ZW50LWxlbmd0aDogNDMNCnNldC1jb29raWU6IGk9QVFDa2NnUmxBUUNKRFFVQ0FRQT07IGV4cGlyZXM9V2VkLCAxMyBNYXIgMjAyNCAxNTowNTowOCBHTVQ7IHBhdGg9LzsgZG9tYWluPS5tYWlsLnJ1OyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNCmNhY2hlLWNvbnRyb2w6IHByaXZhdGUsIG5vLWNhY2hlLCBuby1zdG9yZQ0KcDNwOiBwb2xpY3lyZWY9Ii93M2MvcDNwLnhtbCIsIENQPSJOT0kgRFNQIENPUiBOSUQgUFNBbyBQU0RvIE9VUiBCVVMgVU5JIE5BViBTVEEgSU5UIg0KdGltaW5nLWFsbG93LW9yaWdpbjogKg0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0lGODlhAQABAIABAAAAAP///yH5BAEAAAEALAAAAAABAAEAAAICTAEAOw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">5</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">260</HTTPProperty>
        </HTTPPropertySet>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>