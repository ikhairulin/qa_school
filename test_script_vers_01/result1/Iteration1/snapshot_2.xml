<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="2">
  <HTTPTask id="22" hostname="account.mail.ru" path="/login/?mode=simple&amp;v=2.10.0&amp;account_host=account.mail.ru&amp;type=login&amp;allow_external=1&amp;app_id_mytracker=58519&amp;success_redirect=https%3A%2F%2Fe.mail.ru%2Fmessages%2Finbox%3Fback%3D1&amp;project=home&amp;source=mailbox&amp;from=navi&amp;parent_url=https%3A%2F%2Fmail.ru%2F&amp;responsive=compact" url="https://account.mail.ru/login/?mode=simple&amp;v=2.10.0&amp;account_host=account.mail.ru&amp;type=login&amp;allow_external=1&amp;app_id_mytracker=58519&amp;success_redirect=https%3A%2F%2Fe.mail.ru%2Fmessages%2Finbox%3Fback%3D1&amp;project=home&amp;source=mailbox&amp;from=navi&amp;parent_url=https%3A%2F%2Fmail.ru%2F&amp;responsive=compact" ip="94.100.180.61" port="443" client_ip="192.168.1.11" client_port="7752" connectionId="2528" origin="Primary" encodingType="UTF8" startDateTime="2023-09-26T23:30:23.353+03:00" startTime="2177" endTime="2575" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>bW9kZT1zaW1wbGUmdj0yLjEwLjAmYWNjb3VudF9ob3N0PWFjY291bnQubWFpbC5ydSZ0eXBlPWxvZ2luJmFsbG93X2V4dGVybmFsPTEmYXBwX2lkX215dHJhY2tlcj01ODUxOSZzdWNjZXNzX3JlZGlyZWN0PWh0dHBzJTNBJTJGJTJGZS5tYWlsLnJ1JTJGbWVzc2FnZXMlMkZpbmJveCUzRmJhY2slM0QxJnByb2plY3Q9aG9tZSZzb3VyY2U9bWFpbGJveCZmcm9tPW5hdmkmcGFyZW50X3VybD1odHRwcyUzQSUyRiUyRm1haWwucnUlMkYmcmVzcG9uc2l2ZT1jb21wYWN0</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="mode" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>c2ltcGxl</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="v" index="1">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>Mi4xMC4w</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="account_host" index="2">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YWNjb3VudC5tYWlsLnJ1</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="type" index="3">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>bG9naW4=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="allow_external" index="4">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="app_id_mytracker" index="5">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>NTg1MTk=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="success_redirect" index="6">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>aHR0cHMlM0ElMkYlMkZlLm1haWwucnUlMkZtZXNzYWdlcyUyRmluYm94JTNGYmFjayUzRDE=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="project" index="7">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>aG9tZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="source" index="8">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>bWFpbGJveA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="from" index="9">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>bmF2aQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="parent_url" index="10">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>aHR0cHMlM0ElMkYlMkZtYWlsLnJ1JTJG</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="responsive" index="11">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>Y29tcGFjdA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name=":method" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VU</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":scheme" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":path" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>L2xvZ2luLz9tb2RlPXNpbXBsZSZ2PTIuMTAuMCZhY2NvdW50X2hvc3Q9YWNjb3VudC5tYWlsLnJ1JnR5cGU9bG9naW4mYWxsb3dfZXh0ZXJuYWw9MSZhcHBfaWRfbXl0cmFja2VyPTU4NTE5JnN1Y2Nlc3NfcmVkaXJlY3Q9aHR0cHMlM0ElMkYlMkZlLm1haWwucnUlMkZtZXNzYWdlcyUyRmluYm94JTNGYmFjayUzRDEmcHJvamVjdD1ob21lJnNvdXJjZT1tYWlsYm94JmZyb209bmF2aSZwYXJlbnRfdXJsPWh0dHBzJTNBJTJGJTJGbWFpbC5ydSUyRiZyZXNwb25zaXZlPWNvbXBhY3Q=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":authority" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YWNjb3VudC5tYWlsLnJ1</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9tYWlsLnJ1Lw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="cookie" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YWN0PWNlNTJjY2RjN2I3ZDQ5NjA5OTQzMmQ1ZjJlMzVkMWYwOyBvaWQ9NFFpbThYRURLNFhUNXFxUVF4YWFMOyBtcmN1PTExMTg2NTEzM0Y1RDQ5MUVGOTJCODhBOUZDNkQ7IG1yaGM9M1lXZ0E1WGdyK0V3TWkxN3NtdENnUkdydm81d3FjSEFYUWtHRkhjZXNDVT07IHA9UDhvQ0FEdnRrVmNBOyBpPUFRQmVQeE5sQVFCZEJnVUNBUUE9OyBzZWFyY2h1aWQ9NzI1MzEyMTg2MTY5NTc2MDIyMg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9sb2dpbi8/bW9kZT1zaW1wbGUmdj0yLjEwLjAmYWNjb3VudF9ob3N0PWFjY291bnQubWFpbC5ydSZ0eXBlPWxvZ2luJmFsbG93X2V4dGVybmFsPTEmYXBwX2lkX215dHJhY2tlcj01ODUxOSZzdWNjZXNzX3JlZGlyZWN0PWh0dHBzJTNBJTJGJTJGZS5tYWlsLnJ1JTJGbWVzc2FnZXMlMkZpbmJveCUzRmJhY2slM0QxJnByb2plY3Q9aG9tZSZzb3VyY2U9bWFpbGJveCZmcm9tPW5hdmkmcGFyZW50X3VybD1odHRwcyUzQSUyRiUyRm1haWwucnUlMkYmcmVzcG9uc2l2ZT1jb21wYWN0DQo6YXV0aG9yaXR5OiBhY2NvdW50Lm1haWwucnUNClJlZmVyZXI6IGh0dHBzOi8vbWFpbC5ydS8NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC4wLjAgU2FmYXJpLzUzNy4zNiBFZGcvMTE2LjAuMTkzOC43Ng0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IHJ1DQpBY2NlcHQ6ICovKg0KY29va2llOiBhY3Q9Y2U1MmNjZGM3YjdkNDk2MDk5NDMyZDVmMmUzNWQxZjA7IG9pZD00UWltOFhFREs0WFQ1cXFRUXhhYUw7IG1yY3U9MTExODY1MTMzRjVENDkxRUY5MkI4OEE5RkM2RDsgbXJoYz0zWVdnQTVYZ3IrRXdNaTE3c210Q2dSR3J2bzV3cWNIQVhRa0dGSGNlc0NVPTsgcD1QOG9DQUR2dGtWY0E7IGk9QVFCZVB4TmxBUUJkQmdVQ0FRQT07IHNlYXJjaHVpZD03MjUzMTIxODYxNjk1NzYwMjIyDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="act" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Y2U1MmNjZGM3YjdkNDk2MDk5NDMyZDVmMmUzNWQxZjA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="oid" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NFFpbThYRURLNFhUNXFxUVF4YWFM</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="mrcu" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTExODY1MTMzRjVENDkxRUY5MkI4OEE5RkM2RA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="mrhc" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>M1lXZ0E1WGdyK0V3TWkxN3NtdENnUkdydm81d3FjSEFYUWtHRkhjZXNDVT0=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="p" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>UDhvQ0FEdnRrVmNB</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="i" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVFCZVB4TmxBUUJkQmdVQ0FRQT0=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="searchuid" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NzI1MzEyMTg2MTY5NTc2MDIyMg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
      <HTTPPropertySet>
        <HTTPProperty name="StreamID">1</HTTPProperty>
        <HTTPProperty name="TotalHeadersSize">514</HTTPProperty>
      </HTTPPropertySet>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Status" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="server" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbng=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="date" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyNiBTZXAgMjAyMyAyMDozMDoyMyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="content-type" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sOyBjaGFyc2V0PVVURi04</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-host" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZmF1MzQubS5zbWFpbHJ1Lm5ldA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="set-cookie" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bz06MjI3NTpBZ0FBQUFBPS5zOyBQYXRoPS87IERvbWFpbj1tYWlsLnJ1OyBFeHBpcmVzPVRodSwgMjYgU2VwIDIwMjQgMjA6MzA6MjMgR01U</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-mru-request-id" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGUwOTMyZGNkMTE5NTZiY2JhYzlmMTBiYjYyYzk3Y2M=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="cache-control" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGUsbm8tc3RvcmUsbXVzdC1yZXZhbGlkYXRl</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="pragma" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="expires" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW9uLCAyNiBTZXAgMjAyMiAyMDozMDoyMyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-mru-sota-response" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="strict-transport-security" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="critical-ch" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2VjLUNILVVBLVBsYXRmb3JtLCBTZWMtQ0gtVUEtUGxhdGZvcm0tVmVyc2lvbiwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbiwgU2VjLUNILVVBLU1vZGVsLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLUxpc3Q=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="accept-ch" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2VjLUNILVVBLVBsYXRmb3JtLCBTZWMtQ0gtVUEtUGxhdGZvcm0tVmVyc2lvbiwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbiwgU2VjLUNILVVBLU1vZGVsLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLUxpc3Q=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-xss-protection" index="14">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jazsgcmVwb3J0PWh0dHBzOi8vY3NwcmVwb3J0Lm1haWwucnUveHhzc3Byb3RlY3Rpb24=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="content-security-policy" index="15">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGVmYXVsdC1zcmMgJ25vbmUnOyBiYXNlLXVyaSAnbm9uZSc7IHNjcmlwdC1zcmMgJ3NlbGYnICdub25jZS1kZTA5MzJkY2QxMTk1NmJjYmFjOWYxMGJiNjJjOTdjYycgaHR0cHM6Ly9pbWcuaW1nc21haWwucnUgaHR0cHM6Ly9wb3J0YWwubWFpbC5ydSBodHRwczovL3BvcnRhbC50ZXN0Lm1haWwucnUgaHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vcmVjYXB0Y2hhLyBodHRwczovL3d3dy5nb29nbGUuY29tL3JlY2FwdGNoYS8gaHR0cHM6Ly90b3AtZnd6MS5tYWlsLnJ1ICdyZXBvcnQtc2FtcGxlJyBodHRwczovL2xpbWcuaW1nc21haWwucnU7IHN0eWxlLXNyYyAnc2VsZicgaHR0cHM6Ly9pbWcuaW1nc21haWwucnUgJ3Vuc2FmZS1pbmxpbmUnIGh0dHBzOi8vbGltZy5pbWdzbWFpbC5ydTsgZm9udC1zcmMgaHR0cHM6Ly9pbWcuaW1nc21haWwucnU7IGltZy1zcmMgJ3NlbGYnIGRhdGE6IGh0dHBzOi8vaW1nLmltZ3NtYWlsLnJ1IGh0dHBzOi8vc3RhdC5yYWRhci5pbWdzbWFpbC5ydSBodHRwczovL3JzLm1haWwucnUgaHR0cHM6Ly93d3cudG5zLWNvdW50ZXIucnUgaHR0cHM6Ly90b3AtZnd6MS5tYWlsLnJ1IGh0dHBzOi8vZmlsaW4ubWFpbC5ydSBodHRwczovL3IzLm1haWwucnUgaHR0cHM6Ly9jLm1haWwucnUgaHR0cHM6Ly9jLm15LmNvbSBodHRwczovLyoudXNlcmFwaS5jb20gaHR0cHM6Ly8qLnZrLmNvbSBodHRwczovLyoudmsucnUgaHR0cHM6Ly92ay5jb20gaHR0cHM6Ly92ay5ydSBodHRwczovL2xpbWcuaW1nc21haWwucnUgaHR0cHM6Ly9yZXRpbmEubmV3cy5tYWlsLnJ1IGh0dHBzOi8veHJheS5tYWlsLnJ1IGh0dHBzOi8vYWQubWFpbC5ydSBodHRwczovL3Ryay5tYWlsLnJ1IGh0dHBzOi8vci5tcmFkeC5uZXQ7IGNvbm5lY3Qtc3JjICdzZWxmJyBodHRwczovL3BvcnRhbC5tYWlsLnJ1IGh0dHBzOi8vYXV0aC5tYWlsLnJ1IGh0dHBzOi8vKi5hdXRoLm1haWwucnUgaHR0cHM6Ly9hai1odHRwcy5teS5jb20gaHR0cHM6Ly9hY2NvdW50Lm1haWwucnUgaHR0cHM6Ly8qLnRlc3QubWFpbC5ydSBodHRwczovL2xvZ2luLnZrLmNvbSBodHRwczovL2xvZ2luLnZrLnJ1IHdzczovL3JlYnVzLmUubWFpbC5ydSBodHRwczovL29rLnJ1IGh0dHBzOi8vYmFyLmxvdmUubWFpbC5ydSBodHRwczovL3ZrLmNvbSBodHRwczovL3ZrLnJ1IGh0dHBzOi8veHJheS5tYWlsLnJ1IGh0dHBzOi8vYWQubWFpbC5ydTsgY2hpbGQtc3JjIGh0dHBzOi8vYWNjb3VudC5tYWlsLnJ1IGh0dHBzOi8vKi50ZXN0Lm1haWwucnUgaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9yZWNhcHRjaGEvIGh0dHBzOi8vYXV0aC5tYWlsLnJ1IGh0dHBzOi8vY29ubmVjdC52ay5jb20gaHR0cHM6Ly9jb25uZWN0LnZrLnJ1IGh0dHBzOi8vaWQudmsuY29tIGh0dHBzOi8vaWQudmsucnUgaHR0cHM6Ly9tYXJ1c2lhLXdlYi5nby5tYWlsLnJ1IGh0dHBzOi8vbGltZy5pbWdzbWFpbC5ydTsgcmVwb3J0LXVyaSBodHRwczovL2NzcHJlcG9ydC5tYWlsLnJ1L2xvZ2luOw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-host" index="16">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZmF1MzQubS5zbWFpbHJ1Lm5ldA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="strict-transport-security" index="17">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0xNTc2ODAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-content-type-options" index="18">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="vary" index="19">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UmVmZXJlcg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="set-cookie" index="20">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bXJoYz05OC8veE9YWXEzQ21Ea0d6U2NkdGJXZThybFhGODdISUM5UVVOUDZyN1VZPTsgUGF0aD0vOyBEb21haW49bWFpbC5ydTsgTWF4LUFnZT0zMTUzNjAwMDA7IEh0dHBPbmx5OyBTZWN1cmU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="content-encoding" index="21">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueA0KZGF0ZTogVHVlLCAyNiBTZXAgMjAyMyAyMDozMDoyMyBHTVQNCmNvbnRlbnQtdHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQp4LWhvc3Q6IGZhdTM0Lm0uc21haWxydS5uZXQNCnNldC1jb29raWU6IG89OjIyNzU6QWdBQUFBQT0uczsgUGF0aD0vOyBEb21haW49bWFpbC5ydTsgRXhwaXJlcz1UaHUsIDI2IFNlcCAyMDI0IDIwOjMwOjIzIEdNVA0KeC1tcnUtcmVxdWVzdC1pZDogZGUwOTMyZGNkMTE5NTZiY2JhYzlmMTBiYjYyYzk3Y2MNCmNhY2hlLWNvbnRyb2w6IG5vLWNhY2hlLG5vLXN0b3JlLG11c3QtcmV2YWxpZGF0ZQ0KcHJhZ21hOiBuby1jYWNoZQ0KZXhwaXJlczogTW9uLCAyNiBTZXAgMjAyMiAyMDozMDoyMyBHTVQNCngtbXJ1LXNvdGEtcmVzcG9uc2U6IDENCnN0cmljdC10cmFuc3BvcnQtc2VjdXJpdHk6IG1heC1hZ2U9MzE1MzYwMDA7IGluY2x1ZGVTdWJEb21haW5zOyBwcmVsb2FkDQpjcml0aWNhbC1jaDogU2VjLUNILVVBLVBsYXRmb3JtLCBTZWMtQ0gtVUEtUGxhdGZvcm0tVmVyc2lvbiwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbiwgU2VjLUNILVVBLU1vZGVsLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLUxpc3QNCmFjY2VwdC1jaDogU2VjLUNILVVBLVBsYXRmb3JtLCBTZWMtQ0gtVUEtUGxhdGZvcm0tVmVyc2lvbiwgU2VjLUNILVVBLUZ1bGwtVmVyc2lvbiwgU2VjLUNILVVBLU1vZGVsLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLUxpc3QNCngteHNzLXByb3RlY3Rpb246IDE7IG1vZGU9YmxvY2s7IHJlcG9ydD1odHRwczovL2NzcHJlcG9ydC5tYWlsLnJ1L3h4c3Nwcm90ZWN0aW9uDQpjb250ZW50LXNlY3VyaXR5LXBvbGljeTogZGVmYXVsdC1zcmMgJ25vbmUnOyBiYXNlLXVyaSAnbm9uZSc7IHNjcmlwdC1zcmMgJ3NlbGYnICdub25jZS1kZTA5MzJkY2QxMTk1NmJjYmFjOWYxMGJiNjJjOTdjYycgaHR0cHM6Ly9pbWcuaW1nc21haWwucnUgaHR0cHM6Ly9wb3J0YWwubWFpbC5ydSBodHRwczovL3BvcnRhbC50ZXN0Lm1haWwucnUgaHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vcmVjYXB0Y2hhLyBodHRwczovL3d3dy5nb29nbGUuY29tL3JlY2FwdGNoYS8gaHR0cHM6Ly90b3AtZnd6MS5tYWlsLnJ1ICdyZXBvcnQtc2FtcGxlJyBodHRwczovL2xpbWcuaW1nc21haWwucnU7IHN0eWxlLXNyYyAnc2VsZicgaHR0cHM6Ly9pbWcuaW1nc21haWwucnUgJ3Vuc2FmZS1pbmxpbmUnIGh0dHBzOi8vbGltZy5pbWdzbWFpbC5ydTsgZm9udC1zcmMgaHR0cHM6Ly9pbWcuaW1nc21haWwucnU7IGltZy1zcmMgJ3NlbGYnIGRhdGE6IGh0dHBzOi8vaW1nLmltZ3NtYWlsLnJ1IGh0dHBzOi8vc3RhdC5yYWRhci5pbWdzbWFpbC5ydSBodHRwczovL3JzLm1haWwucnUgaHR0cHM6Ly93d3cudG5zLWNvdW50ZXIucnUgaHR0cHM6Ly90b3AtZnd6MS5tYWlsLnJ1IGh0dHBzOi8vZmlsaW4ubWFpbC5ydSBodHRwczovL3IzLm1haWwucnUgaHR0cHM6Ly9jLm1haWwucnUgaHR0cHM6Ly9jLm15LmNvbSBodHRwczovLyoudXNlcmFwaS5jb20gaHR0cHM6Ly8qLnZrLmNvbSBodHRwczovLyoudmsucnUgaHR0cHM6Ly92ay5jb20gaHR0cHM6Ly92ay5ydSBodHRwczovL2xpbWcuaW1nc21haWwucnUgaHR0cHM6Ly9yZXRpbmEubmV3cy5tYWlsLnJ1IGh0dHBzOi8veHJheS5tYWlsLnJ1IGh0dHBzOi8vYWQubWFpbC5ydSBodHRwczovL3Ryay5tYWlsLnJ1IGh0dHBzOi8vci5tcmFkeC5uZXQ7IGNvbm5lY3Qtc3JjICdzZWxmJyBodHRwczovL3BvcnRhbC5tYWlsLnJ1IGh0dHBzOi8vYXV0aC5tYWlsLnJ1IGh0dHBzOi8vKi5hdXRoLm1haWwucnUgaHR0cHM6Ly9hai1odHRwcy5teS5jb20gaHR0cHM6Ly9hY2NvdW50Lm1haWwucnUgaHR0cHM6Ly8qLnRlc3QubWFpbC5ydSBodHRwczovL2xvZ2luLnZrLmNvbSBodHRwczovL2xvZ2luLnZrLnJ1IHdzczovL3JlYnVzLmUubWFpbC5ydSBodHRwczovL29rLnJ1IGh0dHBzOi8vYmFyLmxvdmUubWFpbC5ydSBodHRwczovL3ZrLmNvbSBodHRwczovL3ZrLnJ1IGh0dHBzOi8veHJheS5tYWlsLnJ1IGh0dHBzOi8vYWQubWFpbC5ydTsgY2hpbGQtc3JjIGh0dHBzOi8vYWNjb3VudC5tYWlsLnJ1IGh0dHBzOi8vKi50ZXN0Lm1haWwucnUgaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9yZWNhcHRjaGEvIGh0dHBzOi8vYXV0aC5tYWlsLnJ1IGh0dHBzOi8vY29ubmVjdC52ay5jb20gaHR0cHM6Ly9jb25uZWN0LnZrLnJ1IGh0dHBzOi8vaWQudmsuY29tIGh0dHBzOi8vaWQudmsucnUgaHR0cHM6Ly9tYXJ1c2lhLXdlYi5nby5tYWlsLnJ1IGh0dHBzOi8vbGltZy5pbWdzbWFpbC5ydTsgcmVwb3J0LXVyaSBodHRwczovL2NzcHJlcG9ydC5tYWlsLnJ1L2xvZ2luOw0KeC1ob3N0OiBmYXUzNC5tLnNtYWlscnUubmV0DQpzdHJpY3QtdHJhbnNwb3J0LXNlY3VyaXR5OiBtYXgtYWdlPTE1NzY4MDAwOyBpbmNsdWRlU3ViRG9tYWluczsgcHJlbG9hZA0KeC1jb250ZW50LXR5cGUtb3B0aW9uczogbm9zbmlmZg0KdmFyeTogUmVmZXJlcg0Kc2V0LWNvb2tpZTogbXJoYz05OC8veE9YWXEzQ21Ea0d6U2NkdGJXZThybFhGODdISUM5UVVOUDZyN1VZPTsgUGF0aD0vOyBEb21haW49bWFpbC5ydTsgTWF4LUFnZT0zMTUzNjAwMDA7IEh0dHBPbmx5OyBTZWN1cmUNCmNvbnRlbnQtZW5jb2Rpbmc6IGd6aXANCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <HTTPPropertySet>
        <HTTPProperty name="StreamID">1</HTTPProperty>
        <HTTPProperty name="TotalHeadersSize">1911</HTTPProperty>
      </HTTPPropertySet>
    </HTTPResponse>
    <HTTPTask id="23" hostname="img.imgsmail.ru" path="/pkgs/login.mail.ru/199814/css/login.css" url="https://img.imgsmail.ru/pkgs/login.mail.ru/199814/css/login.css" ip="217.69.139.102" port="443" client_ip="192.168.1.11" client_port="7754" connectionId="2632" origin="HTML" encodingType="UTF8" ordinal="1" startDateTime="2023-09-26T23:30:23.618+03:00" startTime="2442" endTime="2691" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name=":method" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VU</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":scheme" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":path" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>L3BrZ3MvbG9naW4ubWFpbC5ydS8xOTk4MTQvY3NzL2xvZ2luLmNzcw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":authority" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1nLmltZ3NtYWlsLnJ1</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9hY2NvdW50Lm1haWwucnUvbG9naW4vP21vZGU9c2ltcGxlJnY9Mi4xMC4wJmFjY291bnRfaG9zdD1hY2NvdW50Lm1haWwucnUmdHlwZT1sb2dpbiZhbGxvd19leHRlcm5hbD0xJmFwcF9pZF9teXRyYWNrZXI9NTg1MTkmc3VjY2Vzc19yZWRpcmVjdD1odHRwcyUzQSUyRiUyRmUubWFpbC5ydSUyRm1lc3NhZ2VzJTJGaW5ib3glM0ZiYWNrJTNEMSZwcm9qZWN0PWhvbWUmc291cmNlPW1haWxib3gmZnJvbT1uYXZpJnBhcmVudF91cmw9aHR0cHMlM0ElMkYlMkZtYWlsLnJ1JTJGJnJlc3BvbnNpdmU9Y29tcGFjdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9wa2dzL2xvZ2luLm1haWwucnUvMTk5ODE0L2Nzcy9sb2dpbi5jc3MNCjphdXRob3JpdHk6IGltZy5pbWdzbWFpbC5ydQ0KUmVmZXJlcjogaHR0cHM6Ly9hY2NvdW50Lm1haWwucnUvbG9naW4vP21vZGU9c2ltcGxlJnY9Mi4xMC4wJmFjY291bnRfaG9zdD1hY2NvdW50Lm1haWwucnUmdHlwZT1sb2dpbiZhbGxvd19leHRlcm5hbD0xJmFwcF9pZF9teXRyYWNrZXI9NTg1MTkmc3VjY2Vzc19yZWRpcmVjdD1odHRwcyUzQSUyRiUyRmUubWFpbC5ydSUyRm1lc3NhZ2VzJTJGaW5ib3glM0ZiYWNrJTNEMSZwcm9qZWN0PWhvbWUmc291cmNlPW1haWxib3gmZnJvbT1uYXZpJnBhcmVudF91cmw9aHR0cHMlM0ElMkYlMkZtYWlsLnJ1JTJGJnJlc3BvbnNpdmU9Y29tcGFjdA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUNCkFjY2VwdDogKi8qDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">1</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">376</HTTPProperty>
        </HTTPPropertySet>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>0</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Status" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="server" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbng=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="date" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAyNiBTZXAgMjAyMyAyMDozMDoyNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="last-modified" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAxMiBTZXAgMjAyMyAwOTo0MTowOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="etag" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Vy8iNjUwMDMyMzQtOTk2NSI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="timing-allow-origin" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Kg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-content-type-options" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9zbmlmZg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="vary" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>T3JpZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="expires" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAzMSBEZWMgMjAzNyAyMzo1NTo1NSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cache-control" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT0zMTUzNjAwMDA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-encoding" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueA0KZGF0ZTogVHVlLCAyNiBTZXAgMjAyMyAyMDozMDoyNCBHTVQNCmNvbnRlbnQtdHlwZTogdGV4dC9jc3MNCmxhc3QtbW9kaWZpZWQ6IFR1ZSwgMTIgU2VwIDIwMjMgMDk6NDE6MDggR01UDQpldGFnOiBXLyI2NTAwMzIzNC05OTY1Ig0KdGltaW5nLWFsbG93LW9yaWdpbjogKg0KeC1jb250ZW50LXR5cGUtb3B0aW9uczogbm9zbmlmZg0KdmFyeTogT3JpZ2luDQpleHBpcmVzOiBUaHUsIDMxIERlYyAyMDM3IDIzOjU1OjU1IEdNVA0KY2FjaGUtY29udHJvbDogbWF4LWFnZT0zMTUzNjAwMDANCmNvbnRlbnQtZW5jb2Rpbmc6IGd6aXANCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">1</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">209</HTTPProperty>
        </HTTPPropertySet>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="24" hostname="rs.mail.ru" path="/d26047874.gif?sz=49&amp;rnd=205219937&amp;ts=1695760223&amp;sz=49" url="https://rs.mail.ru/d26047874.gif?sz=49&amp;rnd=205219937&amp;ts=1695760223&amp;sz=49" ip="95.163.41.56" port="443" client_ip="192.168.1.11" client_port="7738" connectionId="2484" origin="HTML" encodingType="UTF8" ordinal="2" startDateTime="2023-09-26T23:30:23.751+03:00" startTime="2574" endTime="2602" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>c3o9NDkmcm5kPTIwNTIxOTkzNyZ0cz0xNjk1NzYwMjIzJnN6PTQ5</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="sz" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="rnd" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjA1MjE5OTM3</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ts" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTY5NTc2MDIyMw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sz" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name=":method" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VU</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":scheme" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":path" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>L2QyNjA0Nzg3NC5naWY/c3o9NDkmcm5kPTIwNTIxOTkzNyZ0cz0xNjk1NzYwMjIzJnN6PTQ5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":authority" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnMubWFpbC5ydQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9hY2NvdW50Lm1haWwucnUvbG9naW4vP21vZGU9c2ltcGxlJnY9Mi4xMC4wJmFjY291bnRfaG9zdD1hY2NvdW50Lm1haWwucnUmdHlwZT1sb2dpbiZhbGxvd19leHRlcm5hbD0xJmFwcF9pZF9teXRyYWNrZXI9NTg1MTkmc3VjY2Vzc19yZWRpcmVjdD1odHRwcyUzQSUyRiUyRmUubWFpbC5ydSUyRm1lc3NhZ2VzJTJGaW5ib3glM0ZiYWNrJTNEMSZwcm9qZWN0PWhvbWUmc291cmNlPW1haWxib3gmZnJvbT1uYXZpJnBhcmVudF91cmw9aHR0cHMlM0ElMkYlMkZtYWlsLnJ1JTJGJnJlc3BvbnNpdmU9Y29tcGFjdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cnU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cookie" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YWN0PWNlNTJjY2RjN2I3ZDQ5NjA5OTQzMmQ1ZjJlMzVkMWYwOyBvaWQ9NFFpbThYRURLNFhUNXFxUVF4YWFMOyBtcmN1PTExMTg2NTEzM0Y1RDQ5MUVGOTJCODhBOUZDNkQ7IG1yaGM9OTgvL3hPWFlxM0NtRGtHelNjZHRiV2U4cmxYRjg3SElDOVFVTlA2cjdVWT07IHA9UDhvQ0FEdnRrVmNBOyBpPUFRQmVQeE5sQVFCZEJnVUNBUUE9OyBzZWFyY2h1aWQ9NzI1MzEyMTg2MTY5NTc2MDIyMjsgbz06MjI3NTpBZ0FBQUFBPS5z</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9kMjYwNDc4NzQuZ2lmP3N6PTQ5JnJuZD0yMDUyMTk5MzcmdHM9MTY5NTc2MDIyMyZzej00OQ0KOmF1dGhvcml0eTogcnMubWFpbC5ydQ0KUmVmZXJlcjogaHR0cHM6Ly9hY2NvdW50Lm1haWwucnUvbG9naW4vP21vZGU9c2ltcGxlJnY9Mi4xMC4wJmFjY291bnRfaG9zdD1hY2NvdW50Lm1haWwucnUmdHlwZT1sb2dpbiZhbGxvd19leHRlcm5hbD0xJmFwcF9pZF9teXRyYWNrZXI9NTg1MTkmc3VjY2Vzc19yZWRpcmVjdD1odHRwcyUzQSUyRiUyRmUubWFpbC5ydSUyRm1lc3NhZ2VzJTJGaW5ib3glM0ZiYWNrJTNEMSZwcm9qZWN0PWhvbWUmc291cmNlPW1haWxib3gmZnJvbT1uYXZpJnBhcmVudF91cmw9aHR0cHMlM0ElMkYlMkZtYWlsLnJ1JTJGJnJlc3BvbnNpdmU9Y29tcGFjdA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMTYuMC4xOTM4Ljc2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogcnUNCkFjY2VwdDogKi8qDQpjb29raWU6IGFjdD1jZTUyY2NkYzdiN2Q0OTYwOTk0MzJkNWYyZTM1ZDFmMDsgb2lkPTRRaW04WEVESzRYVDVxcVFReGFhTDsgbXJjdT0xMTE4NjUxMzNGNUQ0OTFFRjkyQjg4QTlGQzZEOyBtcmhjPTk4Ly94T1hZcTNDbURrR3pTY2R0YldlOHJsWEY4N0hJQzlRVU5QNnI3VVk9OyBwPVA4b0NBRHZ0a1ZjQTsgaT1BUUJlUHhObEFRQmRCZ1VDQVFBPTsgc2VhcmNodWlkPTcyNTMxMjE4NjE2OTU3NjAyMjI7IG89OjIyNzU6QWdBQUFBQT0ucw0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="act" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Y2U1MmNjZGM3YjdkNDk2MDk5NDMyZDVmMmUzNWQxZjA=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="oid" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NFFpbThYRURLNFhUNXFxUVF4YWFM</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="mrcu" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTExODY1MTMzRjVENDkxRUY5MkI4OEE5RkM2RA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="mrhc" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>OTgvL3hPWFlxM0NtRGtHelNjZHRiV2U4cmxYRjg3SElDOVFVTlA2cjdVWT0=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="p" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>UDhvQ0FEdnRrVmNB</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="i" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>QVFCZVB4TmxBUUJkQmdVQ0FRQT0=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="searchuid" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NzI1MzEyMTg2MTY5NTc2MDIyMg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="o" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>OjIyNzU6QWdBQUFBQT0ucw==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">5</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">457</HTTPProperty>
        </HTTPPropertySet>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>43</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Status" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="server" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbng=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="date" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAyNiBTZXAgMjAyMyAyMDozMDoyMyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvZ2lm</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-length" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="set-cookie" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aT1BUUJlUHhObEFRQmRCZ1VDQVFBPTsgZXhwaXJlcz1TdW4sIDI0IE1hciAyMDI0IDIwOjMwOjIzIEdNVDsgcGF0aD0vOyBkb21haW49Lm1haWwucnU7IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cache-control" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHJpdmF0ZSwgbm8tY2FjaGUsIG5vLXN0b3Jl</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="p3p" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cG9saWN5cmVmPSIvdzNjL3AzcC54bWwiLCBDUD0iTk9JIERTUCBDT1IgTklEIFBTQW8gUFNEbyBPVVIgQlVTIFVOSSBOQVYgU1RBIElOVCI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="timing-allow-origin" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Kg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueA0KZGF0ZTogVHVlLCAyNiBTZXAgMjAyMyAyMDozMDoyMyBHTVQNCmNvbnRlbnQtdHlwZTogaW1hZ2UvZ2lmDQpjb250ZW50LWxlbmd0aDogNDMNCnNldC1jb29raWU6IGk9QVFCZVB4TmxBUUJkQmdVQ0FRQT07IGV4cGlyZXM9U3VuLCAyNCBNYXIgMjAyNCAyMDozMDoyMyBHTVQ7IHBhdGg9LzsgZG9tYWluPS5tYWlsLnJ1OyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNCmNhY2hlLWNvbnRyb2w6IHByaXZhdGUsIG5vLWNhY2hlLCBuby1zdG9yZQ0KcDNwOiBwb2xpY3lyZWY9Ii93M2MvcDNwLnhtbCIsIENQPSJOT0kgRFNQIENPUiBOSUQgUFNBbyBQU0RvIE9VUiBCVVMgVU5JIE5BViBTVEEgSU5UIg0KdGltaW5nLWFsbG93LW9yaWdpbjogKg0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0lGODlhAQABAIABAAAAAP///yH5BAEAAAEALAAAAAABAAEAAAICTAEAOw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">5</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">260</HTTPProperty>
        </HTTPPropertySet>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>